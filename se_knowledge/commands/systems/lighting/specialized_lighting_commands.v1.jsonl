{"id": "lighting.set_intensity.corner_light.v1", "title": "Set corner light intensity", "category": "lighting", "verb": "set_intensity", "natural_language_triggers": ["set corner light intensity", "corner light brightness", "decorative light brightness"], "targets": {"allowed_types": ["Corner Light", "Corner Light Inverted"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_corner_light"}, "parameters": [{"name": "intensity", "type": "float", "range": {"min": 0.5, "max": 10.0}, "units": "intensity", "default": 1.0, "required": true, "validation": "clamp_to_range", "terminal_name": "Intensity"}], "se_implementation": {"toolbar_actions": ["IncreaseIntensity", "DecreaseIntensity"], "terminal_path": ["Terminal", "Corner Light", "Intensity"], "modapi_calls": [{"interface": "IMyLightingBlock", "property": "Intensity", "method": "set_Intensity(float value)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Corner light must exist", "Corner light must be functional", "Corner light must be powered", "User must have control authority"], "effects": ["CornerLight.Intensity = intensity", "Light brightness changes", "Decorative illumination adjusts"], "constraints": {"power_required_mw": 0.00003, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_corner_light(target)", "check_block_functional(target)", "validate_intensity_range(intensity)", "check_user_authority(target)"], "error_cases": [{"condition": "corner_light_not_found", "message": "No corner lights matching '{target}' found", "recovery": "List available corner lights"}, {"condition": "intensity_out_of_range", "message": "Intensity {intensity} out of range (0.5-10.0)", "recovery": "Use intensity value between 0.5 and 10.0"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set corner accent lights to 3", "parsed": {"verb": "set_intensity", "target": {"name": "corner accent lights"}, "parameters": {"intensity": 3.0}}}], "synonyms": ["corner light brightness", "decorative light brightness"], "tags": ["lighting", "corner", "decorative", "intensity"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Corner Light"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "lighting.set_intensity.light_panel.v1", "title": "Set light panel intensity", "category": "lighting", "verb": "set_intensity", "natural_language_triggers": ["set panel light intensity", "light panel brightness", "panel illumination"], "targets": {"allowed_types": ["Light Panel"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_light_panel"}, "parameters": [{"name": "intensity", "type": "float", "range": {"min": 0.5, "max": 8.0}, "units": "intensity", "default": 1.0, "required": true, "validation": "clamp_to_panel_range", "terminal_name": "Intensity"}], "se_implementation": {"toolbar_actions": ["IncreaseIntensity", "DecreaseIntensity"], "terminal_path": ["Terminal", "Light Panel", "Intensity"], "modapi_calls": [{"interface": "IMyLightingBlock", "property": "Intensity", "method": "set_Intensity(float value)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Light panel must exist", "Light panel must be functional", "Light panel must be powered", "User must have control authority"], "effects": ["LightPanel.Intensity = intensity", "Panel brightness changes", "Area illumination adjusts"], "constraints": {"power_required_mw": 0.0001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_light_panel(target)", "check_block_functional(target)", "validate_panel_intensity_range(intensity)", "check_user_authority(target)"], "error_cases": [{"condition": "light_panel_not_found", "message": "No light panels matching '{target}' found", "recovery": "List available light panels"}, {"condition": "intensity_out_of_range", "message": "Panel intensity {intensity} out of range (0.5-8.0)", "recovery": "Use intensity value between 0.5 and 8.0"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set wall panels to 5", "parsed": {"verb": "set_intensity", "target": {"name": "wall panels"}, "parameters": {"intensity": 5.0}}}], "synonyms": ["light panel brightness", "panel illumination"], "tags": ["lighting", "panel", "area", "intensity"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/Light_Panel.md", "sections": ["Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "lighting.set_floodlight_spread.floodlight.v1", "title": "Set floodlight beam spread", "category": "lighting", "verb": "set_floodlight_spread", "natural_language_triggers": ["set floodlight spread", "beam spread", "flood angle", "light spread"], "targets": {"allowed_types": ["Floodlight", "Floodlight Angled"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_floodlight"}, "parameters": [{"name": "spread_angle", "type": "angle_degrees", "range": {"min": 15, "max": 120}, "units": "degrees", "default": 60, "required": true, "validation": "floodlight_angle_range", "terminal_name": "Beam Spread"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Floodlight", "Beam Spread"], "modapi_calls": [{"interface": "IMyReflectorLight", "property": "ReflectorConeMaxAngle", "method": "set_ReflectorConeMaxAngle(float angle)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Floodlight must exist", "Floodlight must be functional", "User must have control authority"], "effects": ["Floodlight beam spread adjusts", "Illumination coverage changes", "Light distribution pattern changes"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_floodlight(target)", "check_block_functional(target)", "validate_spread_angle_range(spread_angle)", "check_user_authority(target)"], "error_cases": [{"condition": "floodlight_not_found", "message": "No floodlights matching '{target}' found", "recovery": "List available floodlights"}, {"condition": "spread_angle_invalid", "message": "Beam spread {spread_angle}° out of range (15-120°)", "recovery": "Use spread angle between 15 and 120 degrees"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set construction floodlights to wide spread", "parsed": {"verb": "set_floodlight_spread", "target": {"name": "construction floodlights"}, "parameters": {"spread_angle": 90}}}, {"input": "narrow beam flood lights", "parsed": {"verb": "set_floodlight_spread", "target": {"type": "floodlight"}, "parameters": {"spread_angle": 30}}}], "synonyms": ["beam spread", "flood angle", "light spread"], "tags": ["lighting", "floodlight", "spread", "beam", "angle"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/Floodlight_Angled.md", "sections": ["Beam Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "lighting.create_lighting_zone.zone.v1", "title": "Create lighting control zone", "category": "lighting", "verb": "create_lighting_zone", "natural_language_triggers": ["create lighting zone", "define light zone", "lighting area", "light group zone"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_lights_in_zone"}, "parameters": [{"name": "zone_name", "type": "text", "required": true, "validation": "zone_name_format"}, {"name": "zone_bounds", "type": "coordinate_pair", "required": true, "validation": "coordinate_bounds", "description": "Two GPS coordinates defining zone boundaries"}, {"name": "default_intensity", "type": "float", "range": {"min": 0.5, "max": 10.0}, "required": false, "default": 1.0, "validation": "intensity_range"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Lighting", "Zones"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateLightingZone(zone_name, bounds, settings)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Lights must exist in specified area", "Zone name must be unique", "Zone bounds must be valid", "User must have control authority"], "effects": ["New lighting zone created", "Lights in area associated with zone", "Zone-based control enabled", "Zone settings applied"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5000, "instruction_cost": 30}, "validation_hooks": ["check_zone_name_unique(zone_name)", "validate_zone_bounds(zone_bounds)", "check_lights_in_zone(zone_bounds)", "check_user_authority_grid()"], "error_cases": [{"condition": "zone_name_exists", "message": "Lighting zone '{zone_name}' already exists", "recovery": "Choose a different zone name"}, {"condition": "no_lights_in_zone", "message": "No lights found in specified zone boundaries", "recovery": "Adjust zone boundaries to include lights"}, {"condition": "invalid_bounds", "message": "Invalid zone boundary coordinates", "recovery": "Use valid GPS coordinate pairs"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create lighting zone Bridge from GPS:A:0:0:0: to GPS:B:50:10:50:", "parsed": {"verb": "create_lighting_zone", "parameters": {"zone_name": "Bridge", "zone_bounds": ["GPS:A:0:0:0:", "GPS:B:50:10:50:"]}}}], "synonyms": ["define light zone", "lighting area", "light group zone"], "tags": ["lighting", "zone", "organization", "management"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/", "sections": ["Zone Management"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "lighting.emergency_lighting.emergency.v1", "title": "Activate emergency lighting mode", "category": "lighting", "verb": "emergency_lighting", "natural_language_triggers": ["emergency lighting", "emergency lights", "low power lighting", "critical lighting only"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_lighting_blocks"}, "parameters": [{"name": "preserve_zones", "type": "text_array", "required": false, "default": ["bridge", "medical", "emergency"], "validation": "zone_names_exist"}, {"name": "minimum_intensity", "type": "float", "range": {"min": 0.5, "max": 2.0}, "required": false, "default": 0.8, "validation": "emergency_intensity_range"}], "se_implementation": {"toolbar_actions": ["Emergency_Lighting"], "terminal_path": ["Terminal", "Lighting", "Emergency Mode"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "ActivateEmergencyLighting(zones, intensity)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Lights must exist on grid", "Power crisis or emergency condition", "User must have emergency authority"], "effects": ["Non-essential lights dimmed or disabled", "Critical area lighting preserved", "Power consumption minimized", "Emergency lighting patterns activated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "admin_or_emergency", "execution_time_ms": 3000, "instruction_cost": 40}, "validation_hooks": ["check_lights_exist_on_grid()", "check_emergency_condition()", "validate_preserve_zones(preserve_zones)", "check_emergency_authority()"], "error_cases": [{"condition": "no_emergency_condition", "message": "Emergency lighting only available during power crisis", "recovery": "Use normal lighting controls"}, {"condition": "no_emergency_authority", "message": "Emergency lighting requires admin or emergency authority", "recovery": "Emergency protocols require elevated permissions"}, {"condition": "preserve_zone_not_found", "message": "Preserve zone '{zone}' not found", "recovery": "Check zone names or remove invalid zones"}], "safety_class": "emergency", "idempotent": false, "reversible": true, "examples": [{"input": "emergency lighting", "parsed": {"verb": "emergency_lighting", "target": {"selector": "all"}}}, {"input": "critical lighting only preserve medical", "parsed": {"verb": "emergency_lighting", "target": {"selector": "all"}, "parameters": {"preserve_zones": ["medical", "bridge"]}}}], "synonyms": ["emergency lights", "low power lighting", "critical lighting only"], "tags": ["lighting", "emergency", "power_saving", "critical"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Emergency Procedures"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "lighting.restore_normal_lighting.normal.v1", "title": "Restore normal lighting mode", "category": "lighting", "verb": "restore_normal_lighting", "natural_language_triggers": ["restore normal lighting", "normal lights", "restore lighting", "exit emergency lighting"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_lighting_blocks"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Normal_Lighting"], "terminal_path": ["Terminal", "Lighting", "Normal Mode"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "RestoreNormalLighting()"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Lights must exist on grid", "Currently in emergency lighting mode", "Sufficient power available", "User must have control authority"], "effects": ["All lights restored to previous settings", "Emergency mode disabled", "Normal power consumption resumed", "Full lighting functionality restored"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5000, "instruction_cost": 25}, "validation_hooks": ["check_lights_exist_on_grid()", "check_emergency_lighting_active()", "check_sufficient_power_for_normal()", "check_user_authority_grid()"], "error_cases": [{"condition": "not_in_emergency_mode", "message": "Lighting is not currently in emergency mode", "recovery": "Lighting is already in normal mode"}, {"condition": "insufficient_power", "message": "Insufficient power to restore normal lighting", "recovery": "Increase power generation or reduce consumption"}, {"condition": "restore_failed", "message": "Failed to restore normal lighting", "recovery": "Check individual light systems"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "restore normal lighting", "parsed": {"verb": "restore_normal_lighting", "target": {"selector": "all"}}}, {"input": "exit emergency lighting", "parsed": {"verb": "restore_normal_lighting", "target": {"selector": "all"}}}], "synonyms": ["normal lights", "restore lighting", "exit emergency lighting"], "tags": ["lighting", "normal", "restore", "full_power"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Lighting Modes"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}