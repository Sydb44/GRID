{"id": "vehicles.set_propulsion_override.wheel.v1", "title": "Set wheel propulsion override", "category": "wheels_vehicles", "verb": "set_propulsion_override", "natural_language_triggers": ["set propulsion override", "wheel propulsion override", "driving override", "cruise control"], "targets": {"allowed_types": ["Wheel Suspension 1x1", "Wheel Suspension 2x2", "Wheel Suspension 3x3", "Wheel Suspension 5x5", "Short Wheel Suspension 1x1", "Short Wheel Suspension 2x2", "Short Wheel Suspension 3x3", "Short Wheel Suspension 5x5"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_wheel_suspension"}, "parameters": [{"name": "override_percentage", "type": "float", "range": {"min": -100.0, "max": 100.0}, "units": "%", "default": 0.0, "required": true, "validation": "propulsion_override_range", "terminal_name": "Propulsion Override", "description": "Positive = forward, negative = reverse"}], "se_implementation": {"toolbar_actions": ["IncreasePropulsionOverride", "DecreasePropulsionOverride"], "terminal_path": ["Terminal", "Wheel Suspension", "Propulsion Override"], "modapi_calls": [{"interface": "IMyMotorSuspension", "property": "PropulsionOverride", "method": "set_PropulsionOverride(float override)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Wheel suspension must exist", "Wheel suspension must be functional", "Propulsion must be enabled", "Override value must be within limits", "User must have control authority"], "effects": ["Wheel.PropulsionOverride = override_percentage/100", "Automatic propulsion control set", "Cruise control activated"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_wheel_suspension(target)", "check_block_functional(target)", "check_propulsion_enabled(target)", "validate_propulsion_override_range(override_percentage)", "check_user_authority(target)"], "error_cases": [{"condition": "wheel_suspension_not_found", "message": "No wheel suspensions matching '{target}' found", "recovery": "List available wheel suspensions"}, {"condition": "propulsion_not_enabled", "message": "Propulsion not enabled on '{target}'", "recovery": "Enable propulsion before setting override"}, {"condition": "override_out_of_range", "message": "Propulsion override {override_percentage}% out of range (-100 to 100)", "recovery": "Use override between -100% (reverse) and 100% (forward)"}], "safety_class": "caution", "idempotent": true, "reversible": true, "examples": [{"input": "set propulsion override 50% forward", "parsed": {"verb": "set_propulsion_override", "target": {"name": "drive wheels"}, "parameters": {"override_percentage": 50.0}}}, {"input": "cruise control 25 percent", "parsed": {"verb": "set_propulsion_override", "target": {"type": "wheel_suspension"}, "parameters": {"override_percentage": 25.0}}}], "synonyms": ["wheel propulsion override", "driving override", "cruise control"], "tags": ["vehicles", "wheels", "override", "automation"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorSuspension.md", "sections": ["Properties", "PropulsionOverride"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Wheel_Suspension__part-002.md", "sections": ["Propulsion Override"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "vehicles.set_steering_override.wheel.v1", "title": "Set wheel steering override", "category": "wheels_vehicles", "verb": "set_steering_override", "natural_language_triggers": ["set steering override", "wheel steering override", "auto steering", "steering control"], "targets": {"allowed_types": ["Wheel Suspension 1x1", "Wheel Suspension 2x2", "Wheel Suspension 3x3", "Wheel Suspension 5x5", "Short Wheel Suspension 1x1", "Short Wheel Suspension 2x2", "Short Wheel Suspension 3x3", "Short Wheel Suspension 5x5"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_wheel_suspension"}, "parameters": [{"name": "override_percentage", "type": "float", "range": {"min": -100.0, "max": 100.0}, "units": "%", "default": 0.0, "required": true, "validation": "steering_override_range", "terminal_name": "Steering Override", "description": "Positive = right, negative = left"}], "se_implementation": {"toolbar_actions": ["IncreaseSteeringOverride", "DecreaseSteeringOverride"], "terminal_path": ["Terminal", "Wheel Suspension", "Steering Override"], "modapi_calls": [{"interface": "IMyMotorSuspension", "property": "SteeringOverride", "method": "set_SteeringOverride(float override)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Wheel suspension must exist", "Wheel suspension must be functional", "Steering must be enabled", "Override value must be within limits", "User must have control authority"], "effects": ["Wheel.SteeringOverride = override_percentage/100", "Automatic steering control set", "Direction control activated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_wheel_suspension(target)", "check_block_functional(target)", "check_steering_enabled(target)", "validate_steering_override_range(override_percentage)", "check_user_authority(target)"], "error_cases": [{"condition": "wheel_suspension_not_found", "message": "No wheel suspensions matching '{target}' found", "recovery": "List available wheel suspensions"}, {"condition": "steering_not_enabled", "message": "Steering not enabled on '{target}'", "recovery": "Enable steering before setting override"}, {"condition": "override_out_of_range", "message": "Steering override {override_percentage}% out of range (-100 to 100)", "recovery": "Use override between -100% (left) and 100% (right)"}], "safety_class": "caution", "idempotent": true, "reversible": true, "examples": [{"input": "set steering override 30% right", "parsed": {"verb": "set_steering_override", "target": {"name": "front wheels"}, "parameters": {"override_percentage": 30.0}}}, {"input": "auto steering -20 percent left", "parsed": {"verb": "set_steering_override", "target": {"type": "wheel_suspension"}, "parameters": {"override_percentage": -20.0}}}], "synonyms": ["wheel steering override", "auto steering", "steering control"], "tags": ["vehicles", "wheels", "steering", "override"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorSuspension.md", "sections": ["Properties", "SteeringOverride"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Wheel_Suspension__part-002.md", "sections": ["Steer Override"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "vehicles.enable_airshock.wheel.v1", "title": "Enable wheel airshock", "category": "wheels_vehicles", "verb": "enable_airshock", "natural_language_triggers": ["enable airshock", "turn on airshock", "enable shock absorbers", "airshock on"], "targets": {"allowed_types": ["Wheel Suspension 1x1", "Wheel Suspension 2x2", "Wheel Suspension 3x3", "Wheel Suspension 5x5", "Short Wheel Suspension 1x1", "Short Wheel Suspension 2x2", "Short Wheel Suspension 3x3", "Short Wheel Suspension 5x5"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_wheel_suspension"}, "parameters": [], "se_implementation": {"toolbar_actions": ["AirShock_On"], "terminal_path": ["Terminal", "Wheel Suspension", "AirShock"], "modapi_calls": [{"interface": "IMyMotorSuspension", "property": "AirShockEnabled", "method": "set_AirShockEnabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Wheel suspension must exist", "Wheel suspension must be functional", "User must have control authority"], "effects": ["Wheel.AirShockEnabled = true", "Automatic shock absorption enabled", "Landing protection activated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_wheel_suspension(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "wheel_suspension_not_found", "message": "No wheel suspensions matching '{target}' found", "recovery": "List available wheel suspensions"}, {"condition": "airshock_already_enabled", "message": "AirShock already enabled on '{target}'", "recovery": "AirShock is already active"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable airshock on all wheels", "parsed": {"verb": "enable_airshock", "target": {"type": "wheel_suspension", "selector": "all"}}}, {"input": "turn on shock absorbers", "parsed": {"verb": "enable_airshock", "target": {"name": "suspension wheels"}}}], "synonyms": ["turn on airshock", "enable shock absorbers", "airshock on"], "tags": ["vehicles", "wheels", "airshock", "safety"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorSuspension.md", "sections": ["Properties", "AirShockEnabled"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Wheel_Suspension__part-003.md", "sections": ["AirShock"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "vehicles.enable_wheel_control.ship_controller.v1", "title": "Enable vehicle wheel control", "category": "wheels_vehicles", "verb": "enable_wheel_control", "natural_language_triggers": ["enable wheel control", "control wheels", "enable vehicle control", "wheel control on"], "targets": {"allowed_types": ["Remote Control", "Cockpit", "Fighter Cockpit", "Control Station"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_ship_controller"}, "parameters": [], "se_implementation": {"toolbar_actions": ["ControlWheels_On"], "terminal_path": ["Terminal", "Ship Controller", "Control Wheels"], "modapi_calls": [{"interface": "IMyShipController", "property": "ControlWheels", "method": "set_ControlWheels(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Ship controller must exist", "Ship controller must be functional", "Vehicle must have wheels", "User must have control authority"], "effects": ["ShipController.ControlWheels = true", "Wheel control authority enabled", "Vehicle driving activated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_ship_controller(target)", "check_block_functional(target)", "check_vehicle_has_wheels(target)", "check_user_authority(target)"], "error_cases": [{"condition": "ship_controller_not_found", "message": "No ship controllers matching '{target}' found", "recovery": "List available ship controllers"}, {"condition": "no_wheels_found", "message": "Vehicle has no wheels to control", "recovery": "Add wheel suspensions for vehicle control"}, {"condition": "wheel_control_already_enabled", "message": "Wheel control already enabled on '{target}'", "recovery": "Wheel control is already active"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable wheel control", "parsed": {"verb": "enable_wheel_control", "target": {"type": "cockpit"}}}, {"input": "control wheels on rover", "parsed": {"verb": "enable_wheel_control", "target": {"name": "rover control"}}}], "synonyms": ["control wheels", "enable vehicle control", "wheel control on"], "tags": ["vehicles", "control", "wheels", "driving"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyShipController__part-001.md", "sections": ["Properties", "ControlWheels"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Wheel_Suspension__part-001.md", "sections": ["Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "vehicles.disable_wheel_control.ship_controller.v1", "title": "Disable vehicle wheel control", "category": "wheels_vehicles", "verb": "disable_wheel_control", "natural_language_triggers": ["disable wheel control", "stop controlling wheels", "disable vehicle control", "wheel control off"], "targets": {"allowed_types": ["Remote Control", "Cockpit", "Fighter Cockpit", "Control Station"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_ship_controller"}, "parameters": [], "se_implementation": {"toolbar_actions": ["ControlWheels_Off"], "terminal_path": ["Terminal", "Ship Controller", "Control Wheels"], "modapi_calls": [{"interface": "IMyShipController", "property": "ControlWheels", "method": "set_ControlWheels(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Ship controller must exist", "User must have control authority"], "effects": ["ShipController.ControlWheels = false", "Wheel control authority disabled", "Vehicle driving deactivated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_ship_controller(target)", "check_user_authority(target)"], "error_cases": [{"condition": "ship_controller_not_found", "message": "No ship controllers matching '{target}' found", "recovery": "List available ship controllers"}, {"condition": "wheel_control_already_disabled", "message": "Wheel control already disabled on '{target}'", "recovery": "Wheel control is already off"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable wheel control", "parsed": {"verb": "disable_wheel_control", "target": {"type": "cockpit"}}}, {"input": "stop controlling wheels", "parsed": {"verb": "disable_wheel_control", "target": {"name": "rover control"}}}], "synonyms": ["stop controlling wheels", "disable vehicle control", "wheel control off"], "tags": ["vehicles", "control", "wheels", "disable"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyShipController__part-001.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "vehicles.apply_handbrake.wheel.v1", "title": "Apply vehicle handbrake", "category": "wheels_vehicles", "verb": "apply_handbrake", "natural_language_triggers": ["apply handbrake", "engage handbrake", "wheel brake", "stop vehicle"], "targets": {"allowed_types": ["Wheel Suspension 1x1", "Wheel Suspension 2x2", "Wheel Suspension 3x3", "Wheel Suspension 5x5", "Short Wheel Suspension 1x1", "Short Wheel Suspension 2x2", "Short Wheel Suspension 3x3", "Short Wheel Suspension 5x5"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_wheel_suspension"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Brake_On"], "terminal_path": ["Terminal", "Wheel Suspension", "Brake"], "modapi_calls": [{"interface": "IMyMotorSuspension", "property": "Brake", "method": "set_Brake(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Wheel suspension must exist", "Wheel suspension must be functional", "Wheel must be attached", "User must have control authority"], "effects": ["Wheel.Brake = true", "Vehicle braking activated", "Wheel rotation locked"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_wheel_suspension(target)", "check_block_functional(target)", "check_wheel_attached(target)", "check_user_authority(target)"], "error_cases": [{"condition": "wheel_suspension_not_found", "message": "No wheel suspensions matching '{target}' found", "recovery": "List available wheel suspensions"}, {"condition": "wheel_not_attached", "message": "Wheel suspension '{target}' has no wheel attached", "recovery": "Attach wheel to suspension"}, {"condition": "brake_already_applied", "message": "Handbrake already applied on '{target}'", "recovery": "Brake is already engaged"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "apply handbrake", "parsed": {"verb": "apply_handbrake", "target": {"type": "wheel_suspension", "selector": "all"}}}, {"input": "engage brake on rear wheels", "parsed": {"verb": "apply_handbrake", "target": {"name": "rear wheels"}}}], "synonyms": ["engage handbrake", "wheel brake", "stop vehicle"], "tags": ["vehicles", "wheels", "brake", "stop"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorSuspension.md", "sections": ["Properties", "Brake"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Wheel_Suspension__part-001.md", "sections": ["Brake"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "vehicles.release_handbrake.wheel.v1", "title": "Release vehicle handbrake", "category": "wheels_vehicles", "verb": "release_handbrake", "natural_language_triggers": ["release handbrake", "disengage handbrake", "wheel brake off", "free wheels"], "targets": {"allowed_types": ["Wheel Suspension 1x1", "Wheel Suspension 2x2", "Wheel Suspension 3x3", "Wheel Suspension 5x5", "Short Wheel Suspension 1x1", "Short Wheel Suspension 2x2", "Short Wheel Suspension 3x3", "Short Wheel Suspension 5x5"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_wheel_suspension"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Brake_Off"], "terminal_path": ["Terminal", "Wheel Suspension", "Brake"], "modapi_calls": [{"interface": "IMyMotorSuspension", "property": "Brake", "method": "set_Brake(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Wheel suspension must exist", "User must have control authority"], "effects": ["Wheel.Brake = false", "Vehicle braking deactivated", "Wheel rotation freed"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_wheel_suspension(target)", "check_user_authority(target)"], "error_cases": [{"condition": "wheel_suspension_not_found", "message": "No wheel suspensions matching '{target}' found", "recovery": "List available wheel suspensions"}, {"condition": "brake_already_released", "message": "Handbrake already released on '{target}'", "recovery": "Brake is already disengaged"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "release handbrake", "parsed": {"verb": "release_handbrake", "target": {"type": "wheel_suspension", "selector": "all"}}}, {"input": "free wheels", "parsed": {"verb": "release_handbrake", "target": {"name": "all wheels"}}}], "synonyms": ["disengage handbrake", "wheel brake off", "free wheels"], "tags": ["vehicles", "wheels", "brake", "release"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorSuspension.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}