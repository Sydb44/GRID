{"id": "specialized.enable_jump_drive_recharge.jump_drive.v1", "title": "Enable jump drive recharging", "category": "specialized", "verb": "enable_jump_drive_recharge", "natural_language_triggers": ["enable jump drive recharge", "recharge jump drive", "charge jump drive", "jump drive recharge on"], "targets": {"allowed_types": ["Jump Drive", "Prototech Jump Drive"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_jump_drive"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Recharge_On"], "terminal_path": ["Terminal", "Jump Drive", "Recharge"], "modapi_calls": [{"interface": "IMyJumpDrive", "property": "Recharge", "method": "set_Recharge(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Jump drive must exist", "Jump drive must be functional", "Jump drive must be powered", "User must have control authority"], "effects": ["JumpDrive.Recharge = true", "Jump drive charging begins", "Power consumed for charging", "FTL capability building"], "constraints": {"power_required_mw": 32.0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1000, "instruction_cost": 15}, "validation_hooks": ["check_block_exists(target)", "check_block_type_jump_drive(target)", "check_block_functional(target)", "check_block_powered(target)", "check_user_authority(target)"], "error_cases": [{"condition": "jump_drive_not_found", "message": "No jump drives matching '{target}' found", "recovery": "List available jump drives"}, {"condition": "jump_drive_unpowered", "message": "Jump drive '{target}' has no power", "recovery": "Check power grid - jump drives need massive power (32MW)"}, {"condition": "jump_drive_not_functional", "message": "Jump drive '{target}' is not functional", "recovery": "Check jump drive condition"}, {"condition": "recharge_already_enabled", "message": "Jump drive '{target}' recharge already enabled", "recovery": "Jump drive is already charging"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable jump drive recharge", "parsed": {"verb": "enable_jump_drive_recharge", "target": {"type": "jump_drive", "selector": "all"}}}, {"input": "charge jump drives", "parsed": {"verb": "enable_jump_drive_recharge", "target": {"name": "main jump drive"}}}], "synonyms": ["recharge jump drive", "charge jump drive", "jump drive recharge on"], "tags": ["specialized", "jump_drive", "recharge", "ftl"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyJumpDrive.md", "sections": ["Properties", "Recharge"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Jump_Drive__part-001.md", "sections": ["Recharging"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "specialized.disable_jump_drive_recharge.jump_drive.v1", "title": "Disable jump drive recharging", "category": "specialized", "verb": "disable_jump_drive_recharge", "natural_language_triggers": ["disable jump drive recharge", "stop recharging jump drive", "jump drive recharge off", "halt jump charging"], "targets": {"allowed_types": ["Jump Drive", "Prototech Jump Drive"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_jump_drive"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Recharge_Off"], "terminal_path": ["Terminal", "Jump Drive", "Recharge"], "modapi_calls": [{"interface": "IMyJumpDrive", "property": "Recharge", "method": "set_Recharge(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Jump drive must exist", "User must have control authority"], "effects": ["JumpDrive.Recharge = false", "Jump drive charging stops", "Power consumption reduced", "Charge level maintained"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_jump_drive(target)", "check_user_authority(target)"], "error_cases": [{"condition": "jump_drive_not_found", "message": "No jump drives matching '{target}' found", "recovery": "List available jump drives"}, {"condition": "recharge_already_disabled", "message": "Jump drive '{target}' recharge already disabled", "recovery": "Jump drive is not currently charging"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable jump drive recharge", "parsed": {"verb": "disable_jump_drive_recharge", "target": {"type": "jump_drive", "selector": "all"}}}, {"input": "stop charging jump drives", "parsed": {"verb": "disable_jump_drive_recharge", "target": {"name": "backup jump drive"}}}], "synonyms": ["stop recharging jump drive", "jump drive recharge off", "halt jump charging"], "tags": ["specialized", "jump_drive", "recharge", "stop"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyJumpDrive.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "specialized.set_jump_distance.jump_drive.v1", "title": "Set jump drive distance", "category": "specialized", "verb": "set_jump_distance", "natural_language_triggers": ["set jump distance", "jump range", "ftl distance", "jump drive range"], "targets": {"allowed_types": ["Jump Drive", "Prototech Jump Drive"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_jump_drive"}, "parameters": [{"name": "distance_km", "type": "float", "range": {"min": 5.0, "max": 50000.0}, "units": "kilometers", "default": 2000.0, "required": true, "validation": "jump_distance_range", "terminal_name": "Jump Distance"}], "se_implementation": {"toolbar_actions": ["IncreaseJumpDistance", "DecreaseJumpDistance"], "terminal_path": ["Terminal", "Jump Drive", "Jump Distance"], "modapi_calls": [{"interface": "IMyJumpDrive", "property": "JumpDistanceMeters", "method": "set_JumpDistanceMeters(float distance_meters)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Jump drive must exist", "Jump drive must be functional", "Distance must be within capability", "User must have control authority"], "effects": ["Jump drive distance set", "FTL range configured", "Energy consumption adjusted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_jump_drive(target)", "check_block_functional(target)", "validate_jump_distance_within_capability(target, distance_km)", "check_user_authority(target)"], "error_cases": [{"condition": "jump_drive_not_found", "message": "No jump drives matching '{target}' found", "recovery": "List available jump drives"}, {"condition": "distance_out_of_capability", "message": "Jump distance {distance_km}km exceeds drive capability", "recovery": "Use distance within jump drive capability"}, {"condition": "distance_too_short", "message": "Jump distance {distance_km}km below minimum (5km)", "recovery": "Use minimum jump distance of 5km"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set jump distance to 10000km", "parsed": {"verb": "set_jump_distance", "target": {"name": "main jump drive"}, "parameters": {"distance_km": 10000.0}}}, {"input": "ftl range 5000 kilometers", "parsed": {"verb": "set_jump_distance", "target": {"type": "jump_drive"}, "parameters": {"distance_km": 5000.0}}}], "synonyms": ["jump range", "ftl distance", "jump drive range"], "tags": ["specialized", "jump_drive", "distance", "ftl"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyJumpDrive.md", "sections": ["Properties", "JumpDistanceMeters"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Jump_Drive__part-001.md", "sections": ["Distance Configuration"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "specialized.get_jump_drive_status.jump_drive.v1", "title": "Get jump drive status and charge", "category": "specialized", "verb": "get_jump_drive_status", "natural_language_triggers": ["get jump drive status", "jump drive info", "ftl status", "jump charge level"], "targets": {"allowed_types": ["Jump Drive", "Prototech Jump Drive"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_jump_drive"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Jump Drive", "Status"], "modapi_calls": [{"interface": "IMyJumpDrive", "property": "CurrentStoredPower", "method": "get_CurrentStoredPower()"}, {"interface": "IMyJumpDrive", "property": "MaxStoredPower", "method": "get_MaxStoredPower()"}, {"interface": "IMyJumpDrive", "property": "MaxJumpDistanceMeters", "method": "get_MaxJumpDistanceMeters()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Jump drive must exist", "User must have view authority"], "effects": ["Returns jump drive charge level", "Returns maximum storage capacity", "Returns maximum jump distance", "Returns operational status", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_jump_drive(target)", "check_view_authority(target)"], "error_cases": [{"condition": "jump_drive_not_found", "message": "No jump drives matching '{target}' found", "recovery": "List available jump drives"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check jump drive status", "parsed": {"verb": "get_jump_drive_status", "target": {"name": "main jump drive"}}}, {"input": "ftl charge level", "parsed": {"verb": "get_jump_drive_status", "target": {"type": "jump_drive", "selector": "all"}}}], "synonyms": ["jump drive info", "ftl status", "jump charge level"], "tags": ["specialized", "monitoring", "jump_drive", "status"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyJumpDrive.md", "sections": ["Properties", "Status"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "specialized.execute_jump.jump_drive.v1", "title": "Execute jump to coordinates", "category": "specialized", "verb": "execute_jump", "natural_language_triggers": ["execute jump", "jump to coordinates", "ftl jump", "teleport to"], "targets": {"allowed_types": ["Jump Drive", "Prototech Jump Drive"], "allowed_selectors": ["by_name", "by_type"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_jump_drive"}, "parameters": [{"name": "target_coordinate", "type": "coordinate", "required": true, "validation": "coordinate_format", "description": "GPS coordinate to jump to"}, {"name": "jump_delay", "type": "float", "range": {"min": 1.0, "max": 60.0}, "units": "seconds", "default": 10.0, "required": false, "validation": "jump_delay_range"}], "se_implementation": {"toolbar_actions": ["Jump"], "terminal_path": ["Terminal", "Jump Drive", "Jump"], "modapi_calls": [{"interface": "IMyGridJumpDriveSystem", "method": "Jump(Vector3D jumpTarget, long userId, float jumpDriveDelay)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Jump drive must exist", "Jump drive must be functional", "Jump drive must be fully charged", "Target coordinate must be valid", "Ship must be outside gravity wells", "Target must be clear of obstacles", "User must have jump authority"], "effects": ["FTL jump initiated", "Ship teleports to coordinates", "Jump drive discharged", "Instantaneous travel achieved"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "jump_commander", "execution_time_ms": 10000, "instruction_cost": 100}, "validation_hooks": ["check_block_exists(target)", "check_block_type_jump_drive(target)", "check_block_functional(target)", "check_jump_drive_charged(target)", "validate_target_coordinate(target_coordinate)", "check_outside_gravity_wells()", "check_jump_path_clear(target_coordinate)", "validate_jump_delay_range(jump_delay)", "check_jump_authority()"], "error_cases": [{"condition": "jump_drive_not_found", "message": "No jump drives matching '{target}' found", "recovery": "List available jump drives"}, {"condition": "jump_drive_not_charged", "message": "Jump drive '{target}' not fully charged", "recovery": "Wait for jump drive to reach 100% charge"}, {"condition": "invalid_coordinate", "message": "Invalid jump coordinate '{target_coordinate}'", "recovery": "Use valid GPS coordinate format"}, {"condition": "in_gravity_well", "message": "Cannot jump while in gravity well", "recovery": "Move away from planets and large masses"}, {"condition": "jump_path_blocked", "message": "Jump path blocked by planetary body or asteroid", "recovery": "Choose different target or clear jump path"}, {"condition": "target_too_close", "message": "Jump target closer than 5km minimum", "recovery": "Use target at least 5km away"}, {"condition": "no_jump_authority", "message": "No permission to execute jumps", "recovery": "Jump execution requires elevated permissions"}], "safety_class": "restricted", "idempotent": false, "reversible": false, "examples": [{"input": "execute jump to GPS:Destination:100000:0:50000:", "parsed": {"verb": "execute_jump", "target": {"name": "main jump drive"}, "parameters": {"target_coordinate": "GPS:Destination:100000:0:50000:"}}}, {"input": "ftl jump to coordinates", "parsed": {"verb": "execute_jump", "target": {"type": "jump_drive"}, "parameters": {"target_coordinate": "GPS:Base:0:0:0:", "jump_delay": 15.0}}}], "synonyms": ["jump to coordinates", "ftl jump", "teleport to"], "tags": ["specialized", "jump_drive", "jump", "ftl"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyGridJumpDriveSystem__part-001.md", "sections": ["Methods", "Jump"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Jump_Drive__part-001.md", "sections": ["Jump Execution"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}