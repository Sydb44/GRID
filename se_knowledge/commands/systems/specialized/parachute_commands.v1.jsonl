{"id": "specialized.deploy_parachute.parachute.v1", "title": "Deploy parachute", "category": "specialized", "verb": "deploy_parachute", "natural_language_triggers": ["deploy parachute", "open parachute", "activate parachute", "parachute deploy"], "targets": {"allowed_types": ["Parachute Hatch"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_parachute"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Open"], "terminal_path": ["Terminal", "Parachute Hatch", "Open"], "modapi_calls": [{"interface": "IMyParachute", "method": "OpenDoor()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Parachute hatch must exist", "Parachute hatch must be functional", "Must be in atmosphere", "Must be in natural gravity", "Must have canvas material", "User must have control authority"], "effects": ["Parachute deploys", "Atmospheric drag activated", "Descent speed reduced", "Landing deceleration"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 3000, "instruction_cost": 15}, "validation_hooks": ["check_block_exists(target)", "check_block_type_parachute(target)", "check_block_functional(target)", "check_atmosphere_present(target)", "check_natural_gravity_present(target)", "check_canvas_material_available(target)", "check_user_authority(target)"], "error_cases": [{"condition": "parachute_not_found", "message": "No parachute hatches matching '{target}' found", "recovery": "List available parachute hatches"}, {"condition": "no_atmosphere", "message": "No atmosphere for parachute deployment", "recovery": "Parachutes only work on planets with atmosphere"}, {"condition": "no_natural_gravity", "message": "No natural gravity for parachute deployment", "recovery": "Parachutes only work in planetary gravity"}, {"condition": "no_canvas_material", "message": "No canvas material for parachute deployment", "recovery": "Add canvas to parachute hatch inventory"}, {"condition": "parachute_already_deployed", "message": "Parachute '{target}' is already deployed", "recovery": "Parachute is already open"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "deploy parachutes for landing", "parsed": {"verb": "deploy_parachute", "target": {"type": "parachute", "selector": "all"}}}, {"input": "open parachute", "parsed": {"verb": "deploy_parachute", "target": {"name": "emergency chute"}}}], "synonyms": ["open parachute", "activate parachute", "parachute deploy"], "tags": ["specialized", "parachute", "atmospheric", "landing"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyParachute.md", "sections": ["Methods"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Parachute_Hatch__part-001.md", "sections": ["Deployment"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "specialized.set_parachute_auto_deploy.parachute.v1", "title": "Set parachute auto-deploy", "category": "specialized", "verb": "set_parachute_auto_deploy", "natural_language_triggers": ["set parachute auto deploy", "auto deploy parachute", "automatic parachute", "parachute auto"], "targets": {"allowed_types": ["Parachute Hatch"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_parachute"}, "parameters": [{"name": "enable_auto_deploy", "type": "boolean", "required": true, "validation": "boolean", "description": "Enable automatic deployment"}, {"name": "deploy_height", "type": "float", "range": {"min": 50.0, "max": 10000.0}, "units": "meters", "default": 500.0, "required": false, "validation": "deploy_height_range", "terminal_name": "Auto Deploy Height"}], "se_implementation": {"toolbar_actions": ["AutoDeploy"], "terminal_path": ["Terminal", "Parachute Hatch", "Auto Deploy"], "modapi_calls": [{"interface": "IMyParachute", "property": "AutoDeploy", "method": "set_AutoDeploy(bool enable)"}, {"interface": "IMyParachute", "property": "AutoDeployHeight", "method": "set_AutoDeployHeight(float height)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Parachute hatch must exist", "Parachute hatch must be functional", "Deploy height must be valid", "User must have control authority"], "effects": ["Parachute.AutoDeploy = enable_auto_deploy", "Parachute.AutoDeployHeight = deploy_height", "Automatic deployment configured", "Altitude-based activation set"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_parachute(target)", "check_block_functional(target)", "validate_deploy_height_range(deploy_height)", "check_user_authority(target)"], "error_cases": [{"condition": "parachute_not_found", "message": "No parachute hatches matching '{target}' found", "recovery": "List available parachute hatches"}, {"condition": "deploy_height_invalid", "message": "Deploy height {deploy_height}m invalid", "recovery": "Use deploy height between 50m and 10000m"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set parachute auto deploy at 800m", "parsed": {"verb": "set_parachute_auto_deploy", "target": {"name": "landing chutes"}, "parameters": {"enable_auto_deploy": true, "deploy_height": 800.0}}}, {"input": "automatic parachute deployment", "parsed": {"verb": "set_parachute_auto_deploy", "target": {"type": "parachute"}, "parameters": {"enable_auto_deploy": true, "deploy_height": 1000.0}}}], "synonyms": ["auto deploy parachute", "automatic parachute", "parachute auto"], "tags": ["specialized", "parachute", "automatic", "altitude"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyParachute.md", "sections": ["Properties", "AutoDeploy"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Parachute_Hatch__part-001.md", "sections": ["Auto Deploy"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "specialized.cut_parachute.parachute.v1", "title": "Cut parachute", "category": "specialized", "verb": "cut_parachute", "natural_language_triggers": ["cut parachute", "close parachute", "parachute cut", "release parachute"], "targets": {"allowed_types": ["Parachute Hatch"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_parachute"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Close"], "terminal_path": ["Terminal", "Parachute Hatch", "Close"], "modapi_calls": [{"interface": "IMyParachute", "method": "CloseDoor()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Parachute hatch must exist", "Parachute hatch must be functional", "Parachute must be deployed", "User must have control authority"], "effects": ["Parachute cuts", "Atmospheric drag removed", "Free fall resumes", "Canvas material consumed"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1000, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_parachute(target)", "check_block_functional(target)", "check_parachute_deployed(target)", "check_user_authority(target)"], "error_cases": [{"condition": "parachute_not_found", "message": "No parachute hatches matching '{target}' found", "recovery": "List available parachute hatches"}, {"condition": "parachute_not_deployed", "message": "Parachute '{target}' is not deployed", "recovery": "Parachute is already closed"}], "safety_class": "caution", "idempotent": true, "reversible": false, "examples": [{"input": "cut parachutes", "parsed": {"verb": "cut_parachute", "target": {"type": "parachute", "selector": "all"}}}, {"input": "release parachute", "parsed": {"verb": "cut_parachute", "target": {"name": "main chute"}}}], "synonyms": ["close parachute", "parachute cut", "release parachute"], "tags": ["specialized", "parachute", "cut", "release"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyParachute.md", "sections": ["Methods"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Parachute_Hatch__part-001.md", "sections": ["Cutting"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}