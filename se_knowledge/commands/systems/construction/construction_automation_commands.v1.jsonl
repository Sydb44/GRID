{"id": "construction.create_3d_printer.automation.v1", "title": "Create 3D printer automation", "category": "construction", "verb": "create_3d_printer", "natural_language_triggers": ["create 3d printer", "setup 3d printer", "automated construction", "printer system"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_projector"}, "parameters": [{"name": "printer_name", "type": "text", "required": true, "validation": "printer_name_format"}, {"name": "welders", "type": "block_reference_array", "required": true, "validation": "welders_exist"}, {"name": "conveyor_system", "type": "block_reference", "required": false, "validation": "conveyor_exists"}, {"name": "auto_start", "type": "boolean", "required": false, "default": false, "validation": "boolean"}, {"name": "cycle_blueprints", "type": "boolean", "required": false, "default": false, "validation": "boolean"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Projector", "3D Printer Setup"], "modapi_calls": [{"interface": "IMyProjector", "method": "Create3DPrinter(name, welders, conveyor, auto_start, cycle)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Projector must exist", "Welders must exist", "Components must be connected", "Printer name must be unique", "User must have automation authority"], "effects": ["3D printer system created", "Automated construction configured", "Welder coordination enabled", "Production automation activated"], "constraints": {"power_required_mw": 0.02, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 10000, "instruction_cost": 80}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "validate_printer_name_unique(printer_name)", "check_welders_exist(welders)", "check_conveyor_exists_optional(conveyor_system)", "validate_components_connected(target, welders, conveyor_system)", "check_automation_authority()"], "error_cases": [{"condition": "printer_name_exists", "message": "3D printer '{printer_name}' already exists", "recovery": "Choose a different printer name"}, {"condition": "welders_not_found", "message": "Welders not found: {welders}", "recovery": "Check welder names and existence"}, {"condition": "components_not_connected", "message": "Components not properly connected", "recovery": "Ensure projector, welders, and conveyors are connected"}, {"condition": "no_automation_authority", "message": "No permission to create 3D printer systems", "recovery": "Automation requires elevated permissions"}], "safety_class": "restricted", "idempotent": false, "reversible": true, "examples": [{"input": "create 3d printer Factory Line with welders Main Welder Backup Welder", "parsed": {"verb": "create_3d_printer", "target": {"name": "factory projector"}, "parameters": {"printer_name": "Factory Line", "welders": ["Main Welder", "Backup Welder"], "auto_start": true}}}, {"input": "setup automated construction", "parsed": {"verb": "create_3d_printer", "target": {"type": "projector"}, "parameters": {"printer_name": "Auto Builder", "welders": ["Construction Welder"], "conveyor_system": "Main Conveyor", "cycle_blueprints": true}}}], "synonyms": ["setup 3d printer", "automated construction", "printer system"], "tags": ["construction", "automation", "3d_printer", "manufacturing"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Equipment/Block_Tools.md", "sections": ["3D Printer"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Automated Construction"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.create_grinder_pit.automation.v1", "title": "Create automated grinder pit", "category": "construction", "verb": "create_grinder_pit", "natural_language_triggers": ["create grinder pit", "setup grinder pit", "automated salvage", "dismantling system"], "targets": {"allowed_types": ["Grinder Block"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_ship_grinder"}, "parameters": [{"name": "pit_name", "type": "text", "required": true, "validation": "pit_name_format"}, {"name": "safety_sensor", "type": "block_reference", "required": false, "validation": "sensor_exists"}, {"name": "collection_system", "type": "block_reference", "required": false, "validation": "conveyor_or_collector_exists"}, {"name": "auto_activation", "type": "boolean", "required": false, "default": false, "validation": "boolean"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Grinder", "Grinder Pit Setup"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateGrinderPit(name, grinders, sensor, collection, auto)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grinders must exist", "Grinders must be positioned for overlapping coverage", "Pit name must be unique", "Safety systems recommended", "User must have automation authority"], "effects": ["Grinder pit system created", "Automated salvage configured", "Safety interlocks established", "Component collection enabled"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 8000, "instruction_cost": 60}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_ship_grinder(target)", "validate_pit_name_unique(pit_name)", "check_grinder_coverage_overlap(target)", "check_sensor_exists_optional(safety_sensor)", "check_collection_system_exists_optional(collection_system)", "check_automation_authority()"], "error_cases": [{"condition": "pit_name_exists", "message": "Grinder pit '{pit_name}' already exists", "recovery": "Choose a different pit name"}, {"condition": "grinders_not_found", "message": "Grinders not found or insufficient coverage", "recovery": "Position grinders for overlapping dismantling area"}, {"condition": "safety_sensor_recommended", "message": "Safety sensor strongly recommended for grinder pit", "recovery": "Add sensor to detect players and auto-stop grinders"}, {"condition": "no_automation_authority", "message": "No permission to create grinder pit systems", "recovery": "Automation requires elevated permissions"}], "safety_class": "restricted", "idempotent": false, "reversible": true, "examples": [{"input": "create grinder pit Salvage Bay with safety sensor Player Detector", "parsed": {"verb": "create_grinder_pit", "target": {"zone": "salvage"}, "parameters": {"pit_name": "Salvage Bay", "safety_sensor": "Player Detector", "auto_activation": true}}}, {"input": "setup automated salvage system", "parsed": {"verb": "create_grinder_pit", "target": {"name": "pit grinders"}, "parameters": {"pit_name": "Auto Salvage", "collection_system": "Salvage Collector"}}}], "synonyms": ["setup grinder pit", "automated salvage", "dismantling system"], "tags": ["construction", "automation", "grinder_pit", "salvage"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Grinder_(Block)__part-001.md", "sections": ["Grinder Pit"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.create_repair_system.automation.v1", "title": "Create automated repair system", "category": "construction", "verb": "create_repair_system", "natural_language_triggers": ["create repair system", "automated repair", "self repair", "maintenance system"], "targets": {"allowed_types": ["Welder Block"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_ship_welder"}, "parameters": [{"name": "system_name", "type": "text", "required": true, "validation": "system_name_format"}, {"name": "damage_threshold", "type": "percentage", "range": {"min": 10, "max": 90}, "units": "%", "default": 75, "required": false, "validation": "damage_threshold_range"}, {"name": "repair_priority", "type": "enum", "values": ["Critical", "Functional", "All"], "required": false, "default": "Critical", "validation": "repair_priority_valid"}, {"name": "auto_activate", "type": "boolean", "required": false, "default": true, "validation": "boolean"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Welder", "Repair System"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateRepairSystem(name, welders, threshold, priority, auto)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Welders must exist", "System name must be unique", "Damage detection system available", "Components must be available", "User must have automation authority"], "effects": ["Repair system created", "Automatic damage detection", "Priority-based repair activation", "Maintenance automation enabled"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 5000, "instruction_cost": 50}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_ship_welder(target)", "validate_system_name_unique(system_name)", "validate_damage_threshold(damage_threshold)", "validate_repair_priority(repair_priority)", "check_damage_detection_available()", "check_automation_authority()"], "error_cases": [{"condition": "system_name_exists", "message": "Repair system '{system_name}' already exists", "recovery": "Choose a different system name"}, {"condition": "welders_not_positioned", "message": "Welders not positioned for effective repair coverage", "recovery": "Position welders near critical blocks"}, {"condition": "no_damage_detection", "message": "No damage detection system available", "recovery": "Build damage sensors or use manual activation"}, {"condition": "threshold_invalid", "message": "Damage threshold {damage_threshold}% invalid", "recovery": "Use threshold between 10% and 90%"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create repair system Auto Maintenance threshold 80% priority Critical", "parsed": {"verb": "create_repair_system", "target": {"zone": "critical"}, "parameters": {"system_name": "Auto Maintenance", "damage_threshold": 80, "repair_priority": "Critical"}}}, {"input": "automated repair for all damage", "parsed": {"verb": "create_repair_system", "target": {"name": "repair welders"}, "parameters": {"system_name": "Full Repair", "repair_priority": "All", "auto_activate": true}}}], "synonyms": ["automated repair", "self repair", "maintenance system"], "tags": ["construction", "automation", "repair", "maintenance"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Equipment/Block_Tools.md", "sections": ["Auto-repair"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.create_construction_sequence.automation.v1", "title": "Create construction sequence automation", "category": "construction", "verb": "create_construction_sequence", "natural_language_triggers": ["create construction sequence", "construction automation", "building sequence", "automated building"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_projector"}, "parameters": [{"name": "sequence_name", "type": "text", "required": true, "validation": "sequence_name_format"}, {"name": "blueprints", "type": "text_array", "required": true, "validation": "blueprints_exist"}, {"name": "welders", "type": "block_reference_array", "required": true, "validation": "welders_exist"}, {"name": "build_order", "type": "enum", "values": ["Sequential", "Parallel", "Priority_Based"], "required": false, "default": "Sequential", "validation": "build_order_valid"}, {"name": "auto_start_next", "type": "boolean", "required": false, "default": true, "validation": "boolean"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Projector", "Construction Sequence"], "modapi_calls": [{"interface": "IMyProjector", "method": "CreateConstructionSequence(name, blueprints, welders, order, auto_start)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Projector must exist", "Blueprints must exist", "Welders must exist", "Sequence name must be unique", "Components must be available", "User must have automation authority"], "effects": ["Construction sequence created", "Multi-blueprint automation", "Coordinated building process", "Sequential construction enabled"], "constraints": {"power_required_mw": 0.03, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 15000, "instruction_cost": 100}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "validate_sequence_name_unique(sequence_name)", "validate_blueprints_exist(blueprints)", "check_welders_exist(welders)", "validate_build_order(build_order)", "check_automation_authority()"], "error_cases": [{"condition": "sequence_name_exists", "message": "Construction sequence '{sequence_name}' already exists", "recovery": "Choose a different sequence name"}, {"condition": "blueprints_not_found", "message": "Blueprints not found: {blueprints}", "recovery": "Check blueprint names and availability"}, {"condition": "welders_not_found", "message": "Welders not found: {welders}", "recovery": "Check welder names and existence"}, {"condition": "insufficient_components", "message": "Insufficient components for construction sequence", "recovery": "Ensure adequate component supply"}, {"condition": "build_order_invalid", "message": "Invalid build order '{build_order}'", "recovery": "Use Sequential, Parallel, or Priority_Based"}], "safety_class": "restricted", "idempotent": false, "reversible": true, "examples": [{"input": "create construction sequence Ship Production blueprints Fighter Bomber welders Main Welder Auto Welder", "parsed": {"verb": "create_construction_sequence", "target": {"name": "production projector"}, "parameters": {"sequence_name": "Ship Production", "blueprints": ["Fighter", "Bomber"], "welders": ["Main Welder", "Auto Welder"], "build_order": "Sequential"}}}, {"input": "automated building sequence parallel", "parsed": {"verb": "create_construction_sequence", "target": {"zone": "factory"}, "parameters": {"sequence_name": "Parallel Build", "blueprints": ["Drone A", "Drone B"], "welders": ["Welder 1", "Welder 2"], "build_order": "Parallel", "auto_start_next": true}}}], "synonyms": ["construction automation", "building sequence", "automated building"], "tags": ["construction", "automation", "sequence", "manufacturing"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Advanced Assembly Line"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.set_construction_safety.safety.v1", "title": "Configure construction safety systems", "category": "construction", "verb": "set_construction_safety", "natural_language_triggers": ["set construction safety", "construction safety", "welder safety", "grinder safety", "tool safety"], "targets": {"allowed_types": ["Sensor"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_sensor"}, "parameters": [{"name": "safety_name", "type": "text", "required": true, "validation": "safety_name_format"}, {"name": "protected_tools", "type": "block_reference_array", "required": true, "validation": "tools_exist", "description": "Welders/grinders to protect"}, {"name": "detection_range", "type": "float", "range": {"min": 2.0, "max": 15.0}, "units": "meters", "default": 5.0, "required": false, "validation": "safety_range"}, {"name": "emergency_actions", "type": "action_array", "required": false, "validation": "actions_exist"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Sensor", "Construction Safety"], "modapi_calls": [{"interface": "IMySensorBlock", "method": "CreateConstructionSafety(name, tools, range, actions)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Sensors must exist", "Tools must exist", "Safety name must be unique", "Detection range must be appropriate", "User must have safety authority"], "effects": ["Construction safety system created", "Player detection configured", "Tool auto-shutdown on proximity", "Safety protocols activated"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "safety_admin", "execution_time_ms": 5000, "instruction_cost": 40}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_sensor(target)", "validate_safety_name_unique(safety_name)", "check_tools_exist(protected_tools)", "validate_safety_detection_range(detection_range)", "validate_actions_exist(emergency_actions)", "check_safety_authority()"], "error_cases": [{"condition": "safety_name_exists", "message": "Construction safety '{safety_name}' already exists", "recovery": "Choose a different safety name"}, {"condition": "tools_not_found", "message": "Protected tools not found: {protected_tools}", "recovery": "Check tool names and existence"}, {"condition": "detection_range_invalid", "message": "Detection range {detection_range}m invalid for construction safety", "recovery": "Use range between 2m and 15m for safety"}, {"condition": "no_safety_authority", "message": "No permission to create construction safety systems", "recovery": "Safety systems require elevated permissions"}], "safety_class": "restricted", "idempotent": false, "reversible": true, "examples": [{"input": "set construction safety Welder Protection for tools Main Welder Auto Welder range 8m", "parsed": {"verb": "set_construction_safety", "target": {"zone": "construction"}, "parameters": {"safety_name": "Welder Protection", "protected_tools": ["Main Welder", "Auto Welder"], "detection_range": 8.0}}}, {"input": "grinder safety system 5 meter range", "parsed": {"verb": "set_construction_safety", "target": {"name": "pit sensor"}, "parameters": {"safety_name": "Grinder Safety", "protected_tools": ["Pit Grinder 1", "Pit Grinder 2"], "detection_range": 5.0, "emergency_actions": ["sound_alarm"]}}}], "synonyms": ["construction safety", "welder safety", "grinder safety", "tool safety"], "tags": ["construction", "safety", "automation", "protection"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Welder_Block__part-001.md", "sections": ["Safety"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Grinder_(Block)__part-001.md", "sections": ["Safety"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.get_construction_requirements.projector.v1", "title": "Get construction component requirements", "category": "construction", "verb": "get_construction_requirements", "natural_language_triggers": ["get construction requirements", "component requirements", "what components needed", "build requirements"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Projector", "Requirements"], "modapi_calls": [{"interface": "IMyProjector", "method": "GetConstructionRequirements()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Projector must exist", "Blueprint must be loaded", "User must have view authority"], "effects": ["Returns component requirements list", "Returns quantities needed", "Returns availability status", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 10, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_blueprint_loaded(target)", "check_view_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "no_blueprint_loaded", "message": "Projector '{target}' has no blueprint loaded", "recovery": "Load a blueprint to see requirements"}, {"condition": "requirements_calculation_failed", "message": "Cannot calculate requirements for '{target}'", "recovery": "Check blueprint and projector status"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get component requirements", "parsed": {"verb": "get_construction_requirements", "target": {"type": "projector"}}}, {"input": "what components needed for build", "parsed": {"verb": "get_construction_requirements", "target": {"name": "build projector"}}}], "synonyms": ["component requirements", "what components needed", "build requirements"], "tags": ["construction", "monitoring", "requirements", "components"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProjector.md", "sections": ["Requirements Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}