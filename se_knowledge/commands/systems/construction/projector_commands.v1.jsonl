{"id": "construction.load_blueprint.projector.v1", "title": "Load blueprint into projector", "category": "construction", "verb": "load_blueprint", "natural_language_triggers": ["load blueprint", "project blueprint", "set blueprint", "select blueprint"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [{"name": "blueprint_name", "type": "text", "required": true, "validation": "blueprint_exists", "description": "Name of blueprint to load"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Projector", "Blueprint"], "modapi_calls": [{"interface": "IMyProjector", "method": "LoadBlueprint(string name)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Projector must exist", "Projector must be functional", "Projector must be powered", "Blueprint must exist", "Blueprint must be compatible with projector grid size", "User must have control authority"], "effects": ["Blueprint loaded into projector", "Projection becomes available", "Construction template ready"], "constraints": {"power_required_mw": 0.0002, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 2000, "instruction_cost": 20}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_block_functional(target)", "check_block_powered(target)", "validate_blueprint_exists(blueprint_name)", "validate_blueprint_grid_compatibility(target, blueprint_name)", "check_user_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "blueprint_not_found", "message": "Blueprint '{blueprint_name}' not found", "recovery": "Check blueprint name or create blueprint"}, {"condition": "blueprint_incompatible", "message": "Blueprint '{blueprint_name}' incompatible with projector grid size", "recovery": "Use compatible grid size blueprint"}, {"condition": "projector_unpowered", "message": "Projector '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "blueprint_too_large", "message": "Blueprint '{blueprint_name}' exceeds projector limits", "recovery": "Use smaller blueprint or larger projector"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "load blueprint Mining Ship", "parsed": {"verb": "load_blueprint", "target": {"name": "main projector"}, "parameters": {"blueprint_name": "Mining Ship"}}}, {"input": "project fighter blueprint", "parsed": {"verb": "load_blueprint", "target": {"type": "projector"}, "parameters": {"blueprint_name": "Fighter"}}}], "synonyms": ["project blueprint", "set blueprint", "select blueprint"], "tags": ["construction", "projector", "blueprint", "loading"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProjector.md", "sections": ["Blueprint Methods"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Usage", "Blueprint Loading"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.start_projection.projector.v1", "title": "Start blueprint projection", "category": "construction", "verb": "start_projection", "natural_language_triggers": ["start projection", "turn on projection", "enable projection", "project now"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_On"], "terminal_path": ["Terminal", "Projector", "On/Off"], "modapi_calls": [{"interface": "IMyProjector", "property": "Enabled", "method": "set_Enabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Projector must exist", "Projector must be functional", "Projector must be powered", "Blueprint must be loaded", "User must have control authority"], "effects": ["Projector.Enabled = true", "Blueprint projection appears", "Construction hologram visible", "Welding targets available"], "constraints": {"power_required_mw": 0.0002, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1000, "instruction_cost": 12}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_block_functional(target)", "check_block_powered(target)", "check_blueprint_loaded(target)", "check_user_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "no_blueprint_loaded", "message": "Projector '{target}' has no blueprint loaded", "recovery": "Load a blueprint before starting projection"}, {"condition": "projector_unpowered", "message": "Projector '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "projection_area_occupied", "message": "Projection area occupied by existing blocks", "recovery": "Clear area or adjust projection offset"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "start projection", "parsed": {"verb": "start_projection", "target": {"type": "projector"}}}, {"input": "project now", "parsed": {"verb": "start_projection", "target": {"name": "construction projector"}}}], "synonyms": ["turn on projection", "enable projection", "project now"], "tags": ["construction", "projector", "projection", "hologram"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProjector.md", "sections": ["Properties"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Usage"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.stop_projection.projector.v1", "title": "Stop blueprint projection", "category": "construction", "verb": "stop_projection", "natural_language_triggers": ["stop projection", "turn off projection", "disable projection", "hide projection"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_Off"], "terminal_path": ["Terminal", "Projector", "On/Off"], "modapi_calls": [{"interface": "IMyProjector", "property": "Enabled", "method": "set_Enabled(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Projector must exist", "User must have control authority"], "effects": ["Projector.Enabled = false", "Blueprint projection disappears", "Hologram hidden", "Power consumption reduced"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_user_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "projection_already_off", "message": "Projector '{target}' is already stopped", "recovery": "Projection is not currently active"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "stop projection", "parsed": {"verb": "stop_projection", "target": {"type": "projector"}}}, {"input": "hide projection", "parsed": {"verb": "stop_projection", "target": {"name": "build projector"}}}], "synonyms": ["turn off projection", "disable projection", "hide projection"], "tags": ["construction", "projector", "stop", "hide"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProjector.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.set_projection_offset.projector.v1", "title": "Set projection position offset", "category": "construction", "verb": "set_projection_offset", "natural_language_triggers": ["set projection offset", "move projection", "adjust projection position", "position projection"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [{"name": "offset_x", "type": "integer", "range": {"min": -50, "max": 50}, "units": "blocks", "default": 0, "required": false, "validation": "projection_offset_range", "terminal_name": "Horizontal Offset"}, {"name": "offset_y", "type": "integer", "range": {"min": -50, "max": 50}, "units": "blocks", "default": 0, "required": false, "validation": "projection_offset_range", "terminal_name": "Vertical Offset"}, {"name": "offset_z", "type": "integer", "range": {"min": -50, "max": 50}, "units": "blocks", "default": 0, "required": false, "validation": "projection_offset_range", "terminal_name": "Forward Offset"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Projector", "Offset"], "modapi_calls": [{"interface": "IMyProjector", "property": "ProjectionOffset", "method": "set_ProjectionOffset(Vector3I offset)"}, {"interface": "IMyProjector", "method": "UpdateOffsetAndRotation()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Projector must exist", "Projector must be functional", "Blueprint must be loaded", "Offset values must be within limits", "User must have control authority"], "effects": ["Projector.ProjectionOffset = new Vector3I(x, y, z)", "Projection position updated", "Construction location adjusted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_block_functional(target)", "check_blueprint_loaded(target)", "validate_projection_offset_ranges(offset_x, offset_y, offset_z)", "check_user_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "no_blueprint_loaded", "message": "Projector '{target}' has no blueprint loaded", "recovery": "Load a blueprint before adjusting offset"}, {"condition": "offset_out_of_range", "message": "Projection offset out of range (-50 to 50 blocks)", "recovery": "Use offset values between -50 and 50 blocks"}, {"condition": "offset_causes_collision", "message": "Projection offset would cause collision", "recovery": "Adjust offset to avoid existing blocks"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "move projection 5 blocks forward", "parsed": {"verb": "set_projection_offset", "target": {"name": "main projector"}, "parameters": {"offset_z": 5}}}, {"input": "adjust projection position x 3 y -2", "parsed": {"verb": "set_projection_offset", "target": {"type": "projector"}, "parameters": {"offset_x": 3, "offset_y": -2}}}], "synonyms": ["move projection", "adjust projection position", "position projection"], "tags": ["construction", "projector", "offset", "positioning"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProjector.md", "sections": ["Properties", "ProjectionOffset"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Positioning"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.set_projection_rotation.projector.v1", "title": "Set projection rotation", "category": "construction", "verb": "set_projection_rotation", "natural_language_triggers": ["set projection rotation", "rotate projection", "projection orientation", "turn projection"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [{"name": "pitch", "type": "integer", "range": {"min": 0, "max": 3}, "units": "90_degree_steps", "default": 0, "required": false, "validation": "projection_rotation_range", "terminal_name": "Pitch", "description": "Pitch rotation in 90-degree steps"}, {"name": "yaw", "type": "integer", "range": {"min": 0, "max": 3}, "units": "90_degree_steps", "default": 0, "required": false, "validation": "projection_rotation_range", "terminal_name": "Yaw", "description": "Yaw rotation in 90-degree steps"}, {"name": "roll", "type": "integer", "range": {"min": 0, "max": 3}, "units": "90_degree_steps", "default": 0, "required": false, "validation": "projection_rotation_range", "terminal_name": "Roll", "description": "Roll rotation in 90-degree steps"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Projector", "Rotation"], "modapi_calls": [{"interface": "IMyProjector", "property": "ProjectionRotation", "method": "set_ProjectionRotation(Vector3I rotation)"}, {"interface": "IMyProjector", "method": "UpdateOffsetAndRotation()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Projector must exist", "Projector must be functional", "Blueprint must be loaded", "Rotation values must be valid", "User must have control authority"], "effects": ["Projector.ProjectionRotation = new Vector3I(pitch, yaw, roll)", "Projection orientation updated", "Construction angle adjusted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_block_functional(target)", "check_blueprint_loaded(target)", "validate_projection_rotation_ranges(pitch, yaw, roll)", "check_user_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "no_blueprint_loaded", "message": "Projector '{target}' has no blueprint loaded", "recovery": "Load a blueprint before adjusting rotation"}, {"condition": "rotation_out_of_range", "message": "Projection rotation values out of range (0-3)", "recovery": "Use rotation values between 0 and 3 (0=0°, 1=90°, 2=180°, 3=270°)"}, {"condition": "rotation_causes_collision", "message": "Projection rotation would cause collision", "recovery": "Adjust rotation to avoid existing blocks"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "rotate projection 90 degrees yaw", "parsed": {"verb": "set_projection_rotation", "target": {"name": "main projector"}, "parameters": {"yaw": 1}}}, {"input": "turn projection around", "parsed": {"verb": "set_projection_rotation", "target": {"type": "projector"}, "parameters": {"yaw": 2}}}], "synonyms": ["rotate projection", "projection orientation", "turn projection"], "tags": ["construction", "projector", "rotation", "orientation"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProjector.md", "sections": ["Properties", "ProjectionRotation"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Rotation"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.get_projection_status.projector.v1", "title": "Get projection status and progress", "category": "construction", "verb": "get_projection_status", "natural_language_triggers": ["get projection status", "projection info", "buildable blocks", "construction progress"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Projector", "Status"], "modapi_calls": [{"interface": "IMyProjector", "property": "IsProjecting", "method": "get_IsProjecting()"}, {"interface": "IMyProjector", "property": "BuildableBlocksCount", "method": "get_BuildableBlocksCount()"}, {"interface": "IMyProjector", "property": "TotalBlocks", "method": "get_TotalBlocks()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Projector must exist", "User must have view authority"], "effects": ["Returns projection active status", "Returns buildable blocks count", "Returns total blocks in blueprint", "Returns completion percentage", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_view_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "no_projection_active", "message": "Projector '{target}' has no active projection", "recovery": "Load and start a blueprint projection"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check projection progress", "parsed": {"verb": "get_projection_status", "target": {"name": "build projector"}}}, {"input": "buildable blocks count", "parsed": {"verb": "get_projection_status", "target": {"type": "projector"}}}], "synonyms": ["projection info", "buildable blocks", "construction progress"], "tags": ["construction", "monitoring", "projector", "progress"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProjector.md", "sections": ["Properties", "Status"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.set_keep_projection.projector.v1", "title": "Set keep projection mode", "category": "construction", "verb": "set_keep_projection", "natural_language_triggers": ["set keep projection", "keep projection", "maintain projection", "projection persistence"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [{"name": "keep_active", "type": "boolean", "required": true, "validation": "boolean", "description": "Keep projection active after completion"}], "se_implementation": {"toolbar_actions": ["KeepProjection"], "terminal_path": ["Terminal", "Projector", "Keep Projection"], "modapi_calls": [{"interface": "IMyProjector", "property": "KeepProjection", "method": "set_KeepProjection(bool keep)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Projector must exist", "Projector must be functional", "User must have control authority"], "effects": ["Projector.KeepProjection = keep_active", "Projection persistence behavior set", "Auto-rebuild mode configured"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "keep projection for mass production", "parsed": {"verb": "set_keep_projection", "target": {"name": "factory projector"}, "parameters": {"keep_active": true}}}, {"input": "projection persistence off", "parsed": {"verb": "set_keep_projection", "target": {"type": "projector"}, "parameters": {"keep_active": false}}}], "synonyms": ["keep projection", "maintain projection", "projection persistence"], "tags": ["construction", "projector", "persistence", "automation"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Keep Projection"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "construction.set_show_buildable_only.projector.v1", "title": "Set show only buildable blocks", "category": "construction", "verb": "set_show_buildable_only", "natural_language_triggers": ["show only buildable", "hide unsupported blocks", "buildable blocks only", "filter projection"], "targets": {"allowed_types": ["Projector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_projector"}, "parameters": [{"name": "show_buildable_only", "type": "boolean", "required": true, "validation": "boolean", "description": "Show only blocks that can be welded"}], "se_implementation": {"toolbar_actions": ["ShowOnlyBuildable"], "terminal_path": ["Terminal", "Projector", "Show Only Buildable"], "modapi_calls": [{"interface": "IMyProjector", "property": "ShowOnlyBuildable", "method": "set_ShowOnlyBuildable(bool show)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Projector must exist", "Projector must be functional", "Blueprint must be loaded and projecting", "User must have control authority"], "effects": ["Projector.ShowOnlyBuildable = show_buildable_only", "Projection visibility filtered", "Only weldable blocks shown/hidden"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_projector(target)", "check_block_functional(target)", "check_projection_active(target)", "check_user_authority(target)"], "error_cases": [{"condition": "projector_not_found", "message": "No projectors matching '{target}' found", "recovery": "List available projectors"}, {"condition": "no_active_projection", "message": "Projector '{target}' has no active projection", "recovery": "Load and start a blueprint projection"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "show only buildable blocks", "parsed": {"verb": "set_show_buildable_only", "target": {"type": "projector"}, "parameters": {"show_buildable_only": true}}}, {"input": "filter projection to weldable", "parsed": {"verb": "set_show_buildable_only", "target": {"name": "construction projector"}, "parameters": {"show_buildable_only": true}}}], "synonyms": ["hide unsupported blocks", "buildable blocks only", "filter projection"], "tags": ["construction", "projector", "filter", "buildable"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Projector__part-001.md", "sections": ["Show Only Buildable"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}