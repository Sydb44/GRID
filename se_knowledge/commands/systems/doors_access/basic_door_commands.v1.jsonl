{"id": "doors.open.door.v1", "title": "Open door", "category": "doors_access", "verb": "open", "natural_language_triggers": ["open door", "open doors", "unlock door", "door open"], "targets": {"allowed_types": ["Door", "Advanced Door", "Airtight Hangar Door", "Airtight Slide Door", "Gate"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_door"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Open"], "terminal_path": ["Terminal", "Door", "Open"], "modapi_calls": [{"interface": "IMyDoor", "method": "OpenDoor()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Door must exist", "Door must be functional", "Door must be powered", "Door must not be locked (if lockable)", "User must have access authority"], "effects": ["Door opens", "Door.Open = true", "Passage becomes accessible", "Door status changes to Opening/Open"], "constraints": {"power_required_mw": 0.003, "network_sync": true, "multiplayer_authority": "access_allowed", "execution_time_ms": 3000, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_door(target)", "check_block_functional(target)", "check_block_powered(target)", "check_door_not_locked(target)", "check_access_authority(target)"], "error_cases": [{"condition": "door_not_found", "message": "No doors matching '{target}' found", "recovery": "List available doors"}, {"condition": "door_locked", "message": "Door '{target}' is locked", "recovery": "Unlock door first or check access permissions"}, {"condition": "door_unpowered", "message": "Door '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "door_obstructed", "message": "Door '{target}' is obstructed", "recovery": "Clear obstruction from door path"}, {"condition": "no_access", "message": "No access permission for door '{target}'", "recovery": "Check ownership and access settings"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "open airlock door", "parsed": {"verb": "open", "target": {"name": "airlock door"}}}, {"input": "open all hangar doors", "parsed": {"verb": "open", "target": {"type": "hangar_door", "selector": "all"}}}], "synonyms": ["door open", "unlock door"], "tags": ["doors", "access", "open", "basic"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Blocks/IMyDoor.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "doors.close.door.v1", "title": "Close door", "category": "doors_access", "verb": "close", "natural_language_triggers": ["close door", "close doors", "shut door", "door close"], "targets": {"allowed_types": ["Door", "Advanced Door", "Airtight Hangar Door", "Airtight Slide Door", "Gate"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_door"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Close"], "terminal_path": ["Terminal", "Door", "Close"], "modapi_calls": [{"interface": "IMyDoor", "method": "CloseDoor()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Door must exist", "Door must be functional", "Door must be powered", "User must have access authority"], "effects": ["Door closes", "Door.Open = false", "Passage becomes blocked", "Door status changes to Closing/Closed"], "constraints": {"power_required_mw": 0.003, "network_sync": true, "multiplayer_authority": "access_allowed", "execution_time_ms": 3000, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_door(target)", "check_block_functional(target)", "check_block_powered(target)", "check_access_authority(target)"], "error_cases": [{"condition": "door_not_found", "message": "No doors matching '{target}' found", "recovery": "List available doors"}, {"condition": "door_unpowered", "message": "Door '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "door_obstructed", "message": "Door '{target}' is obstructed", "recovery": "Clear obstruction from door path"}, {"condition": "no_access", "message": "No access permission for door '{target}'", "recovery": "Check ownership and access settings"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "close security doors", "parsed": {"verb": "close", "target": {"name": "security doors"}}}, {"input": "shut all doors", "parsed": {"verb": "close", "target": {"type": "door", "selector": "all"}}}], "synonyms": ["shut door", "door close"], "tags": ["doors", "access", "close", "basic"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Blocks/IMyDoor.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "doors.toggle.door.v1", "title": "Toggle door open/close", "category": "doors_access", "verb": "toggle", "natural_language_triggers": ["toggle door", "toggle doors", "switch door", "door toggle"], "targets": {"allowed_types": ["Door", "Advanced Door", "Airtight Hangar Door", "Airtight Slide Door", "Gate"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_door"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Toggle"], "terminal_path": ["Terminal", "Door", "Toggle"], "modapi_calls": [{"interface": "IMyDoor", "method": "ToggleDoor()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Door must exist", "Door must be functional", "Door must be powered", "User must have access authority"], "effects": ["Door state toggles", "Open door closes, closed door opens", "Door status changes accordingly"], "constraints": {"power_required_mw": 0.003, "network_sync": true, "multiplayer_authority": "access_allowed", "execution_time_ms": 3000, "instruction_cost": 6}, "validation_hooks": ["check_block_exists(target)", "check_block_type_door(target)", "check_block_functional(target)", "check_block_powered(target)", "check_access_authority(target)"], "error_cases": [{"condition": "door_not_found", "message": "No doors matching '{target}' found", "recovery": "List available doors"}, {"condition": "door_unpowered", "message": "Door '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "door_obstructed", "message": "Door '{target}' is obstructed", "recovery": "Clear obstruction from door path"}, {"condition": "no_access", "message": "No access permission for door '{target}'", "recovery": "Check ownership and access settings"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "toggle main entrance", "parsed": {"verb": "toggle", "target": {"name": "main entrance"}}}, {"input": "switch airlock doors", "parsed": {"verb": "toggle", "target": {"name": "airlock doors"}}}], "synonyms": ["switch door", "door toggle"], "tags": ["doors", "access", "toggle", "basic"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Blocks/IMyDoor.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "doors.get_door_status.door.v1", "title": "Get door status", "category": "doors_access", "verb": "get_door_status", "natural_language_triggers": ["get door status", "door status", "check door", "is door open", "door state"], "targets": {"allowed_types": ["Door", "Advanced Door", "Airtight Hangar Door", "Airtight Slide Door", "Gate"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_door"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Door", "Status"], "modapi_calls": [{"interface": "IMyDoor", "property": "Status", "method": "get_Status()"}, {"interface": "IMyDoor", "property": "Open", "method": "get_Open()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Door must exist", "User must have view authority"], "effects": ["Returns door status (Open/Closed/Opening/Closing)", "Returns door position ratio", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_door(target)", "check_view_authority(target)"], "error_cases": [{"condition": "door_not_found", "message": "No doors matching '{target}' found", "recovery": "List available doors"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check airlock status", "parsed": {"verb": "get_door_status", "target": {"name": "airlock"}}}, {"input": "is hangar door open", "parsed": {"verb": "get_door_status", "target": {"name": "hangar door"}}}], "synonyms": ["door status", "check door", "is door open", "door state"], "tags": ["doors", "monitoring", "status", "information"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Blocks/IMyDoor.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "doors.get_open_ratio.door.v1", "title": "Get door open ratio", "category": "doors_access", "verb": "get_open_ratio", "natural_language_triggers": ["door open ratio", "how open is door", "door position", "opening percentage"], "targets": {"allowed_types": ["Door", "Advanced Door", "Airtight Hangar Door", "Airtight Slide Door"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_door"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Door", "Position"], "modapi_calls": [{"interface": "IMyDoor", "property": "OpenRatio", "method": "get_OpenRatio()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Door must exist", "User must have view authority"], "effects": ["Returns door open ratio (0.0 = closed, 1.0 = fully open)", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_door(target)", "check_view_authority(target)"], "error_cases": [{"condition": "door_not_found", "message": "No doors matching '{target}' found", "recovery": "List available doors"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "how open is hangar door", "parsed": {"verb": "get_open_ratio", "target": {"name": "hangar door"}}}], "synonyms": ["how open is door", "door position", "opening percentage"], "tags": ["doors", "monitoring", "position", "ratio"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Blocks/IMyDoor.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "doors.emergency_open.door.v1", "title": "Emergency open all doors", "category": "doors_access", "verb": "emergency_open", "natural_language_triggers": ["emergency open doors", "emergency door access", "unlock all doors", "emergency unlock"], "targets": {"allowed_types": ["Door", "Advanced Door", "Airtight Hangar Door", "Airtight Slide Door", "Gate"], "allowed_selectors": ["all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_door"}, "parameters": [{"name": "exclude_airlocks", "type": "boolean", "required": false, "default": true, "validation": "boolean", "description": "Exclude airlock doors from emergency opening"}], "se_implementation": {"toolbar_actions": ["Emergency_Open"], "terminal_path": ["Terminal", "Doors", "Emergency Open"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "EmergencyOpenDoors(exclude_airlocks)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Doors must exist on grid", "Emergency condition active", "User must have emergency authority"], "effects": ["All doors open (except excluded types)", "Emergency access granted", "Safety locks bypassed"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "admin_or_emergency", "execution_time_ms": 5000, "instruction_cost": 40}, "validation_hooks": ["check_doors_exist_on_grid()", "check_emergency_condition()", "check_emergency_authority()"], "error_cases": [{"condition": "no_emergency_condition", "message": "Emergency door access only available during emergency", "recovery": "Emergency protocols require crisis condition"}, {"condition": "no_emergency_authority", "message": "Emergency door access requires admin or emergency authority", "recovery": "Emergency protocols require elevated permissions"}, {"condition": "no_doors_found", "message": "No doors found on grid", "recovery": "No doors available for emergency opening"}], "safety_class": "emergency", "idempotent": false, "reversible": false, "examples": [{"input": "emergency open doors", "parsed": {"verb": "emergency_open", "target": {"selector": "all"}}}, {"input": "unlock all doors emergency", "parsed": {"verb": "emergency_open", "target": {"selector": "all"}, "parameters": {"exclude_airlocks": false}}}], "synonyms": ["emergency door access", "unlock all doors", "emergency unlock"], "tags": ["doors", "emergency", "access", "safety"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Emergency Procedures"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "doors.emergency_close.door.v1", "title": "Emergency close all doors", "category": "doors_access", "verb": "emergency_close", "natural_language_triggers": ["emergency close doors", "emergency lockdown", "seal all doors", "emergency seal"], "targets": {"allowed_types": ["Door", "Advanced Door", "Airtight Hangar Door", "Airtight Slide Door", "Gate"], "allowed_selectors": ["all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_door"}, "parameters": [{"name": "force_close", "type": "boolean", "required": false, "default": false, "validation": "boolean", "description": "Force close even if obstructed"}], "se_implementation": {"toolbar_actions": ["Emergency_Close"], "terminal_path": ["Terminal", "Doors", "Emergency Close"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "EmergencyCloseDoors(force_close)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Doors must exist on grid", "Emergency condition active", "User must have emergency authority"], "effects": ["All doors close immediately", "Emergency lockdown activated", "Grid sealed from external access"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "admin_or_emergency", "execution_time_ms": 2000, "instruction_cost": 50}, "validation_hooks": ["check_doors_exist_on_grid()", "check_emergency_condition()", "check_emergency_authority()"], "error_cases": [{"condition": "no_emergency_condition", "message": "Emergency lockdown only available during emergency", "recovery": "Emergency protocols require crisis condition"}, {"condition": "no_emergency_authority", "message": "Emergency lockdown requires admin or emergency authority", "recovery": "Emergency protocols require elevated permissions"}, {"condition": "doors_obstructed", "message": "Some doors obstructed during emergency close", "recovery": "Use force_close parameter or clear obstructions"}], "safety_class": "emergency", "idempotent": false, "reversible": true, "examples": [{"input": "emergency close doors", "parsed": {"verb": "emergency_close", "target": {"selector": "all"}}}, {"input": "emergency lockdown", "parsed": {"verb": "emergency_close", "target": {"selector": "all"}, "parameters": {"force_close": true}}}], "synonyms": ["emergency lockdown", "seal all doors", "emergency seal"], "tags": ["doors", "emergency", "lockdown", "security"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Emergency Procedures"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}