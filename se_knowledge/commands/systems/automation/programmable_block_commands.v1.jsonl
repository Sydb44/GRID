{"id": "automation.run_script.programmable_block.v1", "title": "Run programmable block script", "category": "automation", "verb": "run_script", "natural_language_triggers": ["run script", "execute script", "run program", "start script"], "targets": {"allowed_types": ["Programmable Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_programmable_block"}, "parameters": [{"name": "argument", "type": "text", "required": false, "validation": "script_argument_format", "description": "Argument to pass to script"}], "se_implementation": {"toolbar_actions": ["Run"], "terminal_path": ["Terminal", "Programmable Block", "Run"], "modapi_calls": [{"interface": "IMyProgrammableBlock", "method": "TryRun(string argument)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Programmable block must exist", "Programmable block must be functional", "Programmable block must be powered", "Script must be loaded and compiled", "Script must not already be running", "User must have control authority"], "effects": ["Script execution begins", "Program logic runs", "Automation sequence starts", "Script argument passed"], "constraints": {"power_required_mw": 0.005, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 100, "instruction_cost": 20}, "validation_hooks": ["check_block_exists(target)", "check_block_type_programmable_block(target)", "check_block_functional(target)", "check_block_powered(target)", "check_script_loaded_and_compiled(target)", "check_script_not_running(target)", "validate_script_argument(argument)", "check_user_authority(target)"], "error_cases": [{"condition": "programmable_block_not_found", "message": "No programmable blocks matching '{target}' found", "recovery": "List available programmable blocks"}, {"condition": "script_not_loaded", "message": "Programmable block '{target}' has no script loaded", "recovery": "Load and compile a script before running"}, {"condition": "script_compilation_failed", "message": "Script compilation failed for '{target}'", "recovery": "Check script for errors and recompile"}, {"condition": "script_already_running", "message": "Script is already running on '{target}'", "recovery": "Wait for script to complete or stop it first"}, {"condition": "programmable_unpowered", "message": "Programmable block '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "scripts_disabled", "message": "In-game scripts are disabled", "recovery": "Enable in-game scripts in world settings"}], "safety_class": "restricted", "idempotent": false, "reversible": false, "examples": [{"input": "run mining script", "parsed": {"verb": "run_script", "target": {"name": "mining computer"}}}, {"input": "execute script with argument start", "parsed": {"verb": "run_script", "target": {"type": "programmable_block"}, "parameters": {"argument": "start"}}}], "synonyms": ["execute script", "run program", "start script"], "tags": ["automation", "programmable_block", "script", "execution"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProgrammableBlock.md", "sections": ["Methods", "TryRun"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Programmable_Block__part-001.md", "sections": ["Script Execution"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.get_script_status.programmable_block.v1", "title": "Get programmable block script status", "category": "automation", "verb": "get_script_status", "natural_language_triggers": ["get script status", "script status", "program status", "is script running"], "targets": {"allowed_types": ["Programmable Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_programmable_block"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Programmable Block", "Status"], "modapi_calls": [{"interface": "IMyProgrammableBlock", "property": "IsRunning", "method": "get_IsRunning()"}, {"interface": "IMyProgrammableBlock", "property": "TerminalRunArgument", "method": "get_TerminalRunArgument()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Programmable block must exist", "User must have view authority"], "effects": ["Returns script execution status", "Returns current argument", "Returns runtime information", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_programmable_block(target)", "check_view_authority(target)"], "error_cases": [{"condition": "programmable_block_not_found", "message": "No programmable blocks matching '{target}' found", "recovery": "List available programmable blocks"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check script status", "parsed": {"verb": "get_script_status", "target": {"name": "main computer"}}}, {"input": "is mining script running", "parsed": {"verb": "get_script_status", "target": {"name": "mining computer"}}}], "synonyms": ["script status", "program status", "is script running"], "tags": ["automation", "monitoring", "programmable_block", "status"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyProgrammableBlock.md", "sections": ["Properties", "Status"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.load_script.programmable_block.v1", "title": "Load script into programmable block", "category": "automation", "verb": "load_script", "natural_language_triggers": ["load script", "install script", "set script", "script setup"], "targets": {"allowed_types": ["Programmable Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_programmable_block"}, "parameters": [{"name": "script_name", "type": "text", "required": true, "validation": "script_name_format", "description": "Name of script to load"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Programmable Block", "Load Script"], "modapi_calls": [{"interface": "IMyProgrammableBlock", "method": "LoadScript(string script_name)"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Programmable block must exist", "Programmable block must be functional", "Script must be available", "User must have control authority"], "effects": ["Script loaded into programmable block", "Code compiled", "Ready for execution"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5000, "instruction_cost": 25}, "validation_hooks": ["check_block_exists(target)", "check_block_type_programmable_block(target)", "check_block_functional(target)", "validate_script_exists(script_name)", "check_user_authority(target)"], "error_cases": [{"condition": "programmable_block_not_found", "message": "No programmable blocks matching '{target}' found", "recovery": "List available programmable blocks"}, {"condition": "script_not_found", "message": "Script '{script_name}' not found", "recovery": "Check script name or subscribe to script from workshop"}, {"condition": "script_load_failed", "message": "Failed to load script '{script_name}'", "recovery": "Check script compatibility and format"}, {"condition": "scripts_disabled", "message": "In-game scripts are disabled", "recovery": "Enable in-game scripts in world settings"}], "safety_class": "restricted", "idempotent": true, "reversible": true, "examples": [{"input": "load mining automation script", "parsed": {"verb": "load_script", "target": {"name": "mining computer"}, "parameters": {"script_name": "Mining Automation"}}}, {"input": "install flight script", "parsed": {"verb": "load_script", "target": {"type": "programmable_block"}, "parameters": {"script_name": "Advanced Flight Control"}}}], "synonyms": ["install script", "set script", "script setup"], "tags": ["automation", "programmable_block", "script", "loading"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Programmable_Block__part-001.md", "sections": ["Script Loading"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.set_script_argument.programmable_block.v1", "title": "Set programmable block script argument", "category": "automation", "verb": "set_script_argument", "natural_language_triggers": ["set script argument", "script argument", "program parameter", "script parameter"], "targets": {"allowed_types": ["Programmable Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_programmable_block"}, "parameters": [{"name": "argument", "type": "text", "required": true, "validation": "script_argument_format", "description": "Argument string for script"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Programmable Block", "Argument"], "modapi_calls": [{"interface": "IMyProgrammableBlock", "method": "SetScriptArgument(string argument)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Programmable block must exist", "Programmable block must be functional", "Script should be loaded", "User must have control authority"], "effects": ["Script argument set", "Program parameter configured", "Script behavior customized"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_programmable_block(target)", "check_block_functional(target)", "validate_script_argument_format(argument)", "check_user_authority(target)"], "error_cases": [{"condition": "programmable_block_not_found", "message": "No programmable blocks matching '{target}' found", "recovery": "List available programmable blocks"}, {"condition": "argument_too_long", "message": "Script argument too long", "recovery": "Shorten script argument"}, {"condition": "argument_invalid", "message": "Invalid characters in script argument", "recovery": "Use valid characters for script argument"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set script argument mining_mode:auto", "parsed": {"verb": "set_script_argument", "target": {"name": "mining computer"}, "parameters": {"argument": "mining_mode:auto"}}}, {"input": "script parameter config:defensive", "parsed": {"verb": "set_script_argument", "target": {"type": "programmable_block"}, "parameters": {"argument": "config:defensive"}}}], "synonyms": ["script argument", "program parameter", "script parameter"], "tags": ["automation", "programmable_block", "argument", "parameter"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Programmable_Block__part-001.md", "sections": ["Arguments"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}