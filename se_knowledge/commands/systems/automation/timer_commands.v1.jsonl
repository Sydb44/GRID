{"id": "automation.start_timer.timer.v1", "title": "Start timer countdown", "category": "automation", "verb": "start_timer", "natural_language_triggers": ["start timer", "begin countdown", "timer start", "activate timer"], "targets": {"allowed_types": ["Timer Block"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_timer"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Start"], "terminal_path": ["Terminal", "Timer Block", "Start"], "modapi_calls": [{"interface": "IMyTimerBlock", "method": "StartCountdown()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Timer must exist", "Timer must be functional", "Timer must be powered", "Timer must have actions configured", "User must have control authority"], "effects": ["Timer countdown begins", "Actions will execute after delay", "Automation sequence initiated"], "constraints": {"power_required_mw": 0.0001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_timer(target)", "check_block_functional(target)", "check_block_powered(target)", "check_timer_has_actions(target)", "check_user_authority(target)"], "error_cases": [{"condition": "timer_not_found", "message": "No timers matching '{target}' found", "recovery": "List available timers"}, {"condition": "timer_unpowered", "message": "Timer '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "no_actions_configured", "message": "Timer '{target}' has no actions configured", "recovery": "Configure timer actions before starting"}, {"condition": "timer_already_running", "message": "Timer '{target}' is already counting down", "recovery": "Timer countdown is already active"}, {"condition": "timer_not_functional", "message": "Timer '{target}' is not functional", "recovery": "Check timer condition"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "start airlock timer", "parsed": {"verb": "start_timer", "target": {"name": "airlock timer"}}}, {"input": "begin countdown on all timers", "parsed": {"verb": "start_timer", "target": {"type": "timer", "selector": "all"}}}], "synonyms": ["begin countdown", "timer start", "activate timer"], "tags": ["automation", "timer", "countdown", "start"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTimerBlock.md", "sections": ["Methods", "StartCountdown"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Timer_Block__part-001.md", "sections": ["Usage"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.stop_timer.timer.v1", "title": "Stop timer countdown", "category": "automation", "verb": "stop_timer", "natural_language_triggers": ["stop timer", "halt countdown", "timer stop", "cancel timer"], "targets": {"allowed_types": ["Timer Block"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_timer"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Stop"], "terminal_path": ["Terminal", "Timer Block", "Stop"], "modapi_calls": [{"interface": "IMyTimerBlock", "method": "StopCountdown()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Timer must exist", "Timer must be functional", "User must have control authority"], "effects": ["Timer countdown stops", "Scheduled actions canceled", "Automation sequence halted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_timer(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "timer_not_found", "message": "No timers matching '{target}' found", "recovery": "List available timers"}, {"condition": "timer_not_running", "message": "Timer '{target}' is not counting down", "recovery": "Timer is not currently active"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "stop emergency timer", "parsed": {"verb": "stop_timer", "target": {"name": "emergency timer"}}}, {"input": "cancel all timers", "parsed": {"verb": "stop_timer", "target": {"type": "timer", "selector": "all"}}}], "synonyms": ["halt countdown", "timer stop", "cancel timer"], "tags": ["automation", "timer", "stop", "cancel"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTimerBlock.md", "sections": ["Methods", "StopCountdown"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.trigger_timer_now.timer.v1", "title": "Trigger timer immediately", "category": "automation", "verb": "trigger_timer_now", "natural_language_triggers": ["trigger timer now", "timer trigger", "execute timer", "immediate trigger"], "targets": {"allowed_types": ["Timer Block"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_timer"}, "parameters": [], "se_implementation": {"toolbar_actions": ["TriggerNow"], "terminal_path": ["Terminal", "Timer Block", "Trigger Now"], "modapi_calls": [{"interface": "IMyTimerBlock", "method": "Trigger()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Timer must exist", "Timer must be functional", "Timer must be powered", "Timer must have actions configured", "User must have control authority"], "effects": ["Timer actions execute immediately", "Countdown bypassed", "Automation sequence triggered"], "constraints": {"power_required_mw": 0.0001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 10}, "validation_hooks": ["check_block_exists(target)", "check_block_type_timer(target)", "check_block_functional(target)", "check_block_powered(target)", "check_timer_has_actions(target)", "check_user_authority(target)"], "error_cases": [{"condition": "timer_not_found", "message": "No timers matching '{target}' found", "recovery": "List available timers"}, {"condition": "timer_unpowered", "message": "Timer '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "no_actions_configured", "message": "Timer '{target}' has no actions configured", "recovery": "Configure timer actions before triggering"}], "safety_class": "safe", "idempotent": false, "reversible": false, "examples": [{"input": "trigger emergency timer now", "parsed": {"verb": "trigger_timer_now", "target": {"name": "emergency timer"}}}, {"input": "execute maintenance timer", "parsed": {"verb": "trigger_timer_now", "target": {"name": "maintenance timer"}}}], "synonyms": ["timer trigger", "execute timer", "immediate trigger"], "tags": ["automation", "timer", "trigger", "immediate"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTimerBlock.md", "sections": ["Methods", "Trigger"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.set_timer_delay.timer.v1", "title": "Set timer delay duration", "category": "automation", "verb": "set_timer_delay", "natural_language_triggers": ["set timer delay", "timer delay", "countdown time", "set timer duration"], "targets": {"allowed_types": ["Timer Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_timer"}, "parameters": [{"name": "delay_seconds", "type": "float", "range": {"min": 1.0, "max": 3600.0}, "units": "seconds", "default": 60.0, "required": true, "validation": "timer_delay_range", "terminal_name": "Trigger Delay"}], "se_implementation": {"toolbar_actions": ["IncreaseDelay", "DecreaseDelay"], "terminal_path": ["Terminal", "Timer Block", "Trigger Delay"], "modapi_calls": [{"interface": "IMyTimerBlock", "property": "TriggerDelay", "method": "set_TriggerDelay(float seconds)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Timer must exist", "Timer must be functional", "Delay must be within valid range", "User must have control authority"], "effects": ["Timer.TriggerDelay = delay_seconds", "Countdown duration set", "Timer timing configured"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_timer(target)", "check_block_functional(target)", "validate_timer_delay_range(delay_seconds)", "check_user_authority(target)"], "error_cases": [{"condition": "timer_not_found", "message": "No timers matching '{target}' found", "recovery": "List available timers"}, {"condition": "delay_out_of_range", "message": "Timer delay {delay_seconds}s out of range (1-3600s)", "recovery": "Use delay between 1 second and 1 hour"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set airlock timer delay to 30 seconds", "parsed": {"verb": "set_timer_delay", "target": {"name": "airlock timer"}, "parameters": {"delay_seconds": 30.0}}}, {"input": "timer delay 120 seconds", "parsed": {"verb": "set_timer_delay", "target": {"type": "timer"}, "parameters": {"delay_seconds": 120.0}}}], "synonyms": ["timer delay", "countdown time", "set timer duration"], "tags": ["automation", "timer", "delay", "duration"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTimerBlock.md", "sections": ["Properties", "TriggerDelay"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Timer_Block__part-001.md", "sections": ["Delay Configuration"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.set_timer_silent.timer.v1", "title": "Set timer silent mode", "category": "automation", "verb": "set_timer_silent", "natural_language_triggers": ["set timer silent", "silent timer", "quiet countdown", "mute timer"], "targets": {"allowed_types": ["Timer Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_timer"}, "parameters": [{"name": "enable_silent", "type": "boolean", "required": true, "validation": "boolean", "description": "Enable silent countdown mode"}], "se_implementation": {"toolbar_actions": ["Silent"], "terminal_path": ["Terminal", "Timer Block", "Silent"], "modapi_calls": [{"interface": "IMyTimerBlock", "property": "Silent", "method": "set_Silent(bool enable)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Timer must exist", "Timer must be functional", "User must have control authority"], "effects": ["Timer.Silent = enable_silent", "Countdown audio behavior set", "Sound notification configured"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_timer(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "timer_not_found", "message": "No timers matching '{target}' found", "recovery": "List available timers"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set stealth timer silent", "parsed": {"verb": "set_timer_silent", "target": {"name": "stealth timer"}, "parameters": {"enable_silent": true}}}, {"input": "mute countdown", "parsed": {"verb": "set_timer_silent", "target": {"type": "timer"}, "parameters": {"enable_silent": true}}}], "synonyms": ["silent timer", "quiet countdown", "mute timer"], "tags": ["automation", "timer", "silent", "audio"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTimerBlock.md", "sections": ["Properties", "Silent"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "automation.get_timer_status.timer.v1", "title": "Get timer countdown status", "category": "automation", "verb": "get_timer_status", "natural_language_triggers": ["get timer status", "timer status", "countdown status", "timer info"], "targets": {"allowed_types": ["Timer Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_timer"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Timer Block", "Status"], "modapi_calls": [{"interface": "IMyTimerBlock", "property": "IsCountingDown", "method": "get_IsCountingDown()"}, {"interface": "IMyTimerBlock", "property": "TriggerDelay", "method": "get_TriggerDelay()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Timer must exist", "User must have view authority"], "effects": ["Returns countdown status", "Returns remaining time", "Returns timer configuration", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_timer(target)", "check_view_authority(target)"], "error_cases": [{"condition": "timer_not_found", "message": "No timers matching '{target}' found", "recovery": "List available timers"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check timer status", "parsed": {"verb": "get_timer_status", "target": {"name": "main timer"}}}, {"input": "countdown status all", "parsed": {"verb": "get_timer_status", "target": {"type": "timer", "selector": "all"}}}], "synonyms": ["timer status", "countdown status", "timer info"], "tags": ["automation", "monitoring", "timer", "status"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTimerBlock.md", "sections": ["Properties", "Status"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}