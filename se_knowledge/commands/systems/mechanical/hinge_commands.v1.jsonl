{"id": "mechanical.set_hinge_angle.hinge.v1", "title": "Set hinge to specific angle", "category": "mechanical", "verb": "set_hinge_angle", "natural_language_triggers": ["set hinge angle", "hinge angle", "rotate hinge to", "hinge position"], "targets": {"allowed_types": ["Hinge", "Small Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_hinge"}, "parameters": [{"name": "angle", "type": "angle_degrees", "range": {"min": -90, "max": 90}, "units": "degrees", "default": 0, "required": true, "validation": "hinge_angle_range", "terminal_name": "Target Angle"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Hinge", "Target Angle"], "modapi_calls": [{"interface": "IMyMotorStator", "method": "SetTargetAngle(float degrees)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Hinge must exist", "Hinge must be functional", "Hinge must be powered", "Angle must be within hinge limits", "User must have control authority"], "effects": ["Hinge rotates to target angle", "Automatic positioning to specified degrees", "Movement stops at target angle"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 3000, "instruction_cost": 10}, "validation_hooks": ["check_block_exists(target)", "check_block_type_hinge(target)", "check_block_functional(target)", "check_block_powered(target)", "validate_hinge_angle_within_limits(target, angle)", "check_user_authority(target)"], "error_cases": [{"condition": "hinge_not_found", "message": "No hinges matching '{target}' found", "recovery": "List available hinges"}, {"condition": "angle_out_of_limits", "message": "Angle {angle}° outside hinge limits for '{target}'", "recovery": "Use angle within hinge's rotation limits (-90° to 90°)"}, {"condition": "hinge_unpowered", "message": "Hinge '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "rotation_blocked", "message": "Path to angle {angle}° is blocked for '{target}'", "recovery": "Clear obstruction from hinge rotation path"}, {"condition": "hinge_overloaded", "message": "Hinge '{target}' cannot rotate to angle due to load", "recovery": "Reduce load on hinge"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set landing gear hinge to 45 degrees", "parsed": {"verb": "set_hinge_angle", "target": {"name": "landing gear hinge"}, "parameters": {"angle": 45}}}, {"input": "hinge angle -30°", "parsed": {"verb": "set_hinge_angle", "target": {"type": "hinge"}, "parameters": {"angle": -30}}}], "synonyms": ["hinge angle", "rotate hinge to", "hinge position"], "tags": ["mechanical", "hinge", "angle", "position"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorStator.md", "sections": ["Hinge Control", "Angle Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "mechanical.set_hinge_velocity.hinge.v1", "title": "Set hinge rotation velocity", "category": "mechanical", "verb": "set_hinge_velocity", "natural_language_triggers": ["set hinge speed", "hinge velocity", "hinge rotation speed", "hinge rate"], "targets": {"allowed_types": ["Hinge", "Small Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_hinge"}, "parameters": [{"name": "velocity", "type": "float", "range": {"min": -30.0, "max": 30.0}, "units": "RPM", "default": 5.0, "required": true, "validation": "hinge_velocity_range", "terminal_name": "Velocity", "description": "Negative values reverse direction"}], "se_implementation": {"toolbar_actions": ["IncreaseVelocity", "DecreaseVelocity"], "terminal_path": ["Terminal", "Hinge", "Velocity"], "modapi_calls": [{"interface": "IMyMotorStator", "property": "TargetVelocityRPM", "method": "set_TargetVelocityRPM(float velocity)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Hinge must exist", "Hinge must be functional", "User must have control authority"], "effects": ["Hinge.TargetVelocityRPM = velocity", "Rotation speed changes", "Direction reverses if velocity is negative"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_hinge(target)", "check_block_functional(target)", "validate_hinge_velocity_range(velocity)", "check_user_authority(target)"], "error_cases": [{"condition": "hinge_not_found", "message": "No hinges matching '{target}' found", "recovery": "List available hinges"}, {"condition": "velocity_out_of_range", "message": "Velocity {velocity} RPM out of range (-30 to 30)", "recovery": "Use velocity between -30 and 30 RPM"}, {"condition": "velocity_too_high_for_load", "message": "Velocity too high for current hinge load", "recovery": "Reduce velocity or decrease hinge load"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set ramp hinge speed to 10 rpm", "parsed": {"verb": "set_hinge_velocity", "target": {"name": "ramp hinge"}, "parameters": {"velocity": 10.0}}}, {"input": "hinge velocity -5 reverse", "parsed": {"verb": "set_hinge_velocity", "target": {"type": "hinge"}, "parameters": {"velocity": -5.0}}}], "synonyms": ["set hinge speed", "hinge velocity", "hinge rotation speed", "hinge rate"], "tags": ["mechanical", "hinge", "velocity", "speed"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorStator.md", "sections": ["Properties", "Velocity Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "mechanical.start_hinge.hinge.v1", "title": "Start hinge rotation", "category": "mechanical", "verb": "start_hinge", "natural_language_triggers": ["start hinge", "activate hinge", "hinge on", "begin hinge rotation"], "targets": {"allowed_types": ["Hinge", "Small Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_hinge"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_On"], "terminal_path": ["Terminal", "Hinge", "On/Off"], "modapi_calls": [{"interface": "IMyMotorStator", "property": "Enabled", "method": "set_Enabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Hinge must exist", "Hinge must be functional", "Hinge must be powered", "Hinge must have attached rotor head", "User must have control authority"], "effects": ["Hinge starts rotating", "Hinge.Enabled = true", "Attached blocks rotate", "Power consumption begins"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1000, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_hinge(target)", "check_block_functional(target)", "check_block_powered(target)", "check_hinge_has_head(target)", "check_user_authority(target)"], "error_cases": [{"condition": "hinge_not_found", "message": "No hinges matching '{target}' found", "recovery": "List available hinges"}, {"condition": "hinge_no_head", "message": "Hinge '{target}' has no rotor head attached", "recovery": "Attach rotor head to enable hinge rotation"}, {"condition": "hinge_unpowered", "message": "Hinge '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "rotation_blocked", "message": "Hinge '{target}' rotation is blocked", "recovery": "Clear obstruction from hinge path"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "start ramp hinge", "parsed": {"verb": "start_hinge", "target": {"name": "ramp hinge"}}}, {"input": "activate all hinges", "parsed": {"verb": "start_hinge", "target": {"type": "hinge", "selector": "all"}}}], "synonyms": ["activate hinge", "hinge on", "begin hinge rotation"], "tags": ["mechanical", "hinge", "rotation", "start"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorStator.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "mechanical.stop_hinge.hinge.v1", "title": "Stop hinge rotation", "category": "mechanical", "verb": "stop_hinge", "natural_language_triggers": ["stop hinge", "halt hinge", "hinge off", "stop hinge rotation"], "targets": {"allowed_types": ["Hinge", "Small Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_hinge"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_Off"], "terminal_path": ["Terminal", "Hinge", "On/Off"], "modapi_calls": [{"interface": "IMyMotorStator", "property": "Enabled", "method": "set_Enabled(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Hinge must exist", "Hinge must be functional", "User must have control authority"], "effects": ["Hinge stops rotating", "Hinge.Enabled = false", "Rotation ceases", "Power consumption stops"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_hinge(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "hinge_not_found", "message": "No hinges matching '{target}' found", "recovery": "List available hinges"}, {"condition": "hinge_already_stopped", "message": "Hinge '{target}' is already stopped", "recovery": "Hinge is not rotating"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "stop landing hinge", "parsed": {"verb": "stop_hinge", "target": {"name": "landing hinge"}}}, {"input": "halt all hinges", "parsed": {"verb": "stop_hinge", "target": {"type": "hinge", "selector": "all"}}}], "synonyms": ["halt hinge", "hinge off", "stop hinge rotation"], "tags": ["mechanical", "hinge", "rotation", "stop"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorStator.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "mechanical.get_hinge_angle.hinge.v1", "title": "Get hinge current angle", "category": "mechanical", "verb": "get_hinge_angle", "natural_language_triggers": ["get hinge angle", "hinge angle", "current hinge position", "where is hinge"], "targets": {"allowed_types": ["Hinge", "Small Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_hinge"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Hinge", "Current Angle"], "modapi_calls": [{"interface": "IMyMotorStator", "property": "Angle", "method": "get_Angle()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Hinge must exist", "User must have view authority"], "effects": ["Returns current hinge angle in degrees", "Returns rotation status", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_hinge(target)", "check_view_authority(target)"], "error_cases": [{"condition": "hinge_not_found", "message": "No hinges matching '{target}' found", "recovery": "List available hinges"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get ramp hinge angle", "parsed": {"verb": "get_hinge_angle", "target": {"name": "ramp hinge"}}}, {"input": "where is landing hinge", "parsed": {"verb": "get_hinge_angle", "target": {"name": "landing hinge"}}}], "synonyms": ["hinge angle", "current hinge position", "where is hinge"], "tags": ["mechanical", "monitoring", "hinge", "angle"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorStator.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "mechanical.set_hinge_limits.hinge.v1", "title": "Set hinge rotation limits", "category": "mechanical", "verb": "set_hinge_limits", "natural_language_triggers": ["set hinge limits", "hinge limits", "limit hinge rotation", "hinge boundaries"], "targets": {"allowed_types": ["Hinge", "Small Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_hinge"}, "parameters": [{"name": "min_angle", "type": "angle_degrees", "range": {"min": -90, "max": 90}, "units": "degrees", "required": true, "validation": "hinge_limit_range", "terminal_name": "Lower Limit"}, {"name": "max_angle", "type": "angle_degrees", "range": {"min": -90, "max": 90}, "units": "degrees", "required": true, "validation": "hinge_limit_range", "terminal_name": "Upper Limit"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Hinge", "Limits"], "modapi_calls": [{"interface": "IMyMotorStator", "property": "LowerLimitDeg", "method": "set_LowerLimitDeg(float min)"}, {"interface": "IMyMotorStator", "property": "UpperLimitDeg", "method": "set_UpperLimitDeg(float max)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Hinge must exist", "Hinge must be functional", "Min angle must be less than max angle", "Limits must be within hinge capability (-90° to 90°)", "User must have control authority"], "effects": ["Hinge.LowerLimitDeg = min_angle", "Hinge.UpperLimitDeg = max_angle", "Rotation restricted to new limits", "Safety boundaries established"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_hinge(target)", "check_block_functional(target)", "validate_hinge_limits(min_angle, max_angle)", "validate_limits_within_hinge_capability(min_angle, max_angle)", "check_user_authority(target)"], "error_cases": [{"condition": "hinge_not_found", "message": "No hinges matching '{target}' found", "recovery": "List available hinges"}, {"condition": "invalid_limit_range", "message": "Min angle {min_angle}° must be less than max angle {max_angle}°", "recovery": "Ensure minimum is less than maximum"}, {"condition": "limits_out_of_capability", "message": "Limits exceed hinge capability (-90° to 90°)", "recovery": "Use limits within -90° to 90° range"}, {"condition": "current_angle_outside_limits", "message": "Current angle outside new limits", "recovery": "Rotate hinge within new limits first"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set ramp hinge limits -45° to 45°", "parsed": {"verb": "set_hinge_limits", "target": {"name": "ramp hinge"}, "parameters": {"min_angle": -45, "max_angle": 45}}}, {"input": "limit hinge rotation 0 to 90 degrees", "parsed": {"verb": "set_hinge_limits", "target": {"type": "hinge"}, "parameters": {"min_angle": 0, "max_angle": 90}}}], "synonyms": ["hinge limits", "limit hinge rotation", "hinge boundaries"], "tags": ["mechanical", "hinge", "limits", "safety", "angle"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMotorStator.md", "sections": ["Properties", "Limits"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}