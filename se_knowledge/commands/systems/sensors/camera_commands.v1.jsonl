{"id": "sensors.enable_camera_raycast.camera.v1", "title": "Enable camera raycast scanning", "category": "sensors", "verb": "enable_camera_raycast", "natural_language_triggers": ["enable camera raycast", "camera scanning on", "activate scanning", "enable camera scan"], "targets": {"allowed_types": ["Camera Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_camera"}, "parameters": [], "se_implementation": {"toolbar_actions": ["EnableRaycast_On"], "terminal_path": ["Terminal", "Camera", "Enable Raycast"], "modapi_calls": [{"interface": "IMyCameraBlock", "property": "EnableRaycast", "method": "set_EnableRaycast(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Camera must exist", "Camera must be functional", "Camera must be powered", "User must have control authority"], "effects": ["Camera.EnableRaycast = true", "Scanning capability activated", "Available scan range begins accumulating", "Power consumption increases"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_camera(target)", "check_block_functional(target)", "check_block_powered(target)", "check_user_authority(target)"], "error_cases": [{"condition": "camera_not_found", "message": "No cameras matching '{target}' found", "recovery": "List available cameras"}, {"condition": "camera_unpowered", "message": "Camera '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "camera_not_functional", "message": "Camera '{target}' is not functional", "recovery": "Check camera condition"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable scanning on nav camera", "parsed": {"verb": "enable_camera_raycast", "target": {"name": "nav camera"}}}, {"input": "activate camera scanning", "parsed": {"verb": "enable_camera_raycast", "target": {"type": "camera"}}}], "synonyms": ["camera scanning on", "activate scanning", "enable camera scan"], "tags": ["sensors", "camera", "scanning", "raycast"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCameraBlock.md", "sections": ["Properties", "EnableRaycast"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "sensors.disable_camera_raycast.camera.v1", "title": "Disable camera raycast scanning", "category": "sensors", "verb": "disable_camera_raycast", "natural_language_triggers": ["disable camera raycast", "camera scanning off", "deactivate scanning", "disable camera scan"], "targets": {"allowed_types": ["Camera Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_camera"}, "parameters": [], "se_implementation": {"toolbar_actions": ["EnableRaycast_Off"], "terminal_path": ["Terminal", "Camera", "Enable Raycast"], "modapi_calls": [{"interface": "IMyCameraBlock", "property": "EnableRaycast", "method": "set_EnableRaycast(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Camera must exist", "User must have control authority"], "effects": ["Camera.EnableRaycast = false", "Scanning capability deactivated", "Available scan range stops accumulating", "Power consumption decreases"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_camera(target)", "check_user_authority(target)"], "error_cases": [{"condition": "camera_not_found", "message": "No cameras matching '{target}' found", "recovery": "List available cameras"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable scanning on rear camera", "parsed": {"verb": "disable_camera_raycast", "target": {"name": "rear camera"}}}, {"input": "camera scanning off", "parsed": {"verb": "disable_camera_raycast", "target": {"type": "camera"}}}], "synonyms": ["camera scanning off", "deactivate scanning", "disable camera scan"], "tags": ["sensors", "camera", "scanning", "disable"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCameraBlock.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "sensors.scan_direction.camera.v1", "title": "Scan in specific direction with camera", "category": "sensors", "verb": "scan_direction", "natural_language_triggers": ["scan direction", "camera scan", "raycast scan", "scan forward", "detect ahead"], "targets": {"allowed_types": ["Camera Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_camera"}, "parameters": [{"name": "distance", "type": "float", "range": {"min": 1.0, "max": 27000.0}, "units": "meters", "default": 1000.0, "required": true, "validation": "scan_distance_range"}, {"name": "pitch", "type": "angle_degrees", "range": {"min": -45, "max": 45}, "units": "degrees", "default": 0, "required": false, "validation": "camera_angle_range"}, {"name": "yaw", "type": "angle_degrees", "range": {"min": -45, "max": 45}, "units": "degrees", "default": 0, "required": false, "validation": "camera_angle_range"}], "se_implementation": {"toolbar_actions": ["Scan"], "terminal_path": ["Terminal", "Camera", "Raycast"], "modapi_calls": [{"interface": "IMyCameraBlock", "method": "Raycast(double distance, float pitch, float yaw)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Camera must exist", "Camera must be functional", "Camera must be powered", "Raycast must be enabled", "Scan distance must be available", "User must have control authority"], "effects": ["Camera performs raycast scan", "Returns detected entity information", "Scan range depleted", "Detection results available"], "constraints": {"power_required_mw": 0.002, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 100, "instruction_cost": 10}, "validation_hooks": ["check_block_exists(target)", "check_block_type_camera(target)", "check_block_functional(target)", "check_block_powered(target)", "check_raycast_enabled(target)", "check_scan_range_available(target, distance)", "validate_scan_angles(pitch, yaw)", "check_user_authority(target)"], "error_cases": [{"condition": "camera_not_found", "message": "No cameras matching '{target}' found", "recovery": "List available cameras"}, {"condition": "raycast_not_enabled", "message": "Camera '{target}' raycast not enabled", "recovery": "Enable raycast on camera first"}, {"condition": "insufficient_scan_range", "message": "Camera '{target}' cannot scan {distance}m yet", "recovery": "Wait for available scan range to accumulate"}, {"condition": "scan_angles_invalid", "message": "Scan angles out of range (-45° to 45°)", "recovery": "Use pitch and yaw between -45 and 45 degrees"}, {"condition": "scan_obstructed", "message": "Scan path obstructed for camera '{target}'", "recovery": "Clear obstruction from camera view"}], "safety_class": "safe", "idempotent": false, "reversible": false, "examples": [{"input": "scan forward 500m with nav camera", "parsed": {"verb": "scan_direction", "target": {"name": "nav camera"}, "parameters": {"distance": 500.0}}}, {"input": "raycast scan 1000m pitch 10 degrees", "parsed": {"verb": "scan_direction", "target": {"type": "camera"}, "parameters": {"distance": 1000.0, "pitch": 10.0}}}], "synonyms": ["camera scan", "raycast scan", "scan forward", "detect ahead"], "tags": ["sensors", "camera", "scanning", "raycast", "detection"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCameraBlock.md", "sections": ["Methods", "Raycast"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "sensors.scan_coordinate.camera.v1", "title": "Scan specific coordinate with camera", "category": "sensors", "verb": "scan_coordinate", "natural_language_triggers": ["scan coordinate", "scan target", "scan position", "raycast to coordinate"], "targets": {"allowed_types": ["Camera Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_camera"}, "parameters": [{"name": "target_coordinate", "type": "coordinate", "required": true, "validation": "coordinate_format", "description": "GPS coordinate to scan"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Camera", "Target Scan"], "modapi_calls": [{"interface": "IMyCameraBlock", "method": "Raycast(Vector3D targetPos)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Camera must exist", "Camera must be functional", "Camera must be powered", "Raycast must be enabled", "Target must be within scan range", "User must have control authority"], "effects": ["Camera scans target coordinate", "Returns detected entity at coordinate", "Scan range depleted", "Target information available"], "constraints": {"power_required_mw": 0.002, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 100, "instruction_cost": 12}, "validation_hooks": ["check_block_exists(target)", "check_block_type_camera(target)", "check_block_functional(target)", "check_block_powered(target)", "check_raycast_enabled(target)", "validate_target_coordinate(target_coordinate)", "check_coordinate_within_scan_range(target, target_coordinate)", "check_user_authority(target)"], "error_cases": [{"condition": "camera_not_found", "message": "No cameras matching '{target}' found", "recovery": "List available cameras"}, {"condition": "invalid_coordinate", "message": "Invalid target coordinate '{target_coordinate}'", "recovery": "Use valid GPS coordinate format"}, {"condition": "target_out_of_range", "message": "Target coordinate beyond camera scan range", "recovery": "Target must be within available scan distance"}, {"condition": "raycast_not_enabled", "message": "Camera '{target}' raycast not enabled", "recovery": "Enable raycast on camera first"}, {"condition": "scan_blocked", "message": "Cannot scan coordinate - line of sight blocked", "recovery": "Clear obstruction from camera to target"}], "safety_class": "safe", "idempotent": false, "reversible": false, "examples": [{"input": "scan GPS:Asteroid:1000:0:2000: with survey camera", "parsed": {"verb": "scan_coordinate", "target": {"name": "survey camera"}, "parameters": {"target_coordinate": "GPS:Asteroid:1000:0:2000:"}}}, {"input": "raycast to target coordinates", "parsed": {"verb": "scan_coordinate", "target": {"type": "camera"}, "parameters": {"target_coordinate": "GPS:Target:500:100:800:"}}}], "synonyms": ["scan target", "scan position", "raycast to coordinate"], "tags": ["sensors", "camera", "scanning", "coordinate", "targeting"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCameraBlock.md", "sections": ["Methods", "Raycast"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "sensors.get_camera_scan_range.camera.v1", "title": "Get camera available scan range", "category": "sensors", "verb": "get_camera_scan_range", "natural_language_triggers": ["get camera scan range", "available scan range", "how far can scan", "camera range status"], "targets": {"allowed_types": ["Camera Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_camera"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Camera", "Scan Range"], "modapi_calls": [{"interface": "IMyCameraBlock", "property": "AvailableScanRange", "method": "get_AvailableScanRange()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Camera must exist", "User must have view authority"], "effects": ["Returns available scan distance in meters", "Returns time since last scan", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_camera(target)", "check_view_authority(target)"], "error_cases": [{"condition": "camera_not_found", "message": "No cameras matching '{target}' found", "recovery": "List available cameras"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check nav camera scan range", "parsed": {"verb": "get_camera_scan_range", "target": {"name": "nav camera"}}}, {"input": "how far can cameras scan", "parsed": {"verb": "get_camera_scan_range", "target": {"type": "camera", "selector": "all"}}}], "synonyms": ["available scan range", "how far can scan", "camera range status"], "tags": ["sensors", "camera", "monitoring", "range"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCameraBlock.md", "sections": ["Properties", "AvailableScanRange"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "sensors.can_camera_scan.camera.v1", "title": "Check if camera can scan distance/target", "category": "sensors", "verb": "can_camera_scan", "natural_language_triggers": ["can camera scan", "check scan capability", "can scan distance", "scan possible"], "targets": {"allowed_types": ["Camera Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_camera"}, "parameters": [{"name": "distance", "type": "float", "range": {"min": 1.0, "max": 27000.0}, "units": "meters", "required": false, "validation": "scan_distance_range"}, {"name": "target_coordinate", "type": "coordinate", "required": false, "validation": "coordinate_format", "description": "Specific coordinate to check"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Camera", "Scan Check"], "modapi_calls": [{"interface": "IMyCameraBlock", "method": "CanScan(double distance)"}, {"interface": "IMyCameraBlock", "method": "CanScan(Vector3D target)"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Camera must exist", "Camera must be functional", "User must have view authority"], "effects": ["Returns scan capability status", "Returns available range information", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_camera(target)", "check_block_functional(target)", "validate_scan_parameters(distance, target_coordinate)", "check_view_authority(target)"], "error_cases": [{"condition": "camera_not_found", "message": "No cameras matching '{target}' found", "recovery": "List available cameras"}, {"condition": "invalid_scan_parameters", "message": "Invalid scan distance or coordinate", "recovery": "Specify valid distance or GPS coordinate"}, {"condition": "raycast_not_enabled", "message": "Camera '{target}' raycast not enabled", "recovery": "Enable raycast on camera for scanning"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "can nav camera scan 2000m", "parsed": {"verb": "can_camera_scan", "target": {"name": "nav camera"}, "parameters": {"distance": 2000.0}}}, {"input": "check scan capability to GPS:Target:1000:0:500:", "parsed": {"verb": "can_camera_scan", "target": {"type": "camera"}, "parameters": {"target_coordinate": "GPS:Target:1000:0:500:"}}}], "synonyms": ["check scan capability", "can scan distance", "scan possible"], "tags": ["sensors", "camera", "capability", "check"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCameraBlock.md", "sections": ["Methods", "CanScan"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "sensors.view_camera.camera.v1", "title": "Switch to camera view", "category": "sensors", "verb": "view_camera", "natural_language_triggers": ["view camera", "switch to camera", "camera view", "look through camera"], "targets": {"allowed_types": ["Camera Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_camera"}, "parameters": [], "se_implementation": {"toolbar_actions": ["View"], "terminal_path": ["Terminal", "Camera", "View"], "modapi_calls": [{"interface": "IMyCameraBlock", "method": "RequestControllerUse()"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Camera must exist", "Camera must be functional", "Camera must be powered", "User must have control authority"], "effects": ["Player view switches to camera", "Camera becomes active", "Manual camera control enabled"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "control_allowed", "execution_time_ms": 500, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_camera(target)", "check_block_functional(target)", "check_block_powered(target)", "check_control_authority(target)"], "error_cases": [{"condition": "camera_not_found", "message": "No camera matching '{target}' found", "recovery": "List available cameras"}, {"condition": "camera_in_use", "message": "Camera '{target}' is already in use", "recovery": "Camera is currently being used by another player"}, {"condition": "camera_unpowered", "message": "Camera '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "no_control_access", "message": "No permission to control camera '{target}'", "recovery": "Check camera access permissions"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "view nav camera", "parsed": {"verb": "view_camera", "target": {"name": "nav camera"}}}, {"input": "switch to external camera", "parsed": {"verb": "view_camera", "target": {"name": "external camera"}}}], "synonyms": ["switch to camera", "camera view", "look through camera"], "tags": ["sensors", "camera", "view", "control"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCameraBlock.md", "sections": ["Control Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}