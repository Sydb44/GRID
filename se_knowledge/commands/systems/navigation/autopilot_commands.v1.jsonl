{"id": "navigation.enable_autopilot.remote_control.v1", "title": "Enable autopilot navigation", "category": "navigation", "verb": "enable_autopilot", "natural_language_triggers": ["enable autopilot", "autopilot on", "auto navigation", "start autopilot", "autonomous flight"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [], "se_implementation": {"toolbar_actions": ["AutoPilot_On"], "terminal_path": ["Terminal", "Remote Control", "Autopilot"], "modapi_calls": [{"interface": "IMyRemoteControl", "method": "SetAutoPilotEnabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Remote control must exist", "Remote control must be functional", "Remote control must be powered", "At least one waypoint must be set", "Ship must have thrusters in all directions", "Ship must have gyroscopes", "User must have control authority"], "effects": ["Autopilot.Enabled = true", "Autonomous navigation begins", "Ship follows waypoint route", "Manual control disabled"], "constraints": {"power_required_mw": 0.02, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 2000, "instruction_cost": 20}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "check_block_powered(target)", "check_waypoints_exist(target)", "check_ship_flight_capability(target)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}, {"condition": "no_waypoints", "message": "Remote control '{target}' has no waypoints set", "recovery": "Add waypoints before enabling autopilot"}, {"condition": "insufficient_thrusters", "message": "Ship lacks thrusters for autonomous flight", "recovery": "Add thrusters in all 6 directions"}, {"condition": "no_gyroscopes", "message": "Ship has no gyroscopes for autopilot", "recovery": "Add at least one gyroscope"}, {"condition": "remote_unpowered", "message": "Remote control '{target}' has no power", "recovery": "Check power grid and connections"}], "safety_class": "caution", "idempotent": true, "reversible": true, "examples": [{"input": "enable autopilot on nav system", "parsed": {"verb": "enable_autopilot", "target": {"name": "nav system"}}}, {"input": "start autonomous flight", "parsed": {"verb": "enable_autopilot", "target": {"type": "remote_control"}}}], "synonyms": ["autopilot on", "auto navigation", "start autopilot", "autonomous flight"], "tags": ["navigation", "autopilot", "autonomous", "flight"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyRemoteControl.md", "sections": ["Methods", "SetAutoPilotEnabled"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.disable_autopilot.remote_control.v1", "title": "Disable autopilot navigation", "category": "navigation", "verb": "disable_autopilot", "natural_language_triggers": ["disable autopilot", "autopilot off", "stop autopilot", "manual control", "cancel autopilot"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [], "se_implementation": {"toolbar_actions": ["AutoPilot_Off"], "terminal_path": ["Terminal", "Remote Control", "Autopilot"], "modapi_calls": [{"interface": "IMyRemoteControl", "method": "SetAutoPilotEnabled(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Remote control must exist", "Remote control must be functional", "User must have control authority"], "effects": ["Autopilot.Enabled = false", "Autonomous navigation stops", "Manual control restored", "Ship maintains current trajectory"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1000, "instruction_cost": 10}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}, {"condition": "autopilot_not_active", "message": "Autopilot is not currently active on '{target}'", "recovery": "Autopilot is already disabled"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable autopilot", "parsed": {"verb": "disable_autopilot", "target": {"type": "remote_control"}}}, {"input": "manual control", "parsed": {"verb": "disable_autopilot", "target": {"type": "remote_control"}}}], "synonyms": ["autopilot off", "stop autopilot", "manual control", "cancel autopilot"], "tags": ["navigation", "autopilot", "manual", "disable"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyRemoteControl.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.set_autopilot_speed.remote_control.v1", "title": "Set autopilot speed limit", "category": "navigation", "verb": "set_autopilot_speed", "natural_language_triggers": ["set autopilot speed", "autopilot speed limit", "flight speed", "navigation speed"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [{"name": "speed_limit", "type": "float", "range": {"min": 0.1, "max": 104.4}, "units": "m/s", "default": 10.0, "required": true, "validation": "autopilot_speed_range", "terminal_name": "Speed Limit"}], "se_implementation": {"toolbar_actions": ["IncreaseSpeedLimit", "DecreaseSpeedLimit"], "terminal_path": ["Terminal", "Remote Control", "Speed Limit"], "modapi_calls": [{"interface": "IMyRemoteControl", "method": "SetAutoPilotSpeedLimit(float speedLimit)"}, {"interface": "IMyRemoteControl", "property": "SpeedLimit", "method": "set_SpeedLimit(float)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Remote control must exist", "Remote control must be functional", "Speed limit must be within valid range", "User must have control authority"], "effects": ["RemoteControl.SpeedLimit = speed_limit", "Maximum autopilot speed set", "Flight velocity capped", "Navigation performance adjusted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "validate_autopilot_speed_range(speed_limit)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}, {"condition": "speed_out_of_range", "message": "Speed limit {speed_limit} m/s out of range (0.1-104.4)", "recovery": "Use speed between 0.1 and 104.4 m/s"}, {"condition": "speed_too_high_for_ship", "message": "Speed limit too high for ship capabilities", "recovery": "Reduce speed or improve ship thrust"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set autopilot speed to 25 m/s", "parsed": {"verb": "set_autopilot_speed", "target": {"type": "remote_control"}, "parameters": {"speed_limit": 25.0}}}, {"input": "navigation speed 50", "parsed": {"verb": "set_autopilot_speed", "target": {"name": "main nav"}, "parameters": {"speed_limit": 50.0}}}], "synonyms": ["autopilot speed limit", "flight speed", "navigation speed"], "tags": ["navigation", "autopilot", "speed", "limit"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyRemoteControl.md", "sections": ["Properties", "Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.add_waypoint.remote_control.v1", "title": "Add waypoint to autopilot route", "category": "navigation", "verb": "add_waypoint", "natural_language_triggers": ["add waypoint", "set waypoint", "add navigation point", "create waypoint", "nav to"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [{"name": "waypoint_coordinate", "type": "coordinate", "required": true, "validation": "coordinate_format", "description": "GPS coordinate for waypoint"}, {"name": "waypoint_name", "type": "text", "required": false, "default": "auto_generated", "validation": "waypoint_name_format"}, {"name": "actions", "type": "action_array", "required": false, "validation": "actions_exist", "description": "Actions to execute at waypoint"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Remote Control", "Waypoints"], "modapi_calls": [{"interface": "IMyRemoteControl", "method": "AddWaypoint(Vector3D coords, string name)"}, {"interface": "IMyBasicMissionAutopilot", "method": "AddWaypoint(IMyAutopilotWaypoint)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Remote control must exist", "Remote control must be functional", "Waypoint coordinate must be valid", "Waypoint name must be unique", "User must have control authority"], "effects": ["New waypoint added to route", "Navigation route updated", "Autopilot path extended", "Actions assigned to waypoint"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 15}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "validate_waypoint_coordinate(waypoint_coordinate)", "validate_waypoint_name_unique(target, waypoint_name)", "validate_actions_exist(actions)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}, {"condition": "invalid_coordinate", "message": "Invalid waypoint coordinate '{waypoint_coordinate}'", "recovery": "Use valid GPS coordinate format"}, {"condition": "waypoint_name_exists", "message": "Waypoint name '{waypoint_name}' already exists", "recovery": "Choose a different waypoint name"}, {"condition": "too_many_waypoints", "message": "Remote control '{target}' has maximum waypoints", "recovery": "Remove old waypoints or clear route"}, {"condition": "waypoint_too_far", "message": "Waypoint coordinate beyond reasonable flight range", "recovery": "Use waypoint within practical range"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "add waypoint GPS:Mining:1000:0:2000:", "parsed": {"verb": "add_waypoint", "target": {"type": "remote_control"}, "parameters": {"waypoint_coordinate": "GPS:Mining:1000:0:2000:"}}}, {"input": "nav to GPS:Base:0:0:0: name Home", "parsed": {"verb": "add_waypoint", "target": {"name": "main nav"}, "parameters": {"waypoint_coordinate": "GPS:Base:0:0:0:", "waypoint_name": "Home"}}}], "synonyms": ["set waypoint", "add navigation point", "create waypoint", "nav to"], "tags": ["navigation", "waypoint", "autopilot", "gps"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/AI/IMyBasicMissionAutopilot.md", "sections": ["Methods", "AddWaypoint"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.clear_waypoints.remote_control.v1", "title": "Clear all autopilot waypoints", "category": "navigation", "verb": "clear_waypoints", "natural_language_triggers": ["clear waypoints", "remove all waypoints", "reset route", "clear navigation"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [], "se_implementation": {"toolbar_actions": ["ClearWaypoints"], "terminal_path": ["Terminal", "Remote Control", "Clear Waypoints"], "modapi_calls": [{"interface": "IMyBasicMissionAutopilot", "method": "ClearWaypoints()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Remote control must exist", "Remote control must be functional", "User must have control authority"], "effects": ["All waypoints removed", "Navigation route cleared", "Autopilot stops if active", "Flight path reset"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}, {"condition": "no_waypoints_to_clear", "message": "Remote control '{target}' has no waypoints", "recovery": "No waypoints to clear"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "clear navigation route", "parsed": {"verb": "clear_waypoints", "target": {"type": "remote_control"}}}, {"input": "reset waypoints on main nav", "parsed": {"verb": "clear_waypoints", "target": {"name": "main nav"}}}], "synonyms": ["remove all waypoints", "reset route", "clear navigation"], "tags": ["navigation", "waypoint", "clear", "reset"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/AI/IMyBasicMissionAutopilot.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.set_collision_avoidance.remote_control.v1", "title": "Set autopilot collision avoidance", "category": "navigation", "verb": "set_collision_avoidance", "natural_language_triggers": ["set collision avoidance", "collision avoidance", "avoid obstacles", "safe navigation"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [{"name": "enable_avoidance", "type": "boolean", "required": true, "validation": "boolean", "description": "Enable or disable collision avoidance"}], "se_implementation": {"toolbar_actions": ["CollisionAvoidance"], "terminal_path": ["Terminal", "Remote Control", "Collision Avoidance"], "modapi_calls": [{"interface": "IMyRemoteControl", "method": "SetCollisionAvoidance(bool enabled)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Remote control must exist", "Remote control must be functional", "User must have control authority"], "effects": ["Collision avoidance state set", "Obstacle detection configured", "Safe navigation behavior adjusted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable collision avoidance", "parsed": {"verb": "set_collision_avoidance", "target": {"type": "remote_control"}, "parameters": {"enable_avoidance": true}}}, {"input": "safe navigation on", "parsed": {"verb": "set_collision_avoidance", "target": {"name": "main nav"}, "parameters": {"enable_avoidance": true}}}], "synonyms": ["collision avoidance", "avoid obstacles", "safe navigation"], "tags": ["navigation", "safety", "collision", "avoidance"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/MyRemoteControl__part-003.md", "sections": ["Methods", "SetCollisionAvoidance"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/AI_Flight__part-001.md", "sections": ["Collision Avoidance"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.set_precision_mode.remote_control.v1", "title": "Set autopilot precision mode", "category": "navigation", "verb": "set_precision_mode", "natural_language_triggers": ["set precision mode", "precision navigation", "precise flight", "careful navigation"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [{"name": "enable_precision", "type": "boolean", "required": true, "validation": "boolean", "description": "Enable precise waypoint approach"}], "se_implementation": {"toolbar_actions": ["PrecisionMode"], "terminal_path": ["Terminal", "Remote Control", "Precision Mode"], "modapi_calls": [{"interface": "IMyRemoteControl", "method": "SetPrecisionMode(bool enabled)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Remote control must exist", "Remote control must be functional", "User must have control authority"], "effects": ["Precision mode state set", "Waypoint approach behavior changed", "Deceleration and turning precision adjusted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable precision mode for docking", "parsed": {"verb": "set_precision_mode", "target": {"name": "docking nav"}, "parameters": {"enable_precision": true}}}, {"input": "careful navigation on", "parsed": {"verb": "set_precision_mode", "target": {"type": "remote_control"}, "parameters": {"enable_precision": true}}}], "synonyms": ["precision navigation", "precise flight", "careful navigation"], "tags": ["navigation", "precision", "careful", "accuracy"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/AI_Flight__part-001.md", "sections": ["Precision Mode"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.get_current_waypoint.remote_control.v1", "title": "Get current autopilot waypoint", "category": "navigation", "verb": "get_current_waypoint", "natural_language_triggers": ["get current waypoint", "current destination", "where flying to", "navigation target"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Remote Control", "Current Waypoint"], "modapi_calls": [{"interface": "IMyRemoteControl", "property": "CurrentWaypoint", "method": "get_CurrentWaypoint()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Remote control must exist", "User must have view authority"], "effects": ["Returns current waypoint information", "Returns destination coordinate", "Returns waypoint name and actions", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_view_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}, {"condition": "no_current_waypoint", "message": "Remote control '{target}' has no current waypoint", "recovery": "Add waypoints to navigation route"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get current destination", "parsed": {"verb": "get_current_waypoint", "target": {"type": "remote_control"}}}, {"input": "where is ship flying to", "parsed": {"verb": "get_current_waypoint", "target": {"name": "main nav"}}}], "synonyms": ["current destination", "where flying to", "navigation target"], "tags": ["navigation", "monitoring", "waypoint", "destination"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyRemoteControl.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "navigation.cycle_waypoints.remote_control.v1", "title": "Enable waypoint cycling", "category": "navigation", "verb": "cycle_waypoints", "natural_language_triggers": ["cycle waypoints", "repeat route", "loop navigation", "continuous patrol"], "targets": {"allowed_types": ["Remote Control"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_remote_control"}, "parameters": [{"name": "enable_cycling", "type": "boolean", "required": true, "validation": "boolean", "description": "Enable continuous waypoint cycling"}], "se_implementation": {"toolbar_actions": ["CycleWaypoints"], "terminal_path": ["Terminal", "Remote Control", "Cycle Waypoints"], "modapi_calls": [{"interface": "IRemoteControlAutomaticBehaviour", "property": "CycleWaypoints", "method": "set_CycleWaypoints(bool)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Remote control must exist", "Remote control must be functional", "At least 2 waypoints must exist", "User must have control authority"], "effects": ["Waypoint cycling enabled/disabled", "Route becomes continuous loop", "Patrol behavior activated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_remote_control(target)", "check_block_functional(target)", "check_minimum_waypoints_for_cycling(target)", "check_user_authority(target)"], "error_cases": [{"condition": "remote_control_not_found", "message": "No remote controls matching '{target}' found", "recovery": "List available remote controls"}, {"condition": "insufficient_waypoints", "message": "Need at least 2 waypoints for cycling", "recovery": "Add more waypoints to enable cycling"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable patrol route cycling", "parsed": {"verb": "cycle_waypoints", "target": {"name": "patrol nav"}, "parameters": {"enable_cycling": true}}}, {"input": "continuous patrol", "parsed": {"verb": "cycle_waypoints", "target": {"type": "remote_control"}, "parameters": {"enable_cycling": true}}}], "synonyms": ["repeat route", "loop navigation", "continuous patrol"], "tags": ["navigation", "cycling", "patrol", "loop"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IRemoteControlAutomaticBehaviour__part-001.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}