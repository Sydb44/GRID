{"id": "propulsion.get_grid_thrust_status.grid.v1", "title": "Get grid thrust capabilities", "category": "propulsion", "verb": "get_grid_thrust_status", "natural_language_triggers": ["get thrust status", "grid thrust info", "thruster capabilities", "ship mobility"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Info", "Thrust"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "GetThrustCapabilities()"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "User must have view authority"], "effects": ["Returns thrust capability by direction", "Returns total thrust available", "Returns thruster count and types", "Returns fuel status", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 5, "instruction_cost": 8}, "validation_hooks": ["check_grid_access()", "check_view_authority_grid()"], "error_cases": [{"condition": "no_grid_access", "message": "No access to grid thrust information", "recovery": "Check permissions and grid connectivity"}, {"condition": "no_thrusters_found", "message": "No thrusters found on grid", "recovery": "Build thrusters for mobility"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get ship thrust capabilities", "parsed": {"verb": "get_grid_thrust_status", "target": {"type": "grid", "selector": "current"}}}, {"input": "check grid mobility", "parsed": {"verb": "get_grid_thrust_status", "target": {"type": "grid", "selector": "current"}}}], "synonyms": ["grid thrust info", "thruster capabilities", "ship mobility"], "tags": ["propulsion", "monitoring", "grid", "capabilities"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyGridTerminalSystem.md", "sections": ["Thrust Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.get_thrust_to_weight_ratio.grid.v1", "title": "Get thrust-to-weight ratio", "category": "propulsion", "verb": "get_thrust_to_weight_ratio", "natural_language_triggers": ["get thrust to weight ratio", "twr", "thrust weight ratio", "can ship lift"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Info", "TWR"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CalculateThrustToWeightRatio()"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "Grid must have thrusters", "User must have view authority"], "effects": ["Returns thrust-to-weight ratio", "Returns lift capability assessment", "Returns planetary flight viability", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 10, "instruction_cost": 8}, "validation_hooks": ["check_grid_access()", "check_thrusters_exist_on_grid()", "check_view_authority_grid()"], "error_cases": [{"condition": "no_thrusters_found", "message": "No thrusters found on grid for TWR calculation", "recovery": "Build thrusters for mobility assessment"}, {"condition": "calculation_failed", "message": "TWR calculation failed", "recovery": "Check grid mass and thruster configuration"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get thrust to weight ratio", "parsed": {"verb": "get_thrust_to_weight_ratio", "target": {"type": "grid", "selector": "current"}}}, {"input": "can ship lift off planet", "parsed": {"verb": "get_thrust_to_weight_ratio", "target": {"type": "grid", "selector": "current"}}}], "synonyms": ["twr", "thrust weight ratio", "can ship lift"], "tags": ["propulsion", "monitoring", "twr", "analysis"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster_mechanics__part-001.md", "sections": ["Weight Analysis"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.get_thruster_efficiency.thruster.v1", "title": "Get thruster efficiency in current environment", "category": "propulsion", "verb": "get_thruster_efficiency", "natural_language_triggers": ["get thruster efficiency", "thruster performance", "efficiency rating", "how efficient"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thruster", "Efficiency"], "modapi_calls": [{"interface": "IMyThrust", "method": "GetEfficiencyInCurrentEnvironment()"}, {"interface": "IMyThrust", "property": "MaxEffectiveThrust", "method": "get_MaxEffectiveThrust()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Thruster must exist", "User must have view authority"], "effects": ["Returns efficiency percentage", "Returns effective thrust vs maximum", "Returns environment suitability", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_view_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "efficiency_calculation_failed", "message": "Cannot calculate efficiency for '{target}'", "recovery": "Check thruster condition and environment"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check atmospheric thruster efficiency", "parsed": {"verb": "get_thruster_efficiency", "target": {"type": "atmospheric_thruster"}}}, {"input": "how efficient are ion thrusters", "parsed": {"verb": "get_thruster_efficiency", "target": {"type": "ion_thruster", "selector": "all"}}}], "synonyms": ["thruster performance", "efficiency rating", "how efficient"], "tags": ["propulsion", "monitoring", "efficiency", "performance"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Efficiency Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.analyze_thrust_balance.grid.v1", "title": "Analyze grid thrust balance", "category": "propulsion", "verb": "analyze_thrust_balance", "natural_language_triggers": ["analyze thrust balance", "thrust balance", "check thrust symmetry", "thruster distribution"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Info", "Thrust Balance"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "AnalyzeThrustBalance()"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "Grid must have thrusters", "User must have view authority"], "effects": ["Returns thrust balance analysis", "Returns asymmetry information", "Returns optimization recommendations", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 15, "instruction_cost": 12}, "validation_hooks": ["check_grid_access()", "check_thrusters_exist_on_grid()", "check_view_authority_grid()"], "error_cases": [{"condition": "no_thrusters_found", "message": "No thrusters found on grid for analysis", "recovery": "Build thrusters for balance analysis"}, {"condition": "analysis_failed", "message": "Thrust balance analysis failed", "recovery": "Check grid configuration and thruster placement"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "analyze thrust balance", "parsed": {"verb": "analyze_thrust_balance", "target": {"type": "grid", "selector": "current"}}}, {"input": "check thrust symmetry", "parsed": {"verb": "analyze_thrust_balance", "target": {"type": "grid", "selector": "current"}}}], "synonyms": ["thrust balance", "check thrust symmetry", "thruster distribution"], "tags": ["propulsion", "analysis", "balance", "symmetry"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster_mechanics__part-002.md", "sections": ["Balance Analysis"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.optimize_for_environment.thruster.v1", "title": "Optimize thrusters for environment", "category": "propulsion", "verb": "optimize_for_environment", "natural_language_triggers": ["optimize for environment", "adapt to environment", "environment optimization", "thruster adaptation"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thrusters"}, "parameters": [{"name": "environment", "type": "enum", "values": ["Space", "Atmosphere", "Planetary_Surface", "Auto_Detect"], "required": false, "default": "Auto_Detect", "validation": "environment_type_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thrusters", "Environment Optimization"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "OptimizeThrustersForEnvironment(environment)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Thrusters must exist on grid", "Multiple thruster types recommended", "User must have control authority"], "effects": ["Optimal thrusters activated for environment", "Non-optimal thrusters may be disabled", "Efficiency maximized", "Power consumption optimized"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5000, "instruction_cost": 30}, "validation_hooks": ["check_thrusters_exist_on_grid()", "validate_environment_type(environment)", "check_multiple_thruster_types_available()", "check_user_authority_grid()"], "error_cases": [{"condition": "no_thrusters_found", "message": "No thrusters found on grid for optimization", "recovery": "Build thrusters for environment optimization"}, {"condition": "single_thruster_type", "message": "Only one thruster type found - optimization limited", "recovery": "Add different thruster types for better optimization"}, {"condition": "environment_detection_failed", "message": "Cannot detect current environment", "recovery": "Specify environment manually"}, {"condition": "no_optimal_thrusters", "message": "No thrusters optimal for environment '{environment}'", "recovery": "Build appropriate thrusters for this environment"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "optimize for space environment", "parsed": {"verb": "optimize_for_environment", "target": {"selector": "all"}, "parameters": {"environment": "Space"}}}, {"input": "adapt thrusters to atmosphere", "parsed": {"verb": "optimize_for_environment", "target": {"selector": "all"}, "parameters": {"environment": "Atmosphere"}}}], "synonyms": ["adapt to environment", "environment optimization", "thruster adaptation"], "tags": ["propulsion", "optimization", "environment", "adaptation"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster_mechanics__part-002.md", "sections": ["Environment Optimization"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.get_thrust_power_consumption.thruster.v1", "title": "Get thruster power consumption", "category": "propulsion", "verb": "get_thrust_power_consumption", "natural_language_triggers": ["get thrust power consumption", "thruster power usage", "how much power thrusters", "engine power draw"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thruster", "Power Consumption"], "modapi_calls": [{"interface": "IMyThrust", "method": "GetPowerConsumption()"}, {"interface": "IMyThrust", "property": "CurrentInput", "method": "get_CurrentInput()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Thruster must exist", "User must have view authority"], "effects": ["Returns current power consumption", "Returns power consumption at different thrust levels", "Returns efficiency metrics", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_view_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check engine power consumption", "parsed": {"verb": "get_thrust_power_consumption", "target": {"name": "main engines"}}}, {"input": "how much power do thrusters use", "parsed": {"verb": "get_thrust_power_consumption", "target": {"type": "thruster", "selector": "all"}}}], "synonyms": ["thruster power usage", "how much power thrusters", "engine power draw"], "tags": ["propulsion", "monitoring", "power", "consumption"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Power Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.test_thruster_damage.thruster.v1", "title": "Test thruster damage range", "category": "propulsion", "verb": "test_thruster_damage", "natural_language_triggers": ["test thruster damage", "check thrust damage range", "thruster damage zone", "exhaust damage"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [{"name": "show_damage_zone", "type": "boolean", "required": false, "default": true, "validation": "boolean"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thruster", "Damage Zone"], "modapi_calls": [{"interface": "IMyThrust", "method": "ShowDamageZone(bool show)"}, {"interface": "IMyThrust", "method": "GetDamageRange()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Thruster must exist", "Thruster damage must be enabled in world settings", "User must have view authority"], "effects": ["Thruster damage zone visualized", "Damage range information returned", "Safety area highlighted", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_thruster_damage_enabled()", "check_view_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "thruster_damage_disabled", "message": "Thruster damage is disabled in world settings", "recovery": "Enable thruster damage in world settings"}, {"condition": "damage_zone_unknown", "message": "Cannot determine damage zone for '{target}'", "recovery": "Check thruster type and configuration"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "show main engine damage zone", "parsed": {"verb": "test_thruster_damage", "target": {"name": "main engine"}}}, {"input": "check thrust damage range", "parsed": {"verb": "test_thruster_damage", "target": {"type": "thruster", "selector": "all"}}}], "synonyms": ["check thrust damage range", "thruster damage zone", "exhaust damage"], "tags": ["propulsion", "safety", "damage", "visualization"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster__part-001.md", "sections": ["Thruster Damage"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}