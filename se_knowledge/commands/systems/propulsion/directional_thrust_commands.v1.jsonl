{"id": "propulsion.set_forward_thrust.directional.v1", "title": "Set forward thrust percentage", "category": "propulsion", "verb": "set_forward_thrust", "natural_language_triggers": ["set forward thrust", "forward thrust", "main engines", "acceleration thrust"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_forward_thruster"}, "parameters": [{"name": "thrust_percentage", "type": "percentage", "range": {"min": 0, "max": 100}, "units": "%", "default": 100, "required": true, "validation": "percentage_range"}], "se_implementation": {"toolbar_actions": ["ForwardThrust"], "terminal_path": ["Terminal", "Thrusters", "Forward"], "modapi_calls": [{"interface": "IMyThrust", "method": "SetForwardThrust(float percentage)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Forward thrusters must exist", "Thrusters must be functional", "Thrusters must be powered", "User must have control authority"], "effects": ["Forward thrust set to percentage", "Ship acceleration capability defined", "Forward movement power adjusted"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 10}, "validation_hooks": ["check_forward_thrusters_exist()", "check_thrusters_functional(target)", "check_thrusters_powered(target)", "validate_percentage_range(thrust_percentage)", "check_user_authority(target)"], "error_cases": [{"condition": "no_forward_thrusters", "message": "No forward-facing thrusters found", "recovery": "Build forward-facing thrusters for acceleration"}, {"condition": "thrust_percentage_invalid", "message": "Thrust percentage {thrust_percentage}% out of range (0-100%)", "recovery": "Use percentage between 0 and 100"}, {"condition": "insufficient_power", "message": "Insufficient power for {thrust_percentage}% forward thrust", "recovery": "Increase power generation or reduce thrust"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set forward thrust to 80%", "parsed": {"verb": "set_forward_thrust", "target": {"type": "thruster", "direction": "forward"}, "parameters": {"thrust_percentage": 80}}}, {"input": "main engines 50 percent", "parsed": {"verb": "set_forward_thrust", "target": {"name": "main engines"}, "parameters": {"thrust_percentage": 50}}}], "synonyms": ["forward thrust", "main engines", "acceleration thrust"], "tags": ["propulsion", "thruster", "forward", "acceleration"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Directional Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.set_reverse_thrust.directional.v1", "title": "Set reverse thrust percentage", "category": "propulsion", "verb": "set_reverse_thrust", "natural_language_triggers": ["set reverse thrust", "reverse thrust", "braking thrust", "backward thrust"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_reverse_thruster"}, "parameters": [{"name": "thrust_percentage", "type": "percentage", "range": {"min": 0, "max": 100}, "units": "%", "default": 100, "required": true, "validation": "percentage_range"}], "se_implementation": {"toolbar_actions": ["ReverseThrust"], "terminal_path": ["Terminal", "Thrusters", "Reverse"], "modapi_calls": [{"interface": "IMyThrust", "method": "SetReverseThrust(float percentage)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Reverse thrusters must exist", "Thrusters must be functional", "Thrusters must be powered", "User must have control authority"], "effects": ["Reverse thrust set to percentage", "Ship braking capability defined", "Backward movement power adjusted"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 10}, "validation_hooks": ["check_reverse_thrusters_exist()", "check_thrusters_functional(target)", "check_thrusters_powered(target)", "validate_percentage_range(thrust_percentage)", "check_user_authority(target)"], "error_cases": [{"condition": "no_reverse_thrusters", "message": "No reverse-facing thrusters found", "recovery": "Build reverse-facing thrusters for braking"}, {"condition": "thrust_percentage_invalid", "message": "Thrust percentage {thrust_percentage}% out of range (0-100%)", "recovery": "Use percentage between 0 and 100"}, {"condition": "insufficient_power", "message": "Insufficient power for {thrust_percentage}% reverse thrust", "recovery": "Increase power generation or reduce thrust"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set reverse thrust to 60%", "parsed": {"verb": "set_reverse_thrust", "target": {"type": "thruster", "direction": "reverse"}, "parameters": {"thrust_percentage": 60}}}, {"input": "braking thrust 75 percent", "parsed": {"verb": "set_reverse_thrust", "target": {"name": "braking engines"}, "parameters": {"thrust_percentage": 75}}}], "synonyms": ["reverse thrust", "braking thrust", "backward thrust"], "tags": ["propulsion", "thruster", "reverse", "braking"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Directional Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.set_vertical_thrust.directional.v1", "title": "Set vertical thrust percentage", "category": "propulsion", "verb": "set_vertical_thrust", "natural_language_triggers": ["set vertical thrust", "vertical thrust", "up thrust", "lift thrust", "down thrust"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_vertical_thruster"}, "parameters": [{"name": "thrust_percentage", "type": "percentage", "range": {"min": 0, "max": 100}, "units": "%", "default": 100, "required": true, "validation": "percentage_range"}, {"name": "direction", "type": "enum", "values": ["Up", "Down"], "required": false, "default": "Up", "validation": "vertical_direction_valid"}], "se_implementation": {"toolbar_actions": ["VerticalThrust"], "terminal_path": ["Terminal", "Thrusters", "Vertical"], "modapi_calls": [{"interface": "IMyThrust", "method": "SetVerticalThrust(float percentage, direction)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Vertical thrusters must exist", "Thrusters must be functional", "Thrusters must be powered", "User must have control authority"], "effects": ["Vertical thrust set to percentage", "Ship lift capability defined", "Gravity counteraction adjusted"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 10}, "validation_hooks": ["check_vertical_thrusters_exist(direction)", "check_thrusters_functional(target)", "check_thrusters_powered(target)", "validate_percentage_range(thrust_percentage)", "validate_vertical_direction(direction)", "check_user_authority(target)"], "error_cases": [{"condition": "no_vertical_thrusters", "message": "No {direction} thrusters found", "recovery": "Build vertical thrusters for lift/descent"}, {"condition": "thrust_percentage_invalid", "message": "Thrust percentage {thrust_percentage}% out of range (0-100%)", "recovery": "Use percentage between 0 and 100"}, {"condition": "insufficient_power", "message": "Insufficient power for {thrust_percentage}% vertical thrust", "recovery": "Increase power generation or reduce thrust"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set lift thrust to 90%", "parsed": {"verb": "set_vertical_thrust", "target": {"type": "thruster", "direction": "up"}, "parameters": {"thrust_percentage": 90, "direction": "Up"}}}, {"input": "down thrust 40 percent", "parsed": {"verb": "set_vertical_thrust", "target": {"name": "descent engines"}, "parameters": {"thrust_percentage": 40, "direction": "Down"}}}], "synonyms": ["vertical thrust", "up thrust", "lift thrust", "down thrust"], "tags": ["propulsion", "thruster", "vertical", "lift"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Directional Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.set_lateral_thrust.directional.v1", "title": "Set lateral thrust percentage", "category": "propulsion", "verb": "set_lateral_thrust", "natural_language_triggers": ["set lateral thrust", "lateral thrust", "side thrust", "left thrust", "right thrust"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_lateral_thruster"}, "parameters": [{"name": "thrust_percentage", "type": "percentage", "range": {"min": 0, "max": 100}, "units": "%", "default": 100, "required": true, "validation": "percentage_range"}, {"name": "direction", "type": "enum", "values": ["Left", "Right"], "required": false, "default": "Left", "validation": "lateral_direction_valid"}], "se_implementation": {"toolbar_actions": ["LateralThrust"], "terminal_path": ["Terminal", "Thrusters", "Lateral"], "modapi_calls": [{"interface": "IMyThrust", "method": "SetLateralThrust(float percentage, direction)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Lateral thrusters must exist", "Thrusters must be functional", "Thrusters must be powered", "User must have control authority"], "effects": ["Lateral thrust set to percentage", "Ship strafing capability defined", "Side movement power adjusted"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 10}, "validation_hooks": ["check_lateral_thrusters_exist(direction)", "check_thrusters_functional(target)", "check_thrusters_powered(target)", "validate_percentage_range(thrust_percentage)", "validate_lateral_direction(direction)", "check_user_authority(target)"], "error_cases": [{"condition": "no_lateral_thrusters", "message": "No {direction} thrusters found", "recovery": "Build lateral thrusters for side movement"}, {"condition": "thrust_percentage_invalid", "message": "Thrust percentage {thrust_percentage}% out of range (0-100%)", "recovery": "Use percentage between 0 and 100"}, {"condition": "insufficient_power", "message": "Insufficient power for {thrust_percentage}% lateral thrust", "recovery": "Increase power generation or reduce thrust"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set left thrust to 70%", "parsed": {"verb": "set_lateral_thrust", "target": {"type": "thruster", "direction": "left"}, "parameters": {"thrust_percentage": 70, "direction": "Left"}}}, {"input": "side thrust 60 percent right", "parsed": {"verb": "set_lateral_thrust", "target": {"name": "maneuvering thrusters"}, "parameters": {"thrust_percentage": 60, "direction": "Right"}}}], "synonyms": ["lateral thrust", "side thrust", "left thrust", "right thrust"], "tags": ["propulsion", "thruster", "lateral", "side"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Directional Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.emergency_full_thrust.emergency.v1", "title": "Emergency full thrust all directions", "category": "propulsion", "verb": "emergency_full_thrust", "natural_language_triggers": ["emergency full thrust", "maximum thrust", "full power thrust", "emergency acceleration"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thrusters"}, "parameters": [{"name": "duration", "type": "float", "range": {"min": 1.0, "max": 60.0}, "units": "seconds", "default": 10.0, "required": false, "validation": "emergency_duration_range"}], "se_implementation": {"toolbar_actions": ["Emergency_Full_Thrust"], "terminal_path": ["Terminal", "Thrusters", "Emergency Full"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "EmergencyFullThrust(duration)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thrusters must exist on grid", "Emergency condition active", "Sufficient power available", "User must have emergency authority"], "effects": ["All thrusters set to 100% override", "Maximum acceleration in all directions", "Emergency mobility activated", "High power consumption"], "constraints": {"power_required_mw": 0.1, "network_sync": true, "multiplayer_authority": "emergency_or_admin", "execution_time_ms": 1000, "instruction_cost": 50}, "validation_hooks": ["check_thrusters_exist_on_grid()", "check_emergency_condition()", "check_sufficient_power_for_full_thrust()", "validate_emergency_duration(duration)", "check_emergency_authority()"], "error_cases": [{"condition": "no_thrusters_found", "message": "No thrusters found on grid", "recovery": "Build thrusters for emergency thrust"}, {"condition": "no_emergency_condition", "message": "Emergency full thrust only available during emergency", "recovery": "Emergency protocols require crisis condition"}, {"condition": "insufficient_power", "message": "Insufficient power for emergency full thrust", "recovery": "Increase power generation or reduce other consumption"}, {"condition": "no_emergency_authority", "message": "Emergency full thrust requires admin or emergency authority", "recovery": "Emergency protocols require elevated permissions"}], "safety_class": "emergency", "idempotent": false, "reversible": true, "examples": [{"input": "emergency full thrust", "parsed": {"verb": "emergency_full_thrust", "target": {"selector": "all"}}}, {"input": "maximum thrust 30 seconds", "parsed": {"verb": "emergency_full_thrust", "target": {"selector": "all"}, "parameters": {"duration": 30.0}}}], "synonyms": ["maximum thrust", "full power thrust", "emergency acceleration"], "tags": ["propulsion", "emergency", "maximum", "acceleration"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/", "sections": ["Emergency Procedures"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.emergency_stop_thrust.emergency.v1", "title": "Emergency stop all thrust", "category": "propulsion", "verb": "emergency_stop_thrust", "natural_language_triggers": ["emergency stop thrust", "cut all thrust", "thrust emergency stop", "kill engines"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thrusters"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Emergency_Stop_Thrust"], "terminal_path": ["Terminal", "Thrusters", "Emergency Stop"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "EmergencyStopThrust()"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thrusters must exist on grid", "Emergency condition active", "User must have emergency authority"], "effects": ["All thrusters disabled immediately", "Ship enters free drift", "Emergency power saving", "All thrust override disabled"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "emergency_or_admin", "execution_time_ms": 500, "instruction_cost": 30}, "validation_hooks": ["check_thrusters_exist_on_grid()", "check_emergency_condition()", "check_emergency_authority()"], "error_cases": [{"condition": "no_thrusters_found", "message": "No thrusters found on grid", "recovery": "No thrusters to stop"}, {"condition": "no_emergency_condition", "message": "Emergency thrust stop only available during emergency", "recovery": "Emergency protocols require crisis condition"}, {"condition": "no_emergency_authority", "message": "Emergency thrust stop requires admin or emergency authority", "recovery": "Emergency protocols require elevated permissions"}], "safety_class": "emergency", "idempotent": true, "reversible": true, "examples": [{"input": "emergency stop thrust", "parsed": {"verb": "emergency_stop_thrust", "target": {"selector": "all"}}}, {"input": "cut all engines", "parsed": {"verb": "emergency_stop_thrust", "target": {"selector": "all"}}}], "synonyms": ["cut all thrust", "thrust emergency stop", "kill engines"], "tags": ["propulsion", "emergency", "stop", "disable"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/", "sections": ["Emergency Procedures"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.balance_thrust.grid.v1", "title": "Balance thrust distribution", "category": "propulsion", "verb": "balance_thrust", "natural_language_triggers": ["balance thrust", "optimize thrust", "thrust distribution", "even thrust"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [{"name": "balance_type", "type": "enum", "values": ["Efficiency", "Power", "Symmetry"], "required": false, "default": "Efficiency", "validation": "balance_type_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thrusters", "Balance"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "BalanceThrustDistribution(balance_type)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "Grid must have thrusters", "Multiple thrusters per direction recommended", "User must have control authority"], "effects": ["Thrust distribution optimized", "Thruster efficiency improved", "Movement performance balanced", "Power consumption optimized"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 3000, "instruction_cost": 25}, "validation_hooks": ["check_grid_access()", "check_thrusters_exist_on_grid()", "validate_balance_type(balance_type)", "check_user_authority_grid()"], "error_cases": [{"condition": "no_thrusters_found", "message": "No thrusters found on grid for balancing", "recovery": "Build thrusters for balance optimization"}, {"condition": "insufficient_thruster_variety", "message": "Insufficient thruster variety for optimization", "recovery": "Add more thrusters in different directions"}, {"condition": "balance_already_optimal", "message": "Thrust distribution is already optimal", "recovery": "Current configuration is already balanced"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "balance thrust distribution", "parsed": {"verb": "balance_thrust", "target": {"type": "grid", "selector": "current"}}}, {"input": "optimize thrust for power efficiency", "parsed": {"verb": "balance_thrust", "target": {"type": "grid", "selector": "current"}, "parameters": {"balance_type": "Power"}}}], "synonyms": ["optimize thrust", "thrust distribution", "even thrust"], "tags": ["propulsion", "optimization", "balance", "efficiency"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster_mechanics__part-002.md", "sections": ["Optimization"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}