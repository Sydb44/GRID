{"id": "propulsion.enable_thrust_override.thruster.v1", "title": "Enable thruster override", "category": "propulsion", "verb": "enable_thrust_override", "natural_language_triggers": ["enable thrust override", "thrust override on", "manual thrust", "override thrusters"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [], "se_implementation": {"toolbar_actions": ["ThrustOverride_On"], "terminal_path": ["Terminal", "Thruster", "Thrust Override"], "modapi_calls": [{"interface": "IMyThrust", "method": "EnableThrustOverride()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thruster must exist", "Thruster must be functional", "Thruster must be powered", "User must have control authority"], "effects": ["Thrust override mode enabled", "Manual thrust control activated", "Autopilot thrust control disabled", "Fixed thrust output mode"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_block_functional(target)", "check_block_powered(target)", "check_user_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "thruster_unpowered", "message": "Thruster '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "thruster_not_functional", "message": "Thruster '{target}' is not functional", "recovery": "Check thruster condition"}], "safety_class": "caution", "idempotent": true, "reversible": true, "examples": [{"input": "enable thrust override on forward thrusters", "parsed": {"verb": "enable_thrust_override", "target": {"name": "forward thrusters"}}}, {"input": "manual thrust control", "parsed": {"verb": "enable_thrust_override", "target": {"type": "thruster", "selector": "all"}}}], "synonyms": ["thrust override on", "manual thrust", "override thrusters"], "tags": ["propulsion", "thruster", "override", "manual"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Properties", "ThrustOverride"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster__part-001.md", "sections": ["Control Panel Actions"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.disable_thrust_override.thruster.v1", "title": "Disable thruster override", "category": "propulsion", "verb": "disable_thrust_override", "natural_language_triggers": ["disable thrust override", "thrust override off", "auto thrust", "normal thrust control"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [], "se_implementation": {"toolbar_actions": ["ThrustOverride_Off"], "terminal_path": ["Terminal", "Thruster", "Thrust Override"], "modapi_calls": [{"interface": "IMyThrust", "method": "DisableThrustOverride()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thruster must exist", "Thruster must be functional", "User must have control authority"], "effects": ["Thrust override mode disabled", "Automatic thrust control restored", "Ship controller takes over thrust", "Dynamic thrust response enabled"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "override_not_active", "message": "Thruster '{target}' override is not active", "recovery": "Thruster is already in automatic mode"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable thrust override", "parsed": {"verb": "disable_thrust_override", "target": {"type": "thruster", "selector": "all"}}}, {"input": "auto thrust control", "parsed": {"verb": "disable_thrust_override", "target": {"name": "main engines"}}}], "synonyms": ["thrust override off", "auto thrust", "normal thrust control"], "tags": ["propulsion", "thruster", "automatic", "normal"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.set_thrust_percentage.thruster.v1", "title": "Set thruster override percentage", "category": "propulsion", "verb": "set_thrust_percentage", "natural_language_triggers": ["set thrust percentage", "thrust power", "thruster output", "thrust level"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [{"name": "thrust_percentage", "type": "percentage", "range": {"min": 0, "max": 100}, "units": "%", "default": 100, "required": true, "validation": "percentage_range", "terminal_name": "Thrust Override %"}], "se_implementation": {"toolbar_actions": ["IncreaseThrustOverride", "DecreaseThrustOverride"], "terminal_path": ["Terminal", "Thruster", "Thrust Override %"], "modapi_calls": [{"interface": "IMyThrust", "property": "ThrustOverridePercentage", "method": "set_ThrustOverridePercentage(float percentage)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thruster must exist", "Thruster must be functional", "Thruster must be powered", "Thrust override must be enabled", "User must have control authority"], "effects": ["Thruster.ThrustOverridePercentage = thrust_percentage/100", "Thrust output set to specified percentage", "Power consumption adjusts", "Movement capability changes"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_block_functional(target)", "check_block_powered(target)", "check_thrust_override_enabled(target)", "validate_percentage_range(thrust_percentage)", "check_user_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "thrust_override_disabled", "message": "Thrust override not enabled on '{target}'", "recovery": "Enable thrust override first"}, {"condition": "percentage_out_of_range", "message": "Thrust percentage {thrust_percentage}% out of range (0-100%)", "recovery": "Use percentage between 0 and 100"}, {"condition": "insufficient_fuel", "message": "Thruster '{target}' has insufficient fuel for {thrust_percentage}% output", "recovery": "Check hydrogen/power supply"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set forward thrust to 75%", "parsed": {"verb": "set_thrust_percentage", "target": {"name": "forward thrust"}, "parameters": {"thrust_percentage": 75}}}, {"input": "thruster output 50 percent", "parsed": {"verb": "set_thrust_percentage", "target": {"type": "thruster"}, "parameters": {"thrust_percentage": 50}}}], "synonyms": ["thrust power", "thruster output", "thrust level"], "tags": ["propulsion", "thruster", "percentage", "power"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Properties", "ThrustOverridePercentage"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.set_thrust_newtons.thruster.v1", "title": "Set thruster override in Newtons", "category": "propulsion", "verb": "set_thrust_newtons", "natural_language_triggers": ["set thrust newtons", "thrust force", "thrust in newtons", "force output"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [{"name": "thrust_newtons", "type": "float", "range": {"min": 0.0, "max": 5400000.0}, "units": "N", "default": 1000.0, "required": true, "validation": "thrust_newtons_range", "terminal_name": "Thrust Override (N)"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thruster", "Thrust Override (N)"], "modapi_calls": [{"interface": "IMyThrust", "property": "ThrustOverride", "method": "set_ThrustOverride(float newtons)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thruster must exist", "Thruster must be functional", "Thruster must be powered", "Thrust override must be enabled", "Force must be within thruster capability", "User must have control authority"], "effects": ["Thruster.ThrustOverride = thrust_newtons", "Exact force output set", "Precise thrust control", "Movement force specified"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 10}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_block_functional(target)", "check_block_powered(target)", "check_thrust_override_enabled(target)", "validate_thrust_within_capability(target, thrust_newtons)", "check_user_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "thrust_override_disabled", "message": "Thrust override not enabled on '{target}'", "recovery": "Enable thrust override first"}, {"condition": "thrust_exceeds_capability", "message": "Thrust {thrust_newtons}N exceeds '{target}' capability", "recovery": "Use thrust within thruster's maximum force"}, {"condition": "insufficient_power", "message": "Insufficient power for {thrust_newtons}N thrust", "recovery": "Increase power generation or reduce thrust"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set main engines to 500000 newtons", "parsed": {"verb": "set_thrust_newtons", "target": {"name": "main engines"}, "parameters": {"thrust_newtons": 500000.0}}}, {"input": "thrust force 100000N", "parsed": {"verb": "set_thrust_newtons", "target": {"type": "thruster"}, "parameters": {"thrust_newtons": 100000.0}}}], "synonyms": ["thrust force", "thrust in newtons", "force output"], "tags": ["propulsion", "thruster", "newtons", "force"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Properties", "ThrustOverride"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.increase_thrust.thruster.v1", "title": "Increase thruster output", "category": "propulsion", "verb": "increase_thrust", "natural_language_triggers": ["increase thrust", "more thrust", "boost thrust", "thruster up"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [{"name": "amount", "type": "percentage", "range": {"min": 1, "max": 50}, "units": "%", "default": 10, "required": false, "validation": "thrust_increase_amount"}], "se_implementation": {"toolbar_actions": ["IncreaseThrustOverride"], "terminal_path": ["Terminal", "Thruster", "Increase Thrust"], "modapi_calls": [{"interface": "IMyThrust", "method": "IncreaseThrustOverride(float amount)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thruster must exist", "Thruster must be functional", "Thruster must be powered", "Thrust override must be enabled", "Thrust must not be at maximum", "User must have control authority"], "effects": ["Thrust output increases by amount", "Power consumption increases", "Movement capability enhanced"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_block_functional(target)", "check_block_powered(target)", "check_thrust_override_enabled(target)", "check_thrust_not_at_max(target)", "validate_thrust_increase_amount(amount)", "check_user_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "thrust_at_maximum", "message": "Thruster '{target}' already at maximum output", "recovery": "Thruster cannot increase further"}, {"condition": "thrust_override_disabled", "message": "Thrust override not enabled on '{target}'", "recovery": "Enable thrust override first"}, {"condition": "increase_exceeds_maximum", "message": "Thrust increase would exceed maximum for '{target}'", "recovery": "Use smaller increase amount"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "increase forward thrust", "parsed": {"verb": "increase_thrust", "target": {"name": "forward thrust"}}}, {"input": "boost thrusters by 25%", "parsed": {"verb": "increase_thrust", "target": {"type": "thruster"}, "parameters": {"amount": 25}}}], "synonyms": ["more thrust", "boost thrust", "thruster up"], "tags": ["propulsion", "thruster", "increase", "boost"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster__part-001.md", "sections": ["Control Panel Actions"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.decrease_thrust.thruster.v1", "title": "Decrease thruster output", "category": "propulsion", "verb": "decrease_thrust", "natural_language_triggers": ["decrease thrust", "less thrust", "reduce thrust", "thruster down"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [{"name": "amount", "type": "percentage", "range": {"min": 1, "max": 50}, "units": "%", "default": 10, "required": false, "validation": "thrust_decrease_amount"}], "se_implementation": {"toolbar_actions": ["DecreaseThrustOverride"], "terminal_path": ["Terminal", "Thruster", "Decrease Thrust"], "modapi_calls": [{"interface": "IMyThrust", "method": "DecreaseThrustOverride(float amount)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Thruster must exist", "Thruster must be functional", "Thrust override must be enabled", "Thrust must not be at minimum", "User must have control authority"], "effects": ["Thrust output decreases by amount", "Power consumption decreases", "Movement capability reduced"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_block_functional(target)", "check_thrust_override_enabled(target)", "check_thrust_not_at_min(target)", "validate_thrust_decrease_amount(amount)", "check_user_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}, {"condition": "thrust_at_minimum", "message": "Thruster '{target}' already at minimum output", "recovery": "Thruster cannot decrease further"}, {"condition": "thrust_override_disabled", "message": "Thrust override not enabled on '{target}'", "recovery": "Enable thrust override first"}, {"condition": "decrease_below_minimum", "message": "Thrust decrease would go below minimum for '{target}'", "recovery": "Use smaller decrease amount"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "decrease rear thrust", "parsed": {"verb": "decrease_thrust", "target": {"name": "rear thrust"}}}, {"input": "reduce thrusters by 20%", "parsed": {"verb": "decrease_thrust", "target": {"type": "thruster"}, "parameters": {"amount": 20}}}], "synonyms": ["less thrust", "reduce thrust", "thruster down"], "tags": ["propulsion", "thruster", "decrease", "reduce"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Thruster__part-001.md", "sections": ["Control Panel Actions"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.get_thrust_status.thruster.v1", "title": "Get thruster status and output", "category": "propulsion", "verb": "get_thrust_status", "natural_language_triggers": ["get thrust status", "thruster status", "thrust output", "check thrusters"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thruster", "Status"], "modapi_calls": [{"interface": "IMyThrust", "property": "CurrentThrust", "method": "get_CurrentThrust()"}, {"interface": "IMyThrust", "property": "CurrentThrustPercentage", "method": "get_CurrentThrustPercentage()"}, {"interface": "IMyThrust", "property": "MaxThrust", "method": "get_MaxThrust()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Thruster must exist", "User must have view authority"], "effects": ["Returns current thrust in Newtons and percentage", "Returns maximum thrust capability", "Returns thrust direction", "Returns operational status", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_view_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check main engine status", "parsed": {"verb": "get_thrust_status", "target": {"name": "main engine"}}}, {"input": "thruster output status", "parsed": {"verb": "get_thrust_status", "target": {"type": "thruster", "selector": "all"}}}], "synonyms": ["thruster status", "thrust output", "check thrusters"], "tags": ["propulsion", "monitoring", "thruster", "status"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Properties", "Status"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "propulsion.get_thrust_direction.thruster.v1", "title": "Get thruster direction vector", "category": "propulsion", "verb": "get_thrust_direction", "natural_language_triggers": ["get thrust direction", "thruster direction", "thrust vector", "which way thrust"], "targets": {"allowed_types": ["Ion Thruster", "Large Ion Thruster", "Atmospheric Thruster", "Large Atmospheric Thruster", "Hydrogen Thruster", "Large Hydrogen Thruster", "Prototech Thruster"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_thruster"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Thruster", "Direction"], "modapi_calls": [{"interface": "IMyThrust", "property": "GridThrustDirection", "method": "get_GridThrustDirection()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Thruster must exist", "User must have view authority"], "effects": ["Returns thrust direction vector", "Returns grid-relative direction", "Returns orientation information", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_thruster(target)", "check_view_authority(target)"], "error_cases": [{"condition": "thruster_not_found", "message": "No thrusters matching '{target}' found", "recovery": "List available thrusters"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get forward thruster direction", "parsed": {"verb": "get_thrust_direction", "target": {"name": "forward thruster"}}}, {"input": "which way do thrusters point", "parsed": {"verb": "get_thrust_direction", "target": {"type": "thruster", "selector": "all"}}}], "synonyms": ["thruster direction", "thrust vector", "which way thrust"], "tags": ["propulsion", "monitoring", "direction", "vector"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Flight/IMyThrust.md", "sections": ["Properties", "GridThrustDirection"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}