{"id": "docking.get_merge_status.merge_block.v1", "title": "Get merge block connection status", "category": "connectors_docking", "verb": "get_merge_status", "natural_language_triggers": ["get merge status", "merge block status", "merge connection", "merge info"], "targets": {"allowed_types": ["Merge Block", "Small Merge Block"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_merge_block"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Merge Block", "Status"], "modapi_calls": [{"interface": "IMyShipMergeBlock", "property": "IsConnected", "method": "get_IsConnected()"}, {"interface": "IMyShipMergeBlock", "property": "State", "method": "get_State()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Merge block must exist", "User must have view authority"], "effects": ["Returns merge block connection status", "Returns merge state information", "Returns grid merge status", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_merge_block(target)", "check_view_authority(target)"], "error_cases": [{"condition": "merge_block_not_found", "message": "No merge blocks matching '{target}' found", "recovery": "List available merge blocks"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check merge block status", "parsed": {"verb": "get_merge_status", "target": {"type": "merge_block", "selector": "all"}}}, {"input": "merge connection info", "parsed": {"verb": "get_merge_status", "target": {"name": "docking merge"}}}], "synonyms": ["merge block status", "merge connection", "merge info"], "tags": ["docking", "monitoring", "merge_block", "status"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyShipMergeBlock.md", "sections": ["Properties", "Status"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "docking.attach_rotor_head.mechanical.v1", "title": "Attach rotor head for mechanical docking", "category": "connectors_docking", "verb": "attach_rotor_head", "natural_language_triggers": ["attach rotor head", "connect rotor", "mechanical docking", "attach head"], "targets": {"allowed_types": ["Rotor", "Advanced Rotor", "Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_mechanical_connection"}, "parameters": [{"name": "target_head", "type": "block_reference", "required": false, "default": "nearest_compatible", "validation": "rotor_head_exists", "description": "Specific rotor head to attach"}], "se_implementation": {"toolbar_actions": ["Attach"], "terminal_path": ["Terminal", "Rotor", "Attach"], "modapi_calls": [{"interface": "IMyMechanicalConnectionBlock", "method": "AttachTop(target_head)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Rotor/hinge base must exist", "Rotor/hinge must be functional", "Rotor/hinge must be powered", "Compatible head must be in proximity", "User must have control authority"], "effects": ["Rotor head attached", "Mechanical connection established", "Subgrid linked", "Conveyor/power connection enabled"], "constraints": {"power_required_mw": 0.002, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 3000, "instruction_cost": 20}, "validation_hooks": ["check_block_exists(target)", "check_block_type_mechanical_connection(target)", "check_block_functional(target)", "check_block_powered(target)", "check_compatible_head_proximity(target, target_head)", "check_user_authority(target)"], "error_cases": [{"condition": "mechanical_block_not_found", "message": "No rotors/hinges matching '{target}' found", "recovery": "List available rotors and hinges"}, {"condition": "no_compatible_head", "message": "No compatible rotor head found for '{target}'", "recovery": "Build and position compatible rotor head nearby"}, {"condition": "head_already_attached", "message": "Rotor '{target}' already has head attached", "recovery": "Rotor already has mechanical connection"}, {"condition": "attachment_alignment_failed", "message": "Head attachment alignment failed for '{target}'", "recovery": "Improve head alignment with rotor base"}, {"condition": "mechanical_unpowered", "message": "Rotor '{target}' has no power for attachment", "recovery": "Check power grid and connections"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "attach rotor head to docking rotor", "parsed": {"verb": "attach_rotor_head", "target": {"name": "docking rotor"}}}, {"input": "connect mechanical docking", "parsed": {"verb": "attach_rotor_head", "target": {"type": "rotor"}}}], "synonyms": ["connect rotor", "mechanical docking", "attach head"], "tags": ["docking", "mechanical", "rotor", "attachment"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMechanicalConnectionBlock.md", "sections": ["Attachment Methods"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Docking__part-002.md", "sections": ["Mechanical Docking"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "docking.detach_rotor_head.mechanical.v1", "title": "Detach rotor head for mechanical undocking", "category": "connectors_docking", "verb": "detach_rotor_head", "natural_language_triggers": ["detach rotor head", "disconnect rotor", "mechanical undocking", "detach head"], "targets": {"allowed_types": ["Rotor", "Advanced Rotor", "Hinge"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_mechanical_connection"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Detach"], "terminal_path": ["Terminal", "Rotor", "Detach"], "modapi_calls": [{"interface": "IMyMechanicalConnectionBlock", "method": "DetachTop()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Rotor/hinge base must exist", "Rotor/hinge must be functional", "Head must be attached", "User must have control authority"], "effects": ["Rotor head detached", "Mechanical connection severed", "Subgrids become independent", "Conveyor/power link broken"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 2000, "instruction_cost": 15}, "validation_hooks": ["check_block_exists(target)", "check_block_type_mechanical_connection(target)", "check_block_functional(target)", "check_head_attached(target)", "check_user_authority(target)"], "error_cases": [{"condition": "mechanical_block_not_found", "message": "No rotors/hinges matching '{target}' found", "recovery": "List available rotors and hinges"}, {"condition": "no_head_attached", "message": "Rotor '{target}' has no head attached", "recovery": "Rotor has no mechanical connection to detach"}, {"condition": "detachment_blocked", "message": "Head detachment blocked for '{target}'", "recovery": "Check for obstructions or safety locks"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "detach rotor head", "parsed": {"verb": "detach_rotor_head", "target": {"name": "docking rotor"}}}, {"input": "mechanical undocking", "parsed": {"verb": "detach_rotor_head", "target": {"type": "rotor"}}}], "synonyms": ["disconnect rotor", "mechanical undocking", "detach head"], "tags": ["docking", "mechanical", "rotor", "detachment"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyMechanicalConnectionBlock.md", "sections": ["Attachment Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}