{"id": "communication.enable_beacon.beacon.v1", "title": "Enable beacon signal", "category": "communication", "verb": "enable_beacon", "natural_language_triggers": ["enable beacon", "turn on beacon", "activate beacon", "beacon on"], "targets": {"allowed_types": ["Beacon", "Round Beacon"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_beacon"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_On"], "terminal_path": ["Terminal", "Beacon", "On/Off"], "modapi_calls": [{"interface": "IMyBeacon", "property": "Enabled", "method": "set_Enabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Beacon must exist", "Beacon must be functional", "Beacon must be powered", "User must have control authority"], "effects": ["Beacon.Enabled = true", "Signal broadcasting begins", "Position marker visible to others", "Navigation waypoint activated"], "constraints": {"power_required_mw": 0.002, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1000, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_beacon(target)", "check_block_functional(target)", "check_block_powered(target)", "check_user_authority(target)"], "error_cases": [{"condition": "beacon_not_found", "message": "No beacons matching '{target}' found", "recovery": "List available beacons"}, {"condition": "beacon_unpowered", "message": "Beacon '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "beacon_not_functional", "message": "Beacon '{target}' is not functional", "recovery": "Check beacon condition"}, {"condition": "beacon_already_on", "message": "Beacon '{target}' is already enabled", "recovery": "Beacon is already broadcasting"}], "safety_class": "caution", "idempotent": true, "reversible": true, "examples": [{"input": "enable docking beacon", "parsed": {"verb": "enable_beacon", "target": {"name": "docking beacon"}}}, {"input": "turn on navigation beacons", "parsed": {"verb": "enable_beacon", "target": {"type": "beacon", "selector": "all"}}}], "synonyms": ["turn on beacon", "activate beacon", "beacon on"], "tags": ["communication", "beacon", "navigation", "waypoint"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBeacon.md", "sections": ["Properties"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Beacon__part-001.md", "sections": ["Usage"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "communication.disable_beacon.beacon.v1", "title": "Disable beacon signal", "category": "communication", "verb": "disable_beacon", "natural_language_triggers": ["disable beacon", "turn off beacon", "deactivate beacon", "beacon off"], "targets": {"allowed_types": ["Beacon", "Round Beacon"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_beacon"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_Off"], "terminal_path": ["Terminal", "Beacon", "On/Off"], "modapi_calls": [{"interface": "IMyBeacon", "property": "Enabled", "method": "set_Enabled(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Beacon must exist", "User must have control authority"], "effects": ["Beacon.Enabled = false", "Signal broadcasting stops", "Position marker disappears", "Navigation waypoint deactivated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 500, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_beacon(target)", "check_user_authority(target)"], "error_cases": [{"condition": "beacon_not_found", "message": "No beacons matching '{target}' found", "recovery": "List available beacons"}, {"condition": "beacon_already_off", "message": "Beacon '{target}' is already disabled", "recovery": "Beacon is not currently broadcasting"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable temporary beacon", "parsed": {"verb": "disable_beacon", "target": {"name": "temporary beacon"}}}, {"input": "turn off all beacons", "parsed": {"verb": "disable_beacon", "target": {"type": "beacon", "selector": "all"}}}], "synonyms": ["turn off beacon", "deactivate beacon", "beacon off"], "tags": ["communication", "beacon", "disable", "stop"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBeacon.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "communication.set_beacon_range.beacon.v1", "title": "Set beacon broadcasting range", "category": "communication", "verb": "set_beacon_range", "natural_language_triggers": ["set beacon range", "beacon range", "beacon radius", "signal range"], "targets": {"allowed_types": ["Beacon", "Round Beacon"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_beacon"}, "parameters": [{"name": "range", "type": "float", "range": {"min": 1.0, "max": 200000.0}, "units": "meters", "default": 5000.0, "required": true, "validation": "beacon_range", "terminal_name": "Broadcast Radius"}], "se_implementation": {"toolbar_actions": ["IncreaseRadius", "DecreaseRadius"], "terminal_path": ["Terminal", "Beacon", "Broadcast Radius"], "modapi_calls": [{"interface": "IMyBeacon", "property": "Radius", "method": "set_Radius(float range)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Beacon must exist", "Beacon must be functional", "Range must be within limits", "User must have control authority"], "effects": ["Beacon.Radius = range", "Signal visibility range changes", "Navigation marker coverage adjusts"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_beacon(target)", "check_block_functional(target)", "validate_beacon_range(range)", "check_user_authority(target)"], "error_cases": [{"condition": "beacon_not_found", "message": "No beacons matching '{target}' found", "recovery": "List available beacons"}, {"condition": "range_out_of_bounds", "message": "Beacon range {range}m out of bounds (1-200000m)", "recovery": "Use range between 1m and 200km"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set docking beacon range to 10km", "parsed": {"verb": "set_beacon_range", "target": {"name": "docking beacon"}, "parameters": {"range": 10000.0}}}, {"input": "beacon radius 50000 meters", "parsed": {"verb": "set_beacon_range", "target": {"type": "beacon"}, "parameters": {"range": 50000.0}}}], "synonyms": ["beacon range", "beacon radius", "signal range"], "tags": ["communication", "beacon", "range", "radius"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBeacon.md", "sections": ["Properties", "Radius"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Beacon__part-001.md", "sections": ["Range"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "communication.set_beacon_message.beacon.v1", "title": "Set beacon HUD message", "category": "communication", "verb": "set_beacon_message", "natural_language_triggers": ["set beacon message", "beacon text", "beacon hud text", "waypoint message"], "targets": {"allowed_types": ["Beacon", "Round Beacon"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_beacon"}, "parameters": [{"name": "message", "type": "text", "max_length": 100, "required": true, "validation": "message_format", "description": "Message to display on HUD"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Beacon", "HUD Text"], "modapi_calls": [{"interface": "IMyBeacon", "property": "HudText", "method": "set_HudText(string message)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Beacon must exist", "Beacon must be functional", "Message must be valid", "User must have control authority"], "effects": ["Beacon.HudText = message", "Waypoint message updated", "HUD signal displays custom text"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_beacon(target)", "check_block_functional(target)", "validate_message_format(message)", "check_user_authority(target)"], "error_cases": [{"condition": "beacon_not_found", "message": "No beacons matching '{target}' found", "recovery": "List available beacons"}, {"condition": "message_too_long", "message": "Message exceeds 100 character limit", "recovery": "Shorten the beacon message"}, {"condition": "message_invalid", "message": "Invalid characters in message", "recovery": "Use valid characters for beacon message"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set beacon message Docking Bay Alpha", "parsed": {"verb": "set_beacon_message", "target": {"name": "docking beacon"}, "parameters": {"message": "Docking Bay Alpha"}}}, {"input": "waypoint message Mining Site", "parsed": {"verb": "set_beacon_message", "target": {"type": "beacon"}, "parameters": {"message": "Mining Site"}}}], "synonyms": ["beacon text", "beacon hud text", "waypoint message"], "tags": ["communication", "beacon", "message", "waypoint"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBeacon.md", "sections": ["Properties", "HudText"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Beacon__part-001.md", "sections": ["HUD Text"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}