{"id": "logistics.enable_collector.collector.v1", "title": "Enable collector operation", "category": "logistics", "verb": "enable_collector", "natural_language_triggers": ["enable collector", "turn on collector", "start collecting", "activate collector"], "targets": {"allowed_types": ["Collector"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_collector"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_On"], "terminal_path": ["Terminal", "Collector", "On/Off"], "modapi_calls": [{"interface": "IMyCollector", "property": "Enabled", "method": "set_Enabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Collector must exist", "Collector must be functional", "Collector must be powered", "User must have control authority"], "effects": ["Collector.Enabled = true", "Item collection begins", "Floating items pulled into inventory", "Collection area active"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_collector(target)", "check_block_functional(target)", "check_block_powered(target)", "check_user_authority(target)"], "error_cases": [{"condition": "collector_not_found", "message": "No collectors matching '{target}' found", "recovery": "List available collectors"}, {"condition": "collector_unpowered", "message": "Collector '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "collector_not_functional", "message": "Collector '{target}' is not functional", "recovery": "Check collector condition"}, {"condition": "collector_inventory_full", "message": "Collector '{target}' inventory is full", "recovery": "Empty collector inventory or connect to conveyor"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable mining collectors", "parsed": {"verb": "enable_collector", "target": {"name": "mining collectors"}}}, {"input": "start collecting debris", "parsed": {"verb": "enable_collector", "target": {"type": "collector", "selector": "all"}}}], "synonyms": ["turn on collector", "start collecting", "activate collector"], "tags": ["logistics", "collector", "gathering", "automation"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCollector.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.disable_collector.collector.v1", "title": "Disable collector operation", "category": "logistics", "verb": "disable_collector", "natural_language_triggers": ["disable collector", "turn off collector", "stop collecting", "deactivate collector"], "targets": {"allowed_types": ["Collector"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_collector"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_Off"], "terminal_path": ["Terminal", "Collector", "On/Off"], "modapi_calls": [{"interface": "IMyCollector", "property": "Enabled", "method": "set_Enabled(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Collector must exist", "User must have control authority"], "effects": ["Collector.Enabled = false", "Item collection stops", "Collection area inactive", "Power consumption reduced"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_collector(target)", "check_user_authority(target)"], "error_cases": [{"condition": "collector_not_found", "message": "No collectors matching '{target}' found", "recovery": "List available collectors"}, {"condition": "collector_already_off", "message": "Collector '{target}' is already disabled", "recovery": "Collector is not currently active"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable salvage collectors", "parsed": {"verb": "disable_collector", "target": {"name": "salvage collectors"}}}, {"input": "stop collecting", "parsed": {"verb": "disable_collector", "target": {"type": "collector", "selector": "all"}}}], "synonyms": ["turn off collector", "stop collecting", "deactivate collector"], "tags": ["logistics", "collector", "stop", "disable"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCollector.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.set_collector_range.collector.v1", "title": "Set collector pickup range", "category": "logistics", "verb": "set_collector_range", "natural_language_triggers": ["set collector range", "collection range", "pickup distance", "collector reach"], "targets": {"allowed_types": ["Collector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_collector"}, "parameters": [{"name": "range", "type": "float", "range": {"min": 1.0, "max": 60.0}, "units": "meters", "default": 35.0, "required": true, "validation": "collector_range", "terminal_name": "Collection Range"}], "se_implementation": {"toolbar_actions": ["IncreaseRange", "DecreaseRange"], "terminal_path": ["Terminal", "Collector", "Range"], "modapi_calls": [{"interface": "IMyCollector", "property": "Range", "method": "set_Range(float range)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Collector must exist", "Collector must be functional", "Range must be within limits", "User must have control authority"], "effects": ["Collector.Range = range", "Collection area size changes", "Pickup distance adjusted"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_collector(target)", "check_block_functional(target)", "validate_collector_range(range)", "check_user_authority(target)"], "error_cases": [{"condition": "collector_not_found", "message": "No collectors matching '{target}' found", "recovery": "List available collectors"}, {"condition": "range_out_of_bounds", "message": "Collection range {range}m out of bounds (1-60m)", "recovery": "Use range between 1 and 60 meters"}, {"condition": "range_too_high_for_power", "message": "Collection range too high for available power", "recovery": "Reduce range or increase power generation"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set mining collector range to 50m", "parsed": {"verb": "set_collector_range", "target": {"name": "mining collector"}, "parameters": {"range": 50.0}}}, {"input": "collection range 25 meters", "parsed": {"verb": "set_collector_range", "target": {"type": "collector"}, "parameters": {"range": 25.0}}}], "synonyms": ["collection range", "pickup distance", "collector reach"], "tags": ["logistics", "collector", "range", "pickup"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCollector.md", "sections": ["Properties", "Range"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.get_collector_status.collector.v1", "title": "Get collector operation status", "category": "logistics", "verb": "get_collector_status", "natural_language_triggers": ["get collector status", "collector info", "collection status", "what is collector doing"], "targets": {"allowed_types": ["Collector"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_collector"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Collector", "Status"], "modapi_calls": [{"interface": "IMyCollector", "method": "GetCollectorStatus()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Collector must exist", "User must have view authority"], "effects": ["Returns collector operational status", "Returns items in collection range", "Returns inventory status", "Returns efficiency metrics", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_type_collector(target)", "check_view_authority(target)"], "error_cases": [{"condition": "collector_not_found", "message": "No collectors matching '{target}' found", "recovery": "List available collectors"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check salvage collector status", "parsed": {"verb": "get_collector_status", "target": {"name": "salvage collector"}}}, {"input": "what is mining collector doing", "parsed": {"verb": "get_collector_status", "target": {"name": "mining collector"}}}], "synonyms": ["collector info", "collection status", "what is collector doing"], "tags": ["logistics", "monitoring", "collector", "status"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCollector.md", "sections": ["Status Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}