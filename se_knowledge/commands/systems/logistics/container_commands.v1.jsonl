{"id": "logistics.get_container_contents.container.v1", "title": "Get container inventory contents", "category": "logistics", "verb": "get_container_contents", "natural_language_triggers": ["get container contents", "container inventory", "what's in container", "check container"], "targets": {"allowed_types": ["Cargo Container", "Large Cargo Container", "Medium Cargo Container", "Small Cargo Container"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_container"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Container", "Inventory"], "modapi_calls": [{"interface": "IMyInventory", "method": "GetItems()"}, {"interface": "IMyInventory", "property": "CurrentVolume", "method": "get_CurrentVolume()"}, {"interface": "IMyInventory", "property": "MaxVolume", "method": "get_MaxVolume()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Container must exist", "User must have view authority"], "effects": ["Returns container item list", "Returns quantities of each item", "Returns volume usage", "Returns capacity information", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 5, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_container(target)", "check_view_authority(target)"], "error_cases": [{"condition": "container_not_found", "message": "No containers matching '{target}' found", "recovery": "List available containers"}, {"condition": "inventory_access_denied", "message": "No access to container '{target}' inventory", "recovery": "Check container ownership and permissions"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check main cargo contents", "parsed": {"verb": "get_container_contents", "target": {"name": "main cargo"}}}, {"input": "what's in ore storage", "parsed": {"verb": "get_container_contents", "target": {"name": "ore storage"}}}], "synonyms": ["container inventory", "what's in container", "check container"], "tags": ["logistics", "monitoring", "container", "inventory"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyInventory__part-002.md", "sections": ["Inventory Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.empty_container.container.v1", "title": "Empty container contents", "category": "logistics", "verb": "empty_container", "natural_language_triggers": ["empty container", "clear container", "eject all items", "dump container"], "targets": {"allowed_types": ["Cargo Container", "Large Cargo Container", "Medium Cargo Container", "Small Cargo Container"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_container"}, "parameters": [{"name": "destination_container", "type": "block_reference", "required": false, "validation": "container_exists", "description": "Target container for items"}, {"name": "eject_to_space", "type": "boolean", "required": false, "default": false, "validation": "boolean", "description": "Eject items to space if no destination"}], "se_implementation": {"toolbar_actions": ["EmptyContainer"], "terminal_path": ["Terminal", "Container", "Empty"], "modapi_calls": [{"interface": "IMyInventory", "method": "TransferAll(destination)"}, {"interface": "IMyInventory", "method": "Clear()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Container must exist", "Container must have items", "Destination must have space (if specified)", "User must have control authority"], "effects": ["Container inventory cleared", "Items transferred to destination or ejected", "Container becomes empty"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5000, "instruction_cost": 20}, "validation_hooks": ["check_block_exists(target)", "check_block_type_container(target)", "check_container_has_items(target)", "check_destination_exists_optional(destination_container)", "check_destination_space_available(destination_container)", "check_user_authority(target)"], "error_cases": [{"condition": "container_not_found", "message": "No containers matching '{target}' found", "recovery": "List available containers"}, {"condition": "container_already_empty", "message": "Container '{target}' is already empty", "recovery": "Container has no items to empty"}, {"condition": "destination_full", "message": "Destination container has no space", "recovery": "Use different destination or enable eject_to_space"}, {"condition": "no_destination_specified", "message": "No destination specified and eject_to_space disabled", "recovery": "Specify destination container or enable eject_to_space"}], "safety_class": "caution", "idempotent": true, "reversible": false, "examples": [{"input": "empty mining storage to main cargo", "parsed": {"verb": "empty_container", "target": {"name": "mining storage"}, "parameters": {"destination_container": "main cargo"}}}, {"input": "dump waste container", "parsed": {"verb": "empty_container", "target": {"name": "waste container"}, "parameters": {"eject_to_space": true}}}], "synonyms": ["clear container", "eject all items", "dump container"], "tags": ["logistics", "container", "empty", "transfer"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyInventory__part-002.md", "sections": ["Transfer Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.set_container_priority.container.v1", "title": "Set container collection priority", "category": "logistics", "verb": "set_container_priority", "natural_language_triggers": ["set container priority", "priority container", "collection priority", "storage priority"], "targets": {"allowed_types": ["Cargo Container", "Large Cargo Container", "Medium Cargo Container", "Small Cargo Container"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_container"}, "parameters": [{"name": "priority_level", "type": "enum", "values": ["High", "Medium", "Low"], "required": true, "validation": "priority_valid", "description": "Container fill priority level"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Container", "Priority"], "modapi_calls": [{"interface": "IMyInventory", "method": "SetPriority(priority_level)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Container must exist", "Container must be functional", "Priority level must be valid", "User must have control authority"], "effects": ["Container priority level set", "Conveyor system uses priority for item routing", "Filling order determined"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_container(target)", "check_block_functional(target)", "validate_priority_level(priority_level)", "check_user_authority(target)"], "error_cases": [{"condition": "container_not_found", "message": "No containers matching '{target}' found", "recovery": "List available containers"}, {"condition": "invalid_priority", "message": "Invalid priority level '{priority_level}'", "recovery": "Use High, Medium, or Low priority"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set main cargo high priority", "parsed": {"verb": "set_container_priority", "target": {"name": "main cargo"}, "parameters": {"priority_level": "High"}}}, {"input": "low priority for overflow storage", "parsed": {"verb": "set_container_priority", "target": {"name": "overflow storage"}, "parameters": {"priority_level": "Low"}}}], "synonyms": ["priority container", "collection priority", "storage priority"], "tags": ["logistics", "container", "priority", "routing"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyInventory__part-002.md", "sections": ["Priority Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.organize_inventory.container.v1", "title": "Organize container inventory", "category": "logistics", "verb": "organize_inventory", "natural_language_triggers": ["organize inventory", "sort container", "tidy inventory", "arrange items"], "targets": {"allowed_types": ["Cargo Container", "Large Cargo Container", "Medium Cargo Container", "Small Cargo Container"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_container"}, "parameters": [{"name": "sort_method", "type": "enum", "values": ["Type", "Quantity", "Alphabetical", "Size"], "required": false, "default": "Type", "validation": "sort_method_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Container", "Organize"], "modapi_calls": [{"interface": "IMyInventory", "method": "SortInventory(sort_method)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Container must exist", "Container must have items", "User must have control authority"], "effects": ["Container inventory sorted", "Items reorganized by specified method", "Inventory efficiency improved"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 2000, "instruction_cost": 12}, "validation_hooks": ["check_block_exists(target)", "check_block_type_container(target)", "check_container_has_items(target)", "validate_sort_method(sort_method)", "check_user_authority(target)"], "error_cases": [{"condition": "container_not_found", "message": "No containers matching '{target}' found", "recovery": "List available containers"}, {"condition": "container_empty", "message": "Container '{target}' is empty", "recovery": "Container has no items to organize"}, {"condition": "invalid_sort_method", "message": "Invalid sort method '{sort_method}'", "recovery": "Use Type, Quantity, Alphabetical, or Size"}], "safety_class": "safe", "idempotent": false, "reversible": false, "examples": [{"input": "organize main cargo by type", "parsed": {"verb": "organize_inventory", "target": {"name": "main cargo"}, "parameters": {"sort_method": "Type"}}}, {"input": "sort inventory alphabetically", "parsed": {"verb": "organize_inventory", "target": {"type": "container"}, "parameters": {"sort_method": "Alphabetical"}}}], "synonyms": ["sort container", "tidy inventory", "arrange items"], "tags": ["logistics", "organization", "sorting", "inventory"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyInventory__part-002.md", "sections": ["Organization Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}