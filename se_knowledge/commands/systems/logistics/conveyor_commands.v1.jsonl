{"id": "logistics.transfer_item.conveyor.v1", "title": "Transfer items through conveyor system", "category": "logistics", "verb": "transfer_item", "natural_language_triggers": ["transfer item", "move item", "send item", "transport item", "conveyor transfer"], "targets": {"allowed_types": ["Cargo Container", "Large Cargo Container", "Medium Cargo Container", "Small Cargo Container"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_container_or_conveyor_connected"}, "parameters": [{"name": "item_type", "type": "item_name", "required": true, "validation": "item_exists", "description": "Type of item to transfer"}, {"name": "amount", "type": "float", "required": false, "default": "all_available", "validation": "positive_number", "description": "Amount to transfer"}, {"name": "source_container", "type": "block_reference", "required": false, "default": "auto_detect", "validation": "container_exists"}, {"name": "destination_container", "type": "block_reference", "required": true, "validation": "container_exists"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Conveyor System", "Transfer"], "modapi_calls": [{"interface": "IMyGridConveyorSystem", "method": "PullItem(itemDefinitionId, amount, startingBlock, destinationInventory, false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Source and destination containers must exist", "Containers must be connected via conveyors", "Item must be available in source", "Destination must have space", "User must have control authority"], "effects": ["Items transferred through conveyor system", "Source inventory decreases", "Destination inventory increases", "Conveyor system utilization"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 2000, "instruction_cost": 20}, "validation_hooks": ["check_container_exists(source_container)", "check_container_exists(destination_container)", "check_conveyor_connection(source_container, destination_container)", "validate_item_type(item_type)", "check_item_available_in_source(source_container, item_type, amount)", "check_destination_space(destination_container, item_type, amount)", "check_user_authority(target)"], "error_cases": [{"condition": "containers_not_connected", "message": "Containers not connected via conveyor system", "recovery": "Build conveyor tubes to connect containers"}, {"condition": "item_not_available", "message": "Item '{item_type}' not available in source container", "recovery": "Check item availability in source inventory"}, {"condition": "destination_full", "message": "Destination container has no space for '{item_type}'", "recovery": "Empty destination container or use different destination"}, {"condition": "item_blocked_by_sorter", "message": "Item transfer blocked by conveyor sorter", "recovery": "Check sorter filter settings"}, {"condition": "conveyor_system_overloaded", "message": "Conveyor system overloaded", "recovery": "Reduce concurrent transfers or upgrade conveyor system"}], "safety_class": "safe", "idempotent": false, "reversible": false, "examples": [{"input": "transfer iron ore from Mining Storage to Refinery Storage", "parsed": {"verb": "transfer_item", "target": {"name": "Refinery Storage"}, "parameters": {"item_type": "Iron Ore", "source_container": "Mining Storage", "destination_container": "Refinery Storage"}}}, {"input": "move 1000 steel plates to construction", "parsed": {"verb": "transfer_item", "target": {"name": "construction"}, "parameters": {"item_type": "Steel Plate", "amount": 1000, "destination_container": "Construction Storage"}}}], "synonyms": ["move item", "send item", "transport item", "conveyor transfer"], "tags": ["logistics", "conveyor", "transfer", "items"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Logistics/IMyGridConveyorSystem.md", "sections": ["Methods", "PullItem"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.enable_sorter.conveyor_sorter.v1", "title": "Enable conveyor sorter", "category": "logistics", "verb": "enable_sorter", "natural_language_triggers": ["enable sorter", "turn on sorter", "activate sorting", "start filtering"], "targets": {"allowed_types": ["Conveyor Sorter", "Small Conveyor Sorter"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_On"], "terminal_path": ["Terminal", "Conveyor Sorter", "On/Off"], "modapi_calls": [{"interface": "IMyConveyorSorter", "property": "Enabled", "method": "set_Enabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Sorter must exist", "Sorter must be functional", "Sorter must be powered", "Filter list should be configured", "User must have control authority"], "effects": ["Sorter.Enabled = true", "Item filtering begins", "Configured items pass through", "Sorting automation activated"], "constraints": {"power_required_mw": 0.0001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_conveyor_sorter(target)", "check_block_functional(target)", "check_block_powered(target)", "check_sorter_filter_configured(target)", "check_user_authority(target)"], "error_cases": [{"condition": "sorter_not_found", "message": "No conveyor sorters matching '{target}' found", "recovery": "List available conveyor sorters"}, {"condition": "sorter_unpowered", "message": "Conveyor sorter '{target}' has no power", "recovery": "Check power grid and connections"}, {"condition": "no_filter_configured", "message": "Sorter '{target}' has no filter configured", "recovery": "Configure sorter filter list before enabling"}, {"condition": "sorter_not_functional", "message": "Conveyor sorter '{target}' is not functional", "recovery": "Check sorter condition"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable ore sorter", "parsed": {"verb": "enable_sorter", "target": {"name": "ore sorter"}}}, {"input": "activate sorting system", "parsed": {"verb": "enable_sorter", "target": {"type": "conveyor_sorter", "selector": "all"}}}], "synonyms": ["turn on sorter", "activate sorting", "start filtering"], "tags": ["logistics", "sorter", "filtering", "automation"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Logistics/IMyConveyorSorter.md", "sections": ["Properties"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_Sorter__part-001.md", "sections": ["Usage"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.disable_sorter.conveyor_sorter.v1", "title": "Disable conveyor sorter", "category": "logistics", "verb": "disable_sorter", "natural_language_triggers": ["disable sorter", "turn off sorter", "deactivate sorting", "stop filtering"], "targets": {"allowed_types": ["Conveyor Sorter", "Small Conveyor Sorter"], "allowed_selectors": ["by_name", "by_group", "by_type", "by_zone", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_Off"], "terminal_path": ["Terminal", "Conveyor Sorter", "On/Off"], "modapi_calls": [{"interface": "IMyConveyorSorter", "property": "Enabled", "method": "set_Enabled(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Sorter must exist", "User must have control authority"], "effects": ["Sorter.Enabled = false", "Item filtering stops", "All items pass through freely", "Sorting automation deactivated"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_conveyor_sorter(target)", "check_user_authority(target)"], "error_cases": [{"condition": "sorter_not_found", "message": "No conveyor sorters matching '{target}' found", "recovery": "List available conveyor sorters"}, {"condition": "sorter_already_off", "message": "Conveyor sorter '{target}' is already disabled", "recovery": "Sorter is not currently active"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable ore sorter", "parsed": {"verb": "disable_sorter", "target": {"name": "ore sorter"}}}, {"input": "stop filtering", "parsed": {"verb": "disable_sorter", "target": {"type": "conveyor_sorter", "selector": "all"}}}], "synonyms": ["turn off sorter", "deactivate sorting", "stop filtering"], "tags": ["logistics", "sorter", "disable", "stop"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Logistics/IMyConveyorSorter.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.set_sorter_filter.conveyor_sorter.v1", "title": "Set conveyor sorter filter", "category": "logistics", "verb": "set_sorter_filter", "natural_language_triggers": ["set sorter filter", "configure filter", "sorter whitelist", "sorter blacklist", "filter items"], "targets": {"allowed_types": ["Conveyor Sorter", "Small Conveyor Sorter"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "filter_mode", "type": "enum", "values": ["Whitelist", "Blacklist"], "required": true, "validation": "filter_mode_valid", "description": "Allow or block specified items"}, {"name": "item_filters", "type": "item_filter_array", "required": true, "validation": "item_filters_valid", "description": "List of items to filter"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Conveyor Sorter", "Filter List"], "modapi_calls": [{"interface": "IMyConveyorSorter", "method": "SetFilterMode(MyConveyorSorterMode mode)"}, {"interface": "IMyConveyorSorter", "method": "ClearFilterList()"}, {"interface": "IMyConveyorSorter", "method": "AddItem(MyInventoryItemFilter item)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Sorter must exist", "Sorter must be functional", "Filter mode must be valid", "Item filters must be valid", "User must have control authority"], "effects": ["Sorter filter list updated", "Item filtering behavior configured", "Conveyor flow control established"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1000, "instruction_cost": 15}, "validation_hooks": ["check_block_exists(target)", "check_block_type_conveyor_sorter(target)", "check_block_functional(target)", "validate_filter_mode(filter_mode)", "validate_item_filters(item_filters)", "check_user_authority(target)"], "error_cases": [{"condition": "sorter_not_found", "message": "No conveyor sorters matching '{target}' found", "recovery": "List available conveyor sorters"}, {"condition": "invalid_filter_mode", "message": "Invalid filter mode '{filter_mode}'", "recovery": "Use Whitelist or Blacklist"}, {"condition": "invalid_item_filters", "message": "Invalid item filters specified", "recovery": "Use valid item names and filter patterns"}, {"condition": "filter_list_too_long", "message": "Filter list exceeds maximum entries", "recovery": "Reduce number of filter items"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set ore sorter whitelist Iron Ore Stone Ore", "parsed": {"verb": "set_sorter_filter", "target": {"name": "ore sorter"}, "parameters": {"filter_mode": "Whitelist", "item_filters": ["Iron Ore", "Stone Ore"]}}}, {"input": "sorter blacklist uranium", "parsed": {"verb": "set_sorter_filter", "target": {"name": "safety sorter"}, "parameters": {"filter_mode": "Blacklist", "item_filters": ["Uranium Ore", "Uranium Ingot"]}}}], "synonyms": ["configure filter", "sorter whitelist", "sorter blacklist", "filter items"], "tags": ["logistics", "sorter", "filter", "configuration"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Logistics/IMyConveyorSorter.md", "sections": ["Methods", "Filter"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_Sorter__part-001.md", "sections": ["Filtering"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.set_sorter_drain_all.conveyor_sorter.v1", "title": "Set sorter drain all mode", "category": "logistics", "verb": "set_sorter_drain_all", "natural_language_triggers": ["set sorter drain all", "drain all mode", "active sorting", "pull all items"], "targets": {"allowed_types": ["Conveyor Sorter", "Small Conveyor Sorter"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "enable_drain", "type": "boolean", "required": true, "validation": "boolean", "description": "Enable active item pulling"}], "se_implementation": {"toolbar_actions": ["DrainAll"], "terminal_path": ["Terminal", "Conveyor Sorter", "Drain All"], "modapi_calls": [{"interface": "IMyConveyorSorter", "property": "DrainAll", "method": "set_DrainAll(bool enable)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Sorter must exist", "Sorter must be functional", "Sorter must be powered", "Filter list should be configured", "User must have control authority"], "effects": ["Sorter.DrainAll = enable_drain", "Active/passive sorting mode set", "Item pulling behavior configured"], "constraints": {"power_required_mw": 0.0001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_conveyor_sorter(target)", "check_block_functional(target)", "check_block_powered(target)", "check_user_authority(target)"], "error_cases": [{"condition": "sorter_not_found", "message": "No conveyor sorters matching '{target}' found", "recovery": "List available conveyor sorters"}, {"condition": "sorter_unpowered", "message": "Conveyor sorter '{target}' has no power", "recovery": "Check power grid and connections"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable drain all on ore sorter", "parsed": {"verb": "set_sorter_drain_all", "target": {"name": "ore sorter"}, "parameters": {"enable_drain": true}}}, {"input": "active sorting mode", "parsed": {"verb": "set_sorter_drain_all", "target": {"type": "conveyor_sorter"}, "parameters": {"enable_drain": true}}}], "synonyms": ["drain all mode", "active sorting", "pull all items"], "tags": ["logistics", "sorter", "drain", "active"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Logistics/IMyConveyorSorter.md", "sections": ["Properties", "DrainAll"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_Sorter__part-002.md", "sections": ["Drain All"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.get_conveyor_system_status.grid.v1", "title": "Get conveyor system status", "category": "logistics", "verb": "get_conveyor_system_status", "natural_language_triggers": ["get conveyor status", "conveyor system info", "logistics status", "conveyor network"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Info", "Conveyor System"], "modapi_calls": [{"interface": "IMyGridConveyorSystem", "method": "GetConveyorSystemStatus()"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "User must have view authority"], "effects": ["Returns conveyor network topology", "Returns active transfers", "Returns sorter status", "Returns bottlenecks", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 10, "instruction_cost": 8}, "validation_hooks": ["check_grid_access()", "check_view_authority_grid()"], "error_cases": [{"condition": "no_conveyor_system", "message": "No conveyor system found on grid", "recovery": "Build conveyor tubes and connectors"}, {"condition": "conveyor_analysis_failed", "message": "Conveyor system analysis failed", "recovery": "Check conveyor network integrity"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check conveyor system", "parsed": {"verb": "get_conveyor_system_status", "target": {"type": "grid", "selector": "current"}}}, {"input": "logistics network status", "parsed": {"verb": "get_conveyor_system_status", "target": {"type": "grid", "selector": "current"}}}], "synonyms": ["conveyor system info", "logistics status", "conveyor network"], "tags": ["logistics", "monitoring", "conveyor", "status"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Logistics/IMyGridConveyorSystem.md", "sections": ["Status Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.find_item_location.grid.v1", "title": "Find item location in grid", "category": "logistics", "verb": "find_item_location", "natural_language_triggers": ["find item", "locate item", "where is item", "search for item"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [{"name": "item_type", "type": "item_name", "required": true, "validation": "item_exists", "description": "Type of item to locate"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Info", "Item Search"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "FindItemsInGrid(itemType)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "Item type must be valid", "User must have view authority"], "effects": ["Returns containers with specified item", "Returns quantities in each container", "Returns total amount available", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 5, "instruction_cost": 8}, "validation_hooks": ["check_grid_access()", "validate_item_type(item_type)", "check_view_authority_grid()"], "error_cases": [{"condition": "item_not_found", "message": "Item '{item_type}' not found in grid", "recovery": "Item not available in any connected container"}, {"condition": "invalid_item_type", "message": "Invalid item type '{item_type}'", "recovery": "Use valid item name"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "find uranium ingots", "parsed": {"verb": "find_item_location", "target": {"type": "grid", "selector": "current"}, "parameters": {"item_type": "Uranium Ingot"}}}, {"input": "locate steel plates", "parsed": {"verb": "find_item_location", "target": {"type": "grid", "selector": "current"}, "parameters": {"item_type": "Steel Plate"}}}], "synonyms": ["locate item", "where is item", "search for item"], "tags": ["logistics", "search", "location", "inventory"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyGridTerminalSystem.md", "sections": ["Search Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.get_total_inventory.grid.v1", "title": "Get total grid inventory summary", "category": "logistics", "verb": "get_total_inventory", "natural_language_triggers": ["get total inventory", "inventory summary", "total items", "grid inventory"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [{"name": "item_category", "type": "enum", "values": ["All", "Ores", "Ingots", "Components", "Tools", "Ammo"], "required": false, "default": "All", "validation": "item_category_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Info", "Inventory Summary"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "GetTotalInventory(category)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "User must have view authority"], "effects": ["Returns inventory totals by category", "Returns storage capacity used", "Returns item distribution", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 15, "instruction_cost": 10}, "validation_hooks": ["check_grid_access()", "validate_item_category(item_category)", "check_view_authority_grid()"], "error_cases": [{"condition": "no_inventory_blocks", "message": "No inventory blocks found on grid", "recovery": "Build containers for inventory storage"}, {"condition": "invalid_category", "message": "Invalid item category '{item_category}'", "recovery": "Use All, Ores, Ingots, Components, Tools, or Ammo"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get total inventory", "parsed": {"verb": "get_total_inventory", "target": {"type": "grid", "selector": "current"}}}, {"input": "inventory summary components only", "parsed": {"verb": "get_total_inventory", "target": {"type": "grid", "selector": "current"}, "parameters": {"item_category": "Components"}}}], "synonyms": ["inventory summary", "total items", "grid inventory"], "tags": ["logistics", "monitoring", "inventory", "summary"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyGridTerminalSystem.md", "sections": ["Inventory Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}