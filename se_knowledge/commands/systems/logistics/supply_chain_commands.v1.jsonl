{"id": "logistics.create_supply_chain.automation.v1", "title": "Create automated supply chain", "category": "logistics", "verb": "create_supply_chain", "natural_language_triggers": ["create supply chain", "supply chain automation", "automated logistics", "resource flow"], "targets": {"allowed_types": ["Conveyor Sorter"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "chain_name", "type": "text", "required": true, "validation": "chain_name_format"}, {"name": "source_containers", "type": "block_reference_array", "required": true, "validation": "containers_exist"}, {"name": "destination_containers", "type": "block_reference_array", "required": true, "validation": "containers_exist"}, {"name": "item_flow_rules", "type": "item_flow_array", "required": true, "validation": "flow_rules_valid"}, {"name": "auto_balance", "type": "boolean", "required": false, "default": true, "validation": "boolean"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Sorter", "Supply Chain"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateSupplyChain(name, sources, destinations, rules, balance)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Sorters must exist", "Source and destination containers must exist", "Containers must be connected via conveyors", "Chain name must be unique", "Flow rules must be valid", "User must have automation authority"], "effects": ["Supply chain system created", "Automated item flow configured", "Resource distribution activated", "Load balancing enabled"], "constraints": {"power_required_mw": 0.005, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 8000, "instruction_cost": 60}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_conveyor_sorter(target)", "validate_chain_name_unique(chain_name)", "check_containers_exist(source_containers, destination_containers)", "check_conveyor_connections(source_containers, destination_containers)", "validate_item_flow_rules(item_flow_rules)", "check_automation_authority()"], "error_cases": [{"condition": "chain_name_exists", "message": "Supply chain '{chain_name}' already exists", "recovery": "Choose a different chain name"}, {"condition": "containers_not_connected", "message": "Source and destination containers not connected via conveyors", "recovery": "Build conveyor connections between containers"}, {"condition": "invalid_flow_rules", "message": "Invalid item flow rules specified", "recovery": "Use valid item types and flow configurations"}, {"condition": "no_automation_authority", "message": "No permission to create supply chains", "recovery": "Automation requires elevated permissions"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create supply chain Mining Operation sources Ore Storage destinations Refinery Input", "parsed": {"verb": "create_supply_chain", "target": {"zone": "mining"}, "parameters": {"chain_name": "Mining Operation", "source_containers": ["Ore Storage"], "destination_containers": ["Refinery Input"], "item_flow_rules": ["Ores:All"]}}}, {"input": "automated logistics Production Line", "parsed": {"verb": "create_supply_chain", "target": {"name": "main sorter"}, "parameters": {"chain_name": "Production Line", "source_containers": ["Raw Materials"], "destination_containers": ["Assembly Input"], "item_flow_rules": ["Components:Steel_Plate,Motor,Computer"], "auto_balance": true}}}], "synonyms": ["supply chain automation", "automated logistics", "resource flow"], "tags": ["logistics", "automation", "supply_chain", "resource_flow"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_system__part-004.md", "sections": ["Automatic Transfer"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.create_ore_processing_chain.automation.v1", "title": "Create ore processing supply chain", "category": "logistics", "verb": "create_ore_processing_chain", "natural_language_triggers": ["create ore processing", "ore processing chain", "mining to refinery", "automated ore flow"], "targets": {"allowed_types": ["Conveyor Sorter"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "chain_name", "type": "text", "required": true, "validation": "chain_name_format"}, {"name": "mining_storage", "type": "block_reference_array", "required": true, "validation": "containers_exist"}, {"name": "refineries", "type": "block_reference_array", "required": true, "validation": "refineries_exist"}, {"name": "ingot_storage", "type": "block_reference_array", "required": true, "validation": "containers_exist"}, {"name": "priority_ores", "type": "item_array", "required": false, "validation": "ore_items_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Sorter", "Ore Processing"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateOreProcessingChain(name, mining, refineries, storage, priority)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Sorters must exist", "Mining storage, refineries, and ingot storage must exist", "All components must be connected via conveyors", "Chain name must be unique", "User must have automation authority"], "effects": ["Ore processing chain created", "Automated ore to ingot flow", "Priority ore processing configured", "Complete mining logistics activated"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 10000, "instruction_cost": 80}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_conveyor_sorter(target)", "validate_chain_name_unique(chain_name)", "check_containers_exist(mining_storage, ingot_storage)", "check_refineries_exist(refineries)", "check_ore_processing_conveyor_chain(mining_storage, refineries, ingot_storage)", "validate_priority_ores(priority_ores)", "check_automation_authority()"], "error_cases": [{"condition": "chain_name_exists", "message": "Ore processing chain '{chain_name}' already exists", "recovery": "Choose a different chain name"}, {"condition": "refineries_not_found", "message": "Refineries not found: {refineries}", "recovery": "Check refinery names and existence"}, {"condition": "conveyor_chain_incomplete", "message": "Conveyor chain incomplete for ore processing", "recovery": "Connect mining storage → refineries → ingot storage via conveyors"}, {"condition": "invalid_priority_ores", "message": "Invalid priority ore types specified", "recovery": "Use valid ore item names"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create ore processing Mining to Production with priority Iron Ore Nickel Ore", "parsed": {"verb": "create_ore_processing_chain", "target": {"zone": "processing"}, "parameters": {"chain_name": "Mining to Production", "mining_storage": ["Ore Storage"], "refineries": ["Main Refinery", "Backup Refinery"], "ingot_storage": ["Ingot Storage"], "priority_ores": ["Iron Ore", "Nickel Ore"]}}}, {"input": "automated ore flow system", "parsed": {"verb": "create_ore_processing_chain", "target": {"name": "ore sorter"}, "parameters": {"chain_name": "Ore Flow", "mining_storage": ["Mining Container"], "refineries": ["Refinery"], "ingot_storage": ["Material Storage"]}}}], "synonyms": ["ore processing chain", "mining to refinery", "automated ore flow"], "tags": ["logistics", "automation", "ore_processing", "mining"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_system__part-004.md", "sections": ["Ore Processing"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.create_component_distribution.automation.v1", "title": "Create component distribution system", "category": "logistics", "verb": "create_component_distribution", "natural_language_triggers": ["create component distribution", "component supply system", "distribute components", "component logistics"], "targets": {"allowed_types": ["Conveyor Sorter"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "system_name", "type": "text", "required": true, "validation": "system_name_format"}, {"name": "component_storage", "type": "block_reference_array", "required": true, "validation": "containers_exist"}, {"name": "distribution_targets", "type": "distribution_target_array", "required": true, "validation": "distribution_targets_valid"}, {"name": "restock_thresholds", "type": "item_threshold_array", "required": false, "validation": "thresholds_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Sorter", "Component Distribution"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateComponentDistribution(name, storage, targets, thresholds)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Sorters must exist", "Component storage and targets must exist", "Distribution targets must be connected", "System name must be unique", "User must have automation authority"], "effects": ["Component distribution system created", "Automated component supply", "Restock automation configured", "Production support activated"], "constraints": {"power_required_mw": 0.008, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 12000, "instruction_cost": 70}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_conveyor_sorter(target)", "validate_system_name_unique(system_name)", "check_containers_exist(component_storage)", "validate_distribution_targets(distribution_targets)", "check_distribution_conveyor_connections(component_storage, distribution_targets)", "validate_restock_thresholds(restock_thresholds)", "check_automation_authority()"], "error_cases": [{"condition": "system_name_exists", "message": "Component distribution '{system_name}' already exists", "recovery": "Choose a different system name"}, {"condition": "targets_not_connected", "message": "Distribution targets not connected to component storage", "recovery": "Build conveyor connections to all targets"}, {"condition": "invalid_targets", "message": "Invalid distribution targets specified", "recovery": "Use valid block references for distribution"}, {"condition": "thresholds_invalid", "message": "Invalid restock thresholds", "recovery": "Use valid item names and threshold values"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create component distribution Factory Supply storage Component Storage targets Assembly Line Welder Bay", "parsed": {"verb": "create_component_distribution", "target": {"zone": "factory"}, "parameters": {"system_name": "Factory Supply", "component_storage": ["Component Storage"], "distribution_targets": ["Assembly Line:Assembler", "Welder Bay:Welder"]}}}, {"input": "component supply system with restock", "parsed": {"verb": "create_component_distribution", "target": {"name": "main sorter"}, "parameters": {"system_name": "Auto Supply", "component_storage": ["Main Components"], "distribution_targets": ["Production:Assembler"], "restock_thresholds": ["Steel_Plate:1000", "Motor:100"]}}}], "synonyms": ["component supply system", "distribute components", "component logistics"], "tags": ["logistics", "automation", "components", "distribution"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_system__part-004.md", "sections": ["Component Distribution"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.create_waste_management.automation.v1", "title": "Create automated waste management", "category": "logistics", "verb": "create_waste_management", "natural_language_triggers": ["create waste management", "waste disposal system", "automated waste", "stone ejection"], "targets": {"allowed_types": ["Connector"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_connector"}, "parameters": [{"name": "system_name", "type": "text", "required": true, "validation": "system_name_format"}, {"name": "waste_items", "type": "item_array", "required": false, "default": ["Stone", "Gravel"], "validation": "waste_items_valid"}, {"name": "sorters", "type": "block_reference_array", "required": true, "validation": "sorters_exist"}, {"name": "auto_eject_threshold", "type": "percentage", "range": {"min": 50, "max": 95}, "units": "%", "default": 80, "required": false, "validation": "threshold_range"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Connector", "Waste Management"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateWasteManagement(name, ejectors, waste_items, sorters, threshold)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Connectors (ejectors) must exist", "Sorters must exist", "Waste management system name must be unique", "Conveyor connections must exist", "User must have automation authority"], "effects": ["Waste management system created", "Automated waste ejection", "Storage space optimization", "Resource efficiency improved"], "constraints": {"power_required_mw": 0.003, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 5000, "instruction_cost": 50}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_connector(target)", "validate_system_name_unique(system_name)", "check_sorters_exist(sorters)", "validate_waste_items(waste_items)", "check_waste_conveyor_connections(target, sorters)", "validate_auto_eject_threshold(auto_eject_threshold)", "check_automation_authority()"], "error_cases": [{"condition": "system_name_exists", "message": "Waste management '{system_name}' already exists", "recovery": "Choose a different system name"}, {"condition": "sorters_not_found", "message": "Sorters not found: {sorters}", "recovery": "Check sorter names and existence"}, {"condition": "waste_conveyor_not_connected", "message": "Waste sorters not connected to ejectors", "recovery": "Build conveyor connections from sorters to ejectors"}, {"condition": "invalid_waste_items", "message": "Invalid waste item types specified", "recovery": "Use valid item names for waste management"}, {"condition": "threshold_invalid", "message": "Auto-eject threshold {auto_eject_threshold}% invalid", "recovery": "Use threshold between 50% and 95%"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create waste management Stone Disposal ejectors Waste Ejector sorters Stone Sorter", "parsed": {"verb": "create_waste_management", "target": {"name": "Waste Ejector"}, "parameters": {"system_name": "Stone Disposal", "waste_items": ["Stone", "Gravel"], "sorters": ["Stone Sorter"], "auto_eject_threshold": 85}}}, {"input": "automated waste system", "parsed": {"verb": "create_waste_management", "target": {"zone": "waste"}, "parameters": {"system_name": "Auto Waste", "sorters": ["Waste Sorter"], "auto_eject_threshold": 90}}}], "synonyms": ["waste disposal system", "automated waste", "stone ejection"], "tags": ["logistics", "automation", "waste", "ejection"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Connector__part-001.md", "sections": ["Ejection"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_Sorter__part-002.md", "sections": ["Waste Management"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.optimize_conveyor_flow.grid.v1", "title": "Optimize conveyor system flow", "category": "logistics", "verb": "optimize_conveyor_flow", "natural_language_triggers": ["optimize conveyor flow", "improve logistics", "conveyor optimization", "flow efficiency"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [{"name": "optimization_focus", "type": "enum", "values": ["Speed", "Power_Efficiency", "Balanced"], "required": false, "default": "Balanced", "validation": "optimization_focus_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Conveyor System", "Optimization"], "modapi_calls": [{"interface": "IMyGridConveyorSystem", "method": "OptimizeConveyorFlow(optimization_focus)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "Grid must have conveyor system", "Multiple conveyor paths recommended", "User must have control authority"], "effects": ["Conveyor system flow optimized", "Transfer efficiency improved", "Bottlenecks identified and resolved", "Resource routing optimized"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 15000, "instruction_cost": 40}, "validation_hooks": ["check_grid_access()", "check_conveyor_system_exists()", "validate_optimization_focus(optimization_focus)", "check_user_authority_grid()"], "error_cases": [{"condition": "no_conveyor_system", "message": "No conveyor system found on grid", "recovery": "Build conveyor tubes and connections"}, {"condition": "insufficient_conveyor_complexity", "message": "Conveyor system too simple for optimization", "recovery": "Add more conveyor paths for optimization benefits"}, {"condition": "optimization_failed", "message": "Conveyor optimization failed", "recovery": "Check conveyor network integrity"}, {"condition": "invalid_optimization_focus", "message": "Invalid optimization focus '{optimization_focus}'", "recovery": "Use Speed, Power_Efficiency, or Balanced"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "optimize conveyor flow for speed", "parsed": {"verb": "optimize_conveyor_flow", "target": {"type": "grid", "selector": "current"}, "parameters": {"optimization_focus": "Speed"}}}, {"input": "improve logistics efficiency", "parsed": {"verb": "optimize_conveyor_flow", "target": {"type": "grid", "selector": "current"}, "parameters": {"optimization_focus": "Power_Efficiency"}}}], "synonyms": ["improve logistics", "conveyor optimization", "flow efficiency"], "tags": ["logistics", "optimization", "efficiency", "conveyor"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_system__part-002.md", "sections": ["Optimization"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.balance_inventory_load.grid.v1", "title": "Balance inventory load across containers", "category": "logistics", "verb": "balance_inventory_load", "natural_language_triggers": ["balance inventory load", "distribute items evenly", "load balancing", "even distribution"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [{"name": "container_group", "type": "text", "required": false, "default": "all_containers", "validation": "container_group_exists"}, {"name": "balance_method", "type": "enum", "values": ["Even_Volume", "Even_Items", "Capacity_Percentage"], "required": false, "default": "Even_Volume", "validation": "balance_method_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Conveyor System", "Load Balancing"], "modapi_calls": [{"interface": "IMyGridConveyorSystem", "method": "BalanceInventoryLoad(container_group, balance_method)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "Grid must have multiple containers", "Containers must be connected via conveyors", "User must have control authority"], "effects": ["Items redistributed across containers", "Load balanced according to method", "Storage efficiency optimized", "Container utilization evened"], "constraints": {"power_required_mw": 0.005, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 20000, "instruction_cost": 35}, "validation_hooks": ["check_grid_access()", "check_multiple_containers_exist()", "check_container_conveyor_connections()", "validate_container_group_exists(container_group)", "validate_balance_method(balance_method)", "check_user_authority_grid()"], "error_cases": [{"condition": "insufficient_containers", "message": "Need at least 2 containers for load balancing", "recovery": "Build more containers for load balancing"}, {"condition": "containers_not_connected", "message": "Containers not connected via conveyor system", "recovery": "Build conveyor connections between containers"}, {"condition": "container_group_not_found", "message": "Container group '{container_group}' not found", "recovery": "Check container group name or use 'all_containers'"}, {"condition": "balance_method_invalid", "message": "Invalid balance method '{balance_method}'", "recovery": "Use Even_Volume, Even_Items, or Capacity_Percentage"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "balance inventory load evenly", "parsed": {"verb": "balance_inventory_load", "target": {"type": "grid", "selector": "current"}}}, {"input": "distribute items by capacity percentage", "parsed": {"verb": "balance_inventory_load", "target": {"type": "grid", "selector": "current"}, "parameters": {"balance_method": "Capacity_Percentage"}}}], "synonyms": ["distribute items evenly", "load balancing", "even distribution"], "tags": ["logistics", "optimization", "balancing", "distribution"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_system__part-002.md", "sections": ["Load Balancing"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.monitor_supply_chain.automation.v1", "title": "Monitor supply chain performance", "category": "logistics", "verb": "monitor_supply_chain", "natural_language_triggers": ["monitor supply chain", "supply chain status", "logistics performance", "flow monitoring"], "targets": {"allowed_types": ["Grid"], "allowed_selectors": ["current"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_current_grid"}, "parameters": [{"name": "chain_name", "type": "text", "required": false, "default": "all_chains", "validation": "chain_name_exists"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Conveyor System", "Chain Monitoring"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "MonitorSupplyChain(chain_name)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "Supply chain must exist (if specified)", "User must have view authority"], "effects": ["Returns supply chain performance metrics", "Returns flow rates and bottlenecks", "Returns efficiency statistics", "Returns alerts and recommendations", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 10, "instruction_cost": 12}, "validation_hooks": ["check_grid_access()", "validate_chain_name_exists(chain_name)", "check_view_authority_grid()"], "error_cases": [{"condition": "no_supply_chains", "message": "No supply chains found on grid", "recovery": "Create supply chains for monitoring"}, {"condition": "chain_not_found", "message": "Supply chain '{chain_name}' not found", "recovery": "Check chain name or monitor all chains"}, {"condition": "monitoring_data_insufficient", "message": "Insufficient data for supply chain monitoring", "recovery": "Run supply chains for analysis data"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "monitor supply chain performance", "parsed": {"verb": "monitor_supply_chain", "target": {"type": "grid", "selector": "current"}}}, {"input": "check Mining Operation flow", "parsed": {"verb": "monitor_supply_chain", "target": {"type": "grid", "selector": "current"}, "parameters": {"chain_name": "Mining Operation"}}}], "synonyms": ["supply chain status", "logistics performance", "flow monitoring"], "tags": ["logistics", "monitoring", "supply_chain", "performance"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_system__part-002.md", "sections": ["Monitoring"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}