{"id": "logistics.create_multi_filter_sorter.conveyor_sorter.v1", "title": "Create multi-filter sorting system", "category": "logistics", "verb": "create_multi_filter_sorter", "natural_language_triggers": ["create multi filter sorter", "advanced sorting", "complex filtering", "multi-stage sorting"], "targets": {"allowed_types": ["Conveyor Sorter", "Small Conveyor Sorter"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "sorter_name", "type": "text", "required": true, "validation": "sorter_name_format"}, {"name": "filter_stages", "type": "filter_stage_array", "required": true, "validation": "filter_stages_valid"}, {"name": "fallback_destination", "type": "block_reference", "required": false, "validation": "container_exists"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Sorter", "Multi-Filter"], "modapi_calls": [{"interface": "IMyConveyorSorter", "method": "CreateMultiFilterSystem(name, stages, fallback)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Sorters must exist", "Filter stages must be valid", "Sorter name must be unique", "Conveyor connections must support multi-stage", "User must have automation authority"], "effects": ["Multi-filter sorting system created", "Complex item routing configured", "Advanced automation activated", "Precise item control enabled"], "constraints": {"power_required_mw": 0.002, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 8000, "instruction_cost": 60}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_conveyor_sorter(target)", "validate_sorter_name_unique(sorter_name)", "validate_filter_stages(filter_stages)", "check_container_exists_optional(fallback_destination)", "check_multi_stage_conveyor_support(target, filter_stages)", "check_automation_authority()"], "error_cases": [{"condition": "sorter_name_exists", "message": "Multi-filter sorter '{sorter_name}' already exists", "recovery": "Choose a different sorter name"}, {"condition": "invalid_filter_stages", "message": "Invalid filter stages configuration", "recovery": "Configure valid filter stages with item types and destinations"}, {"condition": "conveyor_topology_insufficient", "message": "Conveyor topology insufficient for multi-stage sorting", "recovery": "Build additional conveyor branches for complex sorting"}, {"condition": "filter_conflicts", "message": "Filter stage conflicts detected", "recovery": "Resolve conflicting filter rules"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create multi filter sorter Production Sorting stages Ores:Refinery,Components:Assembly,Waste:Ejector", "parsed": {"verb": "create_multi_filter_sorter", "target": {"zone": "production"}, "parameters": {"sorter_name": "Production Sorting", "filter_stages": ["Ores:Refinery", "Components:Assembly", "Waste:Ejector"]}}}, {"input": "advanced sorting system", "parsed": {"verb": "create_multi_filter_sorter", "target": {"name": "main sorter"}, "parameters": {"sorter_name": "Advanced Sort", "filter_stages": ["Iron_Ore:Iron_Refinery", "Nickel_Ore:Nickel_Refinery", "*:General_Storage"], "fallback_destination": "Overflow Storage"}}}], "synonyms": ["advanced sorting", "complex filtering", "multi-stage sorting"], "tags": ["logistics", "automation", "advanced", "sorting"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_Sorter__part-002.md", "sections": ["Advanced Sorting"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.create_priority_queue.conveyor_sorter.v1", "title": "Create priority-based item queue", "category": "logistics", "verb": "create_priority_queue", "natural_language_triggers": ["create priority queue", "priority sorting", "urgent items first", "priority logistics"], "targets": {"allowed_types": ["Conveyor Sorter", "Small Conveyor Sorter"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "queue_name", "type": "text", "required": true, "validation": "queue_name_format"}, {"name": "priority_items", "type": "priority_item_array", "required": true, "validation": "priority_items_valid"}, {"name": "destination", "type": "block_reference", "required": true, "validation": "container_or_producer_exists"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Sorter", "Priority Queue"], "modapi_calls": [{"interface": "IMyConveyorSorter", "method": "CreatePriorityQueue(name, priority_items, destination)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Sorters must exist", "Priority items must be valid", "Destination must exist", "Queue name must be unique", "User must have automation authority"], "effects": ["Priority queue system created", "Items processed by priority order", "Urgent items processed first", "Queue-based logistics activated"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 5000, "instruction_cost": 45}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_conveyor_sorter(target)", "validate_queue_name_unique(queue_name)", "validate_priority_items(priority_items)", "check_destination_exists(destination)", "check_automation_authority()"], "error_cases": [{"condition": "queue_name_exists", "message": "Priority queue '{queue_name}' already exists", "recovery": "Choose a different queue name"}, {"condition": "invalid_priority_items", "message": "Invalid priority item configuration", "recovery": "Configure valid item types with priority levels"}, {"condition": "destination_not_found", "message": "Destination '{destination}' not found", "recovery": "Check destination block name and existence"}, {"condition": "priority_conflicts", "message": "Priority conflicts detected in item list", "recovery": "Resolve priority conflicts in item configuration"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create priority queue Emergency Supply items Uranium:1,Components:2,Ammo:3 to Emergency Storage", "parsed": {"verb": "create_priority_queue", "target": {"zone": "emergency"}, "parameters": {"queue_name": "Emergency Supply", "priority_items": ["Uranium:1", "Components:2", "Ammo:3"], "destination": "Emergency Storage"}}}, {"input": "priority sorting urgent items first", "parsed": {"verb": "create_priority_queue", "target": {"name": "main sorter"}, "parameters": {"queue_name": "Urgent Queue", "priority_items": ["Medical:1", "Power:2", "Construction:3"], "destination": "Priority Storage"}}}], "synonyms": ["priority sorting", "urgent items first", "priority logistics"], "tags": ["logistics", "automation", "priority", "queue"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_Sorter__part-002.md", "sections": ["Priority Systems"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "logistics.create_smart_storage.automation.v1", "title": "Create smart storage allocation system", "category": "logistics", "verb": "create_smart_storage", "natural_language_triggers": ["create smart storage", "intelligent storage", "adaptive storage", "smart allocation"], "targets": {"allowed_types": ["Conveyor Sorter"], "allowed_selectors": ["by_name", "by_zone"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_conveyor_sorter"}, "parameters": [{"name": "storage_name", "type": "text", "required": true, "validation": "storage_name_format"}, {"name": "managed_containers", "type": "block_reference_array", "required": true, "validation": "containers_exist"}, {"name": "allocation_strategy", "type": "enum", "values": ["Type_Based", "Usage_Based", "Capacity_Based", "Hybrid"], "required": false, "default": "Hybrid", "validation": "allocation_strategy_valid"}, {"name": "auto_reorganize", "type": "boolean", "required": false, "default": true, "validation": "boolean"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Sorter", "Smart Storage"], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "CreateSmartStorage(name, containers, strategy, auto_reorganize)"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Sorters must exist", "Managed containers must exist", "Containers must be connected via conveyors", "Storage name must be unique", "User must have automation authority"], "effects": ["Smart storage system created", "Intelligent item allocation", "Adaptive organization activated", "Storage efficiency maximized"], "constraints": {"power_required_mw": 0.008, "network_sync": true, "multiplayer_authority": "automation_admin", "execution_time_ms": 15000, "instruction_cost": 80}, "validation_hooks": ["check_blocks_exist(target)", "check_blocks_type_conveyor_sorter(target)", "validate_storage_name_unique(storage_name)", "check_containers_exist(managed_containers)", "check_smart_storage_conveyor_connections(target, managed_containers)", "validate_allocation_strategy(allocation_strategy)", "check_automation_authority()"], "error_cases": [{"condition": "storage_name_exists", "message": "Smart storage '{storage_name}' already exists", "recovery": "Choose a different storage name"}, {"condition": "containers_not_suitable", "message": "Managed containers not suitable for smart storage", "recovery": "Use containers with sufficient variety and capacity"}, {"condition": "allocation_strategy_invalid", "message": "Invalid allocation strategy '{allocation_strategy}'", "recovery": "Use Type_Based, Usage_Based, Capacity_Based, or Hybrid"}, {"condition": "conveyor_network_insufficient", "message": "Conveyor network insufficient for smart storage", "recovery": "Build comprehensive conveyor connections"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "create smart storage Adaptive Warehouse containers Main Storage Overflow Storage Specialized Storage", "parsed": {"verb": "create_smart_storage", "target": {"zone": "warehouse"}, "parameters": {"storage_name": "Adaptive Warehouse", "managed_containers": ["Main Storage", "Overflow Storage", "Specialized Storage"], "allocation_strategy": "Hybrid"}}}, {"input": "intelligent storage system", "parsed": {"verb": "create_smart_storage", "target": {"name": "storage sorter"}, "parameters": {"storage_name": "Smart System", "managed_containers": ["Container A", "Container B", "Container C"], "allocation_strategy": "Usage_Based", "auto_reorganize": true}}}], "synonyms": ["intelligent storage", "adaptive storage", "smart allocation"], "tags": ["logistics", "automation", "smart", "allocation"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Logistics/Conveyor_system__part-002.md", "sections": ["Smart Storage"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}