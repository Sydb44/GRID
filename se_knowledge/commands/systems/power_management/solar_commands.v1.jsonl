{"id": "power.enable_solar_tracking.solar.v1", "title": "Enable solar panel tracking", "category": "power_management", "verb": "enable_solar_tracking", "natural_language_triggers": ["enable solar tracking", "solar tracking on", "track sun", "auto orient solar", "follow sun"], "targets": {"allowed_types": ["Solar Panel", "Colorable Solar Panel", "Small Solar Panel"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_solar_panel"}, "parameters": [], "se_implementation": {"toolbar_actions": ["AutoPilot_On"], "terminal_path": ["Terminal", "Solar Panel", "Auto-pilot"], "modapi_calls": [{"interface": "IMySolarPanel", "property": "AutoPilot", "method": "set_AutoPilot(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Solar panel must exist", "Solar panel must be functional", "Solar panel must be on rotor/hinge for tracking", "User must have control authority"], "effects": ["SolarPanel.AutoPilot = true", "Panel automatically orients toward sun", "Power generation optimized", "Tracking mechanism engages"], "constraints": {"power_required_mw": 0.001, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_solar_panel(target)", "check_block_functional(target)", "check_tracking_mechanism(target)", "check_user_authority(target)"], "error_cases": [{"condition": "solar_panel_not_found", "message": "No solar panels matching '{target}' found", "recovery": "List available solar panels"}, {"condition": "no_tracking_mechanism", "message": "Solar panel '{target}' has no rotor/hinge for tracking", "recovery": "Attach panel to rotor or hinge for tracking"}, {"condition": "tracking_obstructed", "message": "Solar panel '{target}' tracking is obstructed", "recovery": "Clear obstacles around solar panel"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "enable tracking on solar farm", "parsed": {"verb": "enable_solar_tracking", "target": {"name": "solar farm"}}}, {"input": "track sun with all panels", "parsed": {"verb": "enable_solar_tracking", "target": {"type": "solar_panel", "selector": "all"}}}], "synonyms": ["solar tracking on", "track sun", "auto orient solar", "follow sun"], "tags": ["power_management", "solar", "tracking", "optimization"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Solar_Panel__part-001.md", "sections": ["Tracking", "Auto-pilot"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.disable_solar_tracking.solar.v1", "title": "Disable solar panel tracking", "category": "power_management", "verb": "disable_solar_tracking", "natural_language_triggers": ["disable solar tracking", "solar tracking off", "stop tracking", "manual solar", "fixed position"], "targets": {"allowed_types": ["Solar Panel", "Colorable Solar Panel", "Small Solar Panel"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_solar_panel"}, "parameters": [], "se_implementation": {"toolbar_actions": ["AutoPilot_Off"], "terminal_path": ["Terminal", "Solar Panel", "Auto-pilot"], "modapi_calls": [{"interface": "IMySolarPanel", "property": "AutoPilot", "method": "set_AutoPilot(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Solar panel must exist", "User must have control authority"], "effects": ["SolarPanel.AutoPilot = false", "Panel maintains fixed position", "Manual orientation control", "Tracking power usage stops"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_solar_panel(target)", "check_user_authority(target)"], "error_cases": [{"condition": "solar_panel_not_found", "message": "No solar panels matching '{target}' found", "recovery": "List available solar panels"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "disable tracking on backup panels", "parsed": {"verb": "disable_solar_tracking", "target": {"name": "backup panels"}}}, {"input": "fixed position for all solar", "parsed": {"verb": "disable_solar_tracking", "target": {"type": "solar_panel", "selector": "all"}}}], "synonyms": ["solar tracking off", "stop tracking", "manual solar", "fixed position"], "tags": ["power_management", "solar", "manual", "fixed"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Solar_Panel__part-001.md", "sections": ["Tracking", "Manual Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.get_solar_output.solar.v1", "title": "Get solar panel power output", "category": "power_management", "verb": "get_solar_output", "natural_language_triggers": ["get solar output", "check solar power", "solar efficiency", "how much solar", "solar generation"], "targets": {"allowed_types": ["Solar Panel", "Colorable Solar Panel", "Small Solar Panel"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_solar_panel"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Solar Panel", "Power Output"], "modapi_calls": [{"interface": "IMyPowerProducer", "property": "CurrentOutput", "method": "get_CurrentOutput()"}, {"interface": "IMySolarPanel", "property": "MaxOutput", "method": "get_MaxOutput()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Solar panel must exist", "User must have view authority"], "effects": ["Returns current power output", "Returns maximum possible output", "Returns efficiency percentage", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_solar_panel(target)", "check_view_authority(target)"], "error_cases": [{"condition": "solar_panel_not_found", "message": "No solar panels matching '{target}' found", "recovery": "List available solar panels"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check solar farm output", "parsed": {"verb": "get_solar_output", "target": {"name": "solar farm"}}}, {"input": "solar efficiency status", "parsed": {"verb": "get_solar_output", "target": {"type": "solar_panel", "selector": "all"}}}], "synonyms": ["check solar power", "solar efficiency", "how much solar", "solar generation"], "tags": ["power_management", "monitoring", "solar", "efficiency"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyPowerProducer.md", "sections": ["Properties"]}, {"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMySolarPanel.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.orient_solar_manual.solar.v1", "title": "Manually orient solar panel", "category": "power_management", "verb": "orient_solar_manual", "natural_language_triggers": ["orient solar panel", "point solar at", "angle solar panel", "direct solar toward"], "targets": {"allowed_types": ["Solar Panel", "Colorable Solar Panel"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_solar_panel_with_rotor"}, "parameters": [{"name": "direction", "type": "coordinate", "required": true, "validation": "coordinate_format", "description": "Direction to point solar panel"}, {"name": "precision", "type": "float", "required": false, "default": 1.0, "range": {"min": 0.1, "max": 10.0}, "validation": "precision_range"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Solar Panel", "Manual Orientation"], "modapi_calls": [{"interface": "IMySolarPanel", "method": "SetManualOrientation(direction)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Solar panel must exist", "Solar panel must be on rotor/hinge", "Solar panel must have manual control capability", "User must have control authority"], "effects": ["Solar panel orients toward specified direction", "Tracking disabled for manual control", "Power generation adjusted for new angle"], "constraints": {"power_required_mw": 0.01, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5000, "instruction_cost": 12}, "validation_hooks": ["check_block_exists(target)", "check_block_type_solar_panel(target)", "check_has_manual_control(target)", "validate_direction_coordinate(direction)", "check_user_authority(target)"], "error_cases": [{"condition": "no_manual_control", "message": "Solar panel '{target}' has no manual orientation control", "recovery": "Ensure panel is on rotor/hinge with control capability"}, {"condition": "invalid_direction", "message": "Invalid direction coordinate '{direction}'", "recovery": "Use valid GPS coordinate format"}, {"condition": "orientation_blocked", "message": "Cannot orient '{target}' - movement blocked", "recovery": "Clear obstacles around solar panel mechanism"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "point solar array at GPS:Sun:0:1000:0:", "parsed": {"verb": "orient_solar_manual", "target": {"name": "solar array"}, "parameters": {"direction": "GPS:Sun:0:1000:0:"}}}], "synonyms": ["point solar at", "angle solar panel", "direct solar toward"], "tags": ["power_management", "solar", "manual", "orientation"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Solar_Panel__part-002.md", "sections": ["Manual Control"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.start_wind_turbine.wind.v1", "title": "Start wind turbine", "category": "power_management", "verb": "start_wind_turbine", "natural_language_triggers": ["start wind turbine", "turn on wind power", "enable wind turbine", "wind power on"], "targets": {"allowed_types": ["Wind Turbine"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_wind_turbine"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_On"], "terminal_path": ["Terminal", "Wind Turbine", "On/Off"], "modapi_calls": [{"interface": "IMyPowerProducer", "property": "Enabled", "method": "set_Enabled(true)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Wind turbine must exist", "Wind turbine must be functional", "Must be on planet with atmosphere and wind", "Clearance area must be free", "User must have control authority"], "effects": ["WindTurbine.Enabled = true", "Wind power generation begins", "Turbine blades start rotating", "Grid power increases"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_wind_turbine(target)", "check_block_functional(target)", "check_atmosphere_and_wind()", "check_turbine_clearance(target)", "check_user_authority(target)"], "error_cases": [{"condition": "wind_turbine_not_found", "message": "No wind turbines matching '{target}' found", "recovery": "List available wind turbines"}, {"condition": "no_atmosphere", "message": "No atmosphere for wind power at current location", "recovery": "Wind turbines only work on planets with atmosphere"}, {"condition": "insufficient_wind", "message": "Insufficient wind for power generation", "recovery": "Wind conditions too calm for turbine operation"}, {"condition": "clearance_blocked", "message": "Wind turbine '{target}' clearance area is blocked", "recovery": "Ensure 50m clearance around turbine blades"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "start wind farm", "parsed": {"verb": "start_wind_turbine", "target": {"name": "wind farm"}}}, {"input": "turn on all wind turbines", "parsed": {"verb": "start_wind_turbine", "target": {"type": "wind_turbine", "selector": "all"}}}], "synonyms": ["turn on wind power", "enable wind turbine", "wind power on"], "tags": ["power_management", "wind", "renewable", "atmospheric"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/", "sections": ["Wind Turbine"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.stop_wind_turbine.wind.v1", "title": "Stop wind turbine", "category": "power_management", "verb": "stop_wind_turbine", "natural_language_triggers": ["stop wind turbine", "turn off wind power", "disable wind turbine", "wind power off"], "targets": {"allowed_types": ["Wind Turbine"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_wind_turbine"}, "parameters": [], "se_implementation": {"toolbar_actions": ["OnOff_Off"], "terminal_path": ["Terminal", "Wind Turbine", "On/Off"], "modapi_calls": [{"interface": "IMyPowerProducer", "property": "Enabled", "method": "set_Enabled(false)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Wind turbine must exist", "User must have control authority"], "effects": ["WindTurbine.Enabled = false", "Wind power generation stops", "Turbine blades stop rotating", "Grid power decreases"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_type_wind_turbine(target)", "check_user_authority(target)"], "error_cases": [{"condition": "wind_turbine_not_found", "message": "No wind turbines matching '{target}' found", "recovery": "List available wind turbines"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "stop wind turbine 1", "parsed": {"verb": "stop_wind_turbine", "target": {"name": "wind turbine 1"}}}], "synonyms": ["turn off wind power", "disable wind turbine", "wind power off"], "tags": ["power_management", "wind", "shutdown"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/", "sections": ["Wind Turbine"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}