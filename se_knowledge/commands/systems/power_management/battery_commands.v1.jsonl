{"id": "power.set_battery_auto.battery.v1", "title": "Set battery to automatic mode", "category": "power_management", "verb": "set_battery_auto", "natural_language_triggers": ["set battery auto", "battery auto mode", "automatic battery", "smart battery mode", "battery automatic"], "targets": {"allowed_types": ["Battery", "Small Battery", "Prototech Battery", "Warfare Battery"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_battery"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Auto"], "terminal_path": ["Terminal", "Battery", "Charge Mode", "Auto"], "modapi_calls": [{"interface": "IMyBatteryBlock", "property": "ChargeMode", "method": "set_ChargeMode(ChargeMode.Auto)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Battery must exist", "Battery must be functional", "User must have control authority"], "effects": ["Battery.ChargeMode = Auto", "Battery charges with excess power", "Battery discharges when grid needs power", "Optimal power management"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_battery(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "battery_not_found", "message": "No batteries matching '{target}' found", "recovery": "List available batteries"}, {"condition": "battery_not_functional", "message": "Battery '{target}' is not functional", "recovery": "Check battery condition and connections"}, {"condition": "no_authority", "message": "No permission to control '{target}'", "recovery": "Check ownership/faction"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set all batteries to auto", "parsed": {"verb": "set_battery_auto", "target": {"type": "battery", "selector": "all"}}}, {"input": "battery auto mode", "parsed": {"verb": "set_battery_auto", "target": {"type": "battery", "selector": "all"}}}], "synonyms": ["battery auto mode", "automatic battery", "smart battery mode", "battery automatic"], "tags": ["power_management", "battery", "automatic", "optimal"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Battery__part-001.md", "sections": ["Usage", "Charge Mode"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.set_battery_recharge.battery.v1", "title": "Set battery to recharge mode", "category": "power_management", "verb": "set_battery_recharge", "natural_language_triggers": ["set battery recharge", "battery recharge mode", "charge battery", "recharge battery", "battery charge only"], "targets": {"allowed_types": ["Battery", "Small Battery", "Prototech Battery", "Warfare Battery"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_battery"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Recharge"], "terminal_path": ["Terminal", "Battery", "Charge Mode", "Recharge"], "modapi_calls": [{"interface": "IMyBatteryBlock", "property": "ChargeMode", "method": "set_ChargeMode(ChargeMode.Recharge)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Battery must exist", "Battery must be functional", "Power source must be available", "User must have control authority"], "effects": ["Battery.ChargeMode = Recharge", "Battery actively draws power", "Battery stops providing power to grid", "Battery fills from other power sources"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_battery(target)", "check_block_functional(target)", "check_power_available(grid)", "check_user_authority(target)"], "error_cases": [{"condition": "battery_not_found", "message": "No batteries matching '{target}' found", "recovery": "List available batteries"}, {"condition": "no_power_source", "message": "No power source available to charge '{target}'", "recovery": "Check reactors, solar panels, or other power sources"}, {"condition": "battery_full", "message": "Battery '{target}' is already fully charged", "recovery": "Battery doesn't need charging"}], "safety_class": "caution", "idempotent": true, "reversible": true, "examples": [{"input": "charge backup battery", "parsed": {"verb": "set_battery_recharge", "target": {"name": "backup battery"}}}, {"input": "recharge all batteries", "parsed": {"verb": "set_battery_recharge", "target": {"type": "battery", "selector": "all"}}}], "synonyms": ["battery recharge mode", "charge battery", "recharge battery", "battery charge only"], "tags": ["power_management", "battery", "charging", "recharge"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Battery__part-001.md", "sections": ["Usage", "Charge Mode"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.set_battery_discharge.battery.v1", "title": "Set battery to discharge mode", "category": "power_management", "verb": "set_battery_discharge", "natural_language_triggers": ["set battery discharge", "battery discharge mode", "drain battery", "discharge battery", "battery provide only"], "targets": {"allowed_types": ["Battery", "Small Battery", "Prototech Battery", "Warfare Battery"], "allowed_selectors": ["by_name", "by_group", "by_type", "all"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_battery"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Discharge"], "terminal_path": ["Terminal", "Battery", "Charge Mode", "Discharge"], "modapi_calls": [{"interface": "IMyBatteryBlock", "property": "ChargeMode", "method": "set_ChargeMode(ChargeMode.Discharge)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Battery must exist", "Battery must be functional", "Battery must have charge to discharge", "User must have control authority"], "effects": ["Battery.ChargeMode = Discharge", "Battery provides power to grid", "Battery stops trying to recharge", "Battery charge depletes over time"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_type_battery(target)", "check_block_functional(target)", "check_battery_has_charge(target)", "check_user_authority(target)"], "error_cases": [{"condition": "battery_not_found", "message": "No batteries matching '{target}' found", "recovery": "List available batteries"}, {"condition": "battery_empty", "message": "Battery '{target}' has no charge to discharge", "recovery": "Charge the battery first"}, {"condition": "battery_not_functional", "message": "Battery '{target}' is not functional", "recovery": "Check battery condition"}], "safety_class": "caution", "idempotent": true, "reversible": true, "examples": [{"input": "discharge old battery", "parsed": {"verb": "set_battery_discharge", "target": {"name": "old battery"}}}, {"input": "drain emergency batteries", "parsed": {"verb": "set_battery_discharge", "target": {"name": "emergency batteries"}}}], "synonyms": ["battery discharge mode", "drain battery", "discharge battery", "battery provide only"], "tags": ["power_management", "battery", "discharging", "drain"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Battery__part-001.md", "sections": ["Usage", "Charge Mode"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.get_battery_level.battery.v1", "title": "Get battery charge level", "category": "power_management", "verb": "get_battery_level", "natural_language_triggers": ["get battery level", "check battery charge", "battery status", "how much charge", "battery percentage"], "targets": {"allowed_types": ["Battery", "Small Battery", "Prototech Battery", "Warfare Battery"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_battery"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Battery", "Stored Power"], "modapi_calls": [{"interface": "IMyBatteryBlock", "property": "CurrentStoredPower", "method": "get_CurrentStoredPower()"}, {"interface": "IMyBatteryBlock", "property": "MaxStoredPower", "method": "get_MaxStoredPower()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Battery must exist", "User must have view authority"], "effects": ["Returns battery charge percentage", "Returns stored power amount", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_battery(target)", "check_view_authority(target)"], "error_cases": [{"condition": "battery_not_found", "message": "No batteries matching '{target}' found", "recovery": "List available batteries"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check main battery level", "parsed": {"verb": "get_battery_level", "target": {"name": "main battery"}}}, {"input": "battery status", "parsed": {"verb": "get_battery_level", "target": {"type": "battery", "selector": "all"}}}], "synonyms": ["check battery charge", "battery status", "how much charge", "battery percentage"], "tags": ["power_management", "monitoring", "battery", "information"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBatteryBlock.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.get_battery_mode.battery.v1", "title": "Get battery charge mode", "category": "power_management", "verb": "get_battery_mode", "natural_language_triggers": ["get battery mode", "check charge mode", "what mode is battery", "battery mode status"], "targets": {"allowed_types": ["Battery", "Small Battery", "Prototech Battery", "Warfare Battery"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_battery"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Battery", "Charge Mode"], "modapi_calls": [{"interface": "IMyBatteryBlock", "property": "ChargeMode", "method": "get_ChargeMode()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Battery must exist", "User must have view authority"], "effects": ["Returns current charge mode", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 2}, "validation_hooks": ["check_block_exists(target)", "check_block_type_battery(target)", "check_view_authority(target)"], "error_cases": [{"condition": "battery_not_found", "message": "No batteries matching '{target}' found", "recovery": "List available batteries"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "check backup battery mode", "parsed": {"verb": "get_battery_mode", "target": {"name": "backup battery"}}}], "synonyms": ["check charge mode", "what mode is battery", "battery mode status"], "tags": ["power_management", "monitoring", "battery", "mode"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBatteryBlock.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.toggle_battery_recharge.battery.v1", "title": "Toggle battery recharge on/off", "category": "power_management", "verb": "toggle_battery_recharge", "natural_language_triggers": ["toggle recharge", "toggle battery charging", "switch battery recharge", "flip charging mode"], "targets": {"allowed_types": ["Battery", "Small Battery", "Prototech Battery", "Warfare Battery"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_battery"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Recharge"], "terminal_path": ["Terminal", "Battery", "Recharge On/Off"], "modapi_calls": [{"interface": "IMyBatteryBlock", "method": "toggle_recharge()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Battery must exist", "Battery must be functional", "User must have control authority"], "effects": ["Battery recharge mode toggles", "Switches between Recharge and previous mode"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 6}, "validation_hooks": ["check_block_exists(target)", "check_block_type_battery(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "battery_not_found", "message": "No batteries matching '{target}' found", "recovery": "List available batteries"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "toggle recharge on emergency battery", "parsed": {"verb": "toggle_battery_recharge", "target": {"name": "emergency battery"}}}], "synonyms": ["toggle battery charging", "switch battery recharge", "flip charging mode"], "tags": ["power_management", "battery", "toggle", "recharge"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Battery__part-001.md", "sections": ["Toolbar Controls"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "power.toggle_battery_discharge.battery.v1", "title": "Toggle battery discharge on/off", "category": "power_management", "verb": "toggle_battery_discharge", "natural_language_triggers": ["toggle discharge", "toggle battery drain", "switch battery discharge", "flip discharge mode"], "targets": {"allowed_types": ["Battery", "Small Battery", "Prototech Battery", "Warfare Battery"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_battery"}, "parameters": [], "se_implementation": {"toolbar_actions": ["Discharge"], "terminal_path": ["Terminal", "Battery", "Discharge On/Off"], "modapi_calls": [{"interface": "IMyBatteryBlock", "method": "toggle_discharge()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Battery must exist", "Battery must be functional", "User must have control authority"], "effects": ["Battery discharge mode toggles", "Switches between Discharge and previous mode"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 6}, "validation_hooks": ["check_block_exists(target)", "check_block_type_battery(target)", "check_block_functional(target)", "check_user_authority(target)"], "error_cases": [{"condition": "battery_not_found", "message": "No batteries matching '{target}' found", "recovery": "List available batteries"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "toggle discharge on old battery", "parsed": {"verb": "toggle_battery_discharge", "target": {"name": "old battery"}}}], "synonyms": ["toggle battery drain", "switch battery discharge", "flip discharge mode"], "tags": ["power_management", "battery", "toggle", "discharge"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Battery__part-001.md", "sections": ["Toolbar Controls"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}