{"id": "universal.increase_property.any_block.v1", "title": "Increase numerical property of block", "category": "universal", "verb": "increase", "natural_language_triggers": ["increase", "raise", "boost", "up", "higher", "more"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_have_increasable_property"}, "parameters": [{"name": "property", "type": "property_name", "required": false, "default": "contextual", "validation": "property_exists_and_increasable"}, {"name": "amount", "type": "float", "required": false, "default": 1.0, "validation": "positive_number"}], "se_implementation": {"toolbar_actions": ["Increase*"], "terminal_path": ["Terminal", "Property", "Increase"], "modapi_calls": [{"interface": "varies", "method": "increase_property(amount)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Block must exist", "Block must have increasable property", "Property must not be at maximum"], "effects": ["Property value increases", "Block behavior changes accordingly"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_property_increasable(target, property)", "check_not_at_maximum(target, property)"], "error_cases": [{"condition": "property_at_maximum", "message": "Property '{property}' already at maximum for '{target}'", "recovery": "Check current value"}, {"condition": "no_increasable_property", "message": "Block '{target}' has no increasable properties", "recovery": "List available properties"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "increase reactor output", "parsed": {"verb": "increase", "target": {"type": "reactor"}, "parameters": {"property": "output"}}}], "synonyms": ["raise", "boost", "up", "higher", "more", "amplify"], "tags": ["universal", "adjustment", "numerical"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Toolbar Controls"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.decrease_property.any_block.v1", "title": "Decrease numerical property of block", "category": "universal", "verb": "decrease", "natural_language_triggers": ["decrease", "lower", "reduce", "down", "less", "minimize"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_have_decreasable_property"}, "parameters": [{"name": "property", "type": "property_name", "required": false, "default": "contextual", "validation": "property_exists_and_decreasable"}, {"name": "amount", "type": "float", "required": false, "default": 1.0, "validation": "positive_number"}], "se_implementation": {"toolbar_actions": ["Decrease*"], "terminal_path": ["Terminal", "Property", "Decrease"], "modapi_calls": [{"interface": "varies", "method": "decrease_property(amount)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Block must exist", "Block must have decreasable property", "Property must not be at minimum"], "effects": ["Property value decreases", "Block behavior changes accordingly"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_property_decreasable(target, property)", "check_not_at_minimum(target, property)"], "error_cases": [{"condition": "property_at_minimum", "message": "Property '{property}' already at minimum for '{target}'", "recovery": "Check current value"}, {"condition": "no_decreasable_property", "message": "Block '{target}' has no decreasable properties", "recovery": "List available properties"}], "safety_class": "safe", "idempotent": false, "reversible": true, "examples": [{"input": "decrease thruster power", "parsed": {"verb": "decrease", "target": {"type": "thruster"}, "parameters": {"property": "power"}}}], "synonyms": ["lower", "reduce", "down", "less", "minimize", "diminish"], "tags": ["universal", "adjustment", "numerical"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Toolbar Controls"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.reset_property.any_block.v1", "title": "Reset block property to default", "category": "universal", "verb": "reset", "natural_language_triggers": ["reset", "clear", "default", "restore", "initialize"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_have_resettable_property"}, "parameters": [{"name": "property", "type": "property_name", "required": false, "default": "all", "validation": "property_exists_and_resettable"}], "se_implementation": {"toolbar_actions": ["Reset*"], "terminal_path": ["Terminal", "Property", "Reset"], "modapi_calls": [{"interface": "varies", "method": "reset_property()"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": true}, "preconditions": ["Block must exist", "Block must have resettable property", "User must have control authority"], "effects": ["Property value returns to default", "Block behavior resets"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_property_resettable(target, property)", "check_user_authority(target)"], "error_cases": [{"condition": "no_resettable_property", "message": "Block '{target}' has no resettable properties", "recovery": "List available properties"}, {"condition": "property_not_resettable", "message": "Property '{property}' cannot be reset on '{target}'", "recovery": "Check property documentation"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "reset gyro settings", "parsed": {"verb": "reset", "target": {"type": "gyro"}}}], "synonyms": ["clear", "default", "restore", "initialize"], "tags": ["universal", "reset", "default"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Utility/", "sections": ["Toolbar Controls"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.set_custom_name.any_block.v1", "title": "Set custom name for block", "category": "universal", "verb": "set_custom_name", "natural_language_triggers": ["set name", "rename", "change name", "call it", "name it"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": false, "target_validation": "must_be_terminal_block"}, "parameters": [{"name": "name", "type": "text", "max_length": 100, "required": true, "validation": "text_cleanup"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Control", "Name"], "modapi_calls": [{"interface": "IMyTerminalBlock", "property": "CustomName", "method": "set_CustomName(string)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Block must exist", "Block must be terminal block", "Name must not be empty", "User must have control authority"], "effects": ["Block.CustomName = name", "Block displays new name", "References update"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 5}, "validation_hooks": ["check_block_exists(target)", "check_block_is_terminal(target)", "validate_name_format(name)", "check_user_authority(target)"], "error_cases": [{"condition": "name_too_long", "message": "Name exceeds 100 character limit", "recovery": "Shorten the name"}, {"condition": "name_empty", "message": "Name cannot be empty", "recovery": "Provide a valid name"}, {"condition": "invalid_characters", "message": "Name contains invalid characters", "recovery": "Use alphanumeric and basic symbols"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "rename reactor to Main Power", "parsed": {"verb": "set_custom_name", "target": {"name": "reactor"}, "parameters": {"name": "Main Power"}}}], "synonyms": ["rename", "change name", "call it", "name it"], "tags": ["universal", "naming", "organization"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTerminalBlock.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.set_custom_data.any_block.v1", "title": "Set custom data for block", "category": "universal", "verb": "set_custom_data", "natural_language_triggers": ["set data", "set custom data", "store data", "write data"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_terminal_block"}, "parameters": [{"name": "data", "type": "text", "max_length": 10000, "required": true, "validation": "text_data"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Control", "Custom Data"], "modapi_calls": [{"interface": "IMyTerminalBlock", "property": "CustomData", "method": "set_CustomData(string)"}], "group_compatible": true, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Block must exist", "Block must be terminal block", "User must have control authority"], "effects": ["Block.CustomData = data", "Data stored for scripts/mods", "Persistent across sessions"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 1, "instruction_cost": 3}, "validation_hooks": ["check_block_exists(target)", "check_block_is_terminal(target)", "validate_data_size(data)", "check_user_authority(target)"], "error_cases": [{"condition": "data_too_large", "message": "Custom data exceeds 10,000 character limit", "recovery": "Reduce data size"}, {"condition": "no_authority", "message": "No permission to modify custom data", "recovery": "Check ownership"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "set data for computer to config:mining", "parsed": {"verb": "set_custom_data", "target": {"name": "computer"}, "parameters": {"data": "config:mining"}}}], "synonyms": ["store data", "write data", "save data"], "tags": ["universal", "data", "configuration", "scripting"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTerminalBlock.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.get_status.any_block.v1", "title": "Get status information for block", "category": "universal", "verb": "get_status", "natural_language_triggers": ["get status", "status", "check status", "info", "information"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_terminal_block"}, "parameters": [], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Info"], "modapi_calls": [{"interface": "IMyTerminalBlock", "property": "DetailedInfo", "method": "get_DetailedInfo()"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Block must exist", "Block must be terminal block", "User must have control authority"], "effects": ["Returns block status information", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 1, "instruction_cost": 1}, "validation_hooks": ["check_block_exists(target)", "check_block_is_terminal(target)", "check_view_authority(target)"], "error_cases": [{"condition": "block_not_found", "message": "No blocks matching '{target}' found", "recovery": "List available blocks"}, {"condition": "no_view_access", "message": "No permission to view status of '{target}'", "recovery": "Check ownership"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "get status of reactor", "parsed": {"verb": "get_status", "target": {"name": "reactor"}}}], "synonyms": ["status", "check status", "info", "information"], "tags": ["universal", "information", "status", "query"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyTerminalBlock.md", "sections": ["Properties"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.list_blocks.grid.v1", "title": "List all blocks of specified type", "category": "universal", "verb": "list_blocks", "natural_language_triggers": ["list", "show", "find", "get all", "what blocks"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_type", "by_zone", "all"], "grid_scope": ["current", "connected", "subgrids"], "multi_target": true, "target_validation": "block_type_exists"}, "parameters": [{"name": "filter", "type": "text", "required": false, "default": "all", "validation": "filter_format"}], "se_implementation": {"toolbar_actions": [], "terminal_path": [], "modapi_calls": [{"interface": "IMyGridTerminalSystem", "method": "GetBlocksOfType<T>()"}], "group_compatible": false, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Grid must exist", "User must have view access"], "effects": ["Returns list of matching blocks", "No state change"], "constraints": {"power_required_mw": 0, "network_sync": false, "multiplayer_authority": "view_access", "execution_time_ms": 10, "instruction_cost": 2}, "validation_hooks": ["check_grid_access()", "validate_block_type(target)", "check_view_authority()"], "error_cases": [{"condition": "no_blocks_found", "message": "No blocks of type '{target}' found", "recovery": "Check grid or expand search"}, {"condition": "invalid_type", "message": "Unknown block type '{target}'", "recovery": "List valid block types"}], "safety_class": "safe", "idempotent": true, "reversible": false, "examples": [{"input": "list all batteries", "parsed": {"verb": "list_blocks", "target": {"type": "batteries"}}}], "synonyms": ["show", "find", "get all", "what blocks"], "tags": ["universal", "query", "inventory", "discovery"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyGridTerminalSystem.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.add_to_group.any_block.v1", "title": "Add block to group", "category": "universal", "verb": "add_to_group", "natural_language_triggers": ["add to group", "group with", "include in", "join group"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_terminal_block"}, "parameters": [{"name": "group_name", "type": "text", "required": true, "validation": "group_name_format"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Groups"], "modapi_calls": [{"interface": "IMyBlockGroup", "method": "AddBlock(IMyTerminalBlock)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Block must exist", "Block must be terminal block", "User must have control authority"], "effects": ["Block added to specified group", "Group operations now include this block"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_is_terminal(target)", "validate_group_name(group_name)", "check_user_authority(target)"], "error_cases": [{"condition": "group_not_found", "message": "Group '{group_name}' does not exist", "recovery": "Create group first or check name"}, {"condition": "already_in_group", "message": "Block '{target}' already in group '{group_name}'", "recovery": "Block already grouped"}, {"condition": "group_full", "message": "Group '{group_name}' is full", "recovery": "Remove other blocks or create new group"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "add reactor to power group", "parsed": {"verb": "add_to_group", "target": {"name": "reactor"}, "parameters": {"group_name": "power"}}}], "synonyms": ["group with", "include in", "join group"], "tags": ["universal", "organization", "grouping"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBlockGroup.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.remove_from_group.any_block.v1", "title": "Remove block from group", "category": "universal", "verb": "remove_from_group", "natural_language_triggers": ["remove from group", "ungroup", "exclude from", "leave group"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_terminal_block"}, "parameters": [{"name": "group_name", "type": "text", "required": true, "validation": "group_name_format"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Groups"], "modapi_calls": [{"interface": "IMyBlockGroup", "method": "RemoveBlock(IMyTerminalBlock)"}], "group_compatible": false, "timer_compatible": true, "event_controller_compatible": false}, "preconditions": ["Block must exist", "Block must be terminal block", "Block must be in specified group", "User must have control authority"], "effects": ["Block removed from specified group", "Group operations no longer include this block"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 5, "instruction_cost": 8}, "validation_hooks": ["check_block_exists(target)", "check_block_is_terminal(target)", "check_block_in_group(target, group_name)", "check_user_authority(target)"], "error_cases": [{"condition": "group_not_found", "message": "Group '{group_name}' does not exist", "recovery": "Check group name"}, {"condition": "not_in_group", "message": "Block '{target}' is not in group '{group_name}'", "recovery": "Block not in specified group"}, {"condition": "cannot_remove", "message": "Cannot remove '{target}' from group '{group_name}'", "recovery": "Check group permissions"}], "safety_class": "safe", "idempotent": true, "reversible": true, "examples": [{"input": "remove old reactor from power group", "parsed": {"verb": "remove_from_group", "target": {"name": "old reactor"}, "parameters": {"group_name": "power"}}}], "synonyms": ["ungroup", "exclude from", "leave group"], "tags": ["universal", "organization", "grouping"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyBlockGroup.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.copy_settings.any_block.v1", "title": "Copy settings from one block to another", "category": "universal", "verb": "copy_settings", "natural_language_triggers": ["copy settings", "copy from", "clone settings", "duplicate config"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_terminal_block"}, "parameters": [{"name": "source_block", "type": "block_reference", "required": true, "validation": "block_exists"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Control", "Copy/Paste"], "modapi_calls": [{"interface": "IMyTerminalBlock", "method": "CopyPaste.Apply(source, target)"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Source block must exist", "Target block must exist", "Blocks must be compatible types", "User must have control authority"], "effects": ["Target block properties copied from source", "Target block behavior matches source"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "owner_or_admin", "execution_time_ms": 10, "instruction_cost": 15}, "validation_hooks": ["check_block_exists(source_block)", "check_block_exists(target)", "check_blocks_compatible(source, target)", "check_user_authority(target)"], "error_cases": [{"condition": "blocks_incompatible", "message": "Cannot copy settings from '{source_block}' to '{target}' - incompatible types", "recovery": "Use blocks of same or compatible types"}, {"condition": "source_not_found", "message": "Source block '{source_block}' not found", "recovery": "Check source block name"}], "safety_class": "safe", "idempotent": false, "reversible": false, "examples": [{"input": "copy settings from Main Battery to all batteries", "parsed": {"verb": "copy_settings", "target": {"type": "batteries", "selector": "all"}, "parameters": {"source_block": "Main Battery"}}}], "synonyms": ["copy from", "clone settings", "duplicate config"], "tags": ["universal", "configuration", "automation"], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/", "sections": ["Copy/Paste"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}
{"id": "universal.set_ownership.any_block.v1", "title": "Set ownership of block", "category": "universal", "verb": "set_ownership", "natural_language_triggers": ["set owner", "transfer ownership", "claim", "own"], "targets": {"allowed_types": ["*"], "allowed_selectors": ["by_name", "by_group", "by_type"], "grid_scope": ["current", "connected"], "multi_target": true, "target_validation": "must_be_terminal_block"}, "parameters": [{"name": "owner", "type": "player_name", "required": false, "default": "current_player", "validation": "player_exists"}, {"name": "share_mode", "type": "enum", "values": ["None", "Faction", "All"], "required": false, "default": "Faction", "validation": "share_mode_valid"}], "se_implementation": {"toolbar_actions": [], "terminal_path": ["Terminal", "Control", "Ownership"], "modapi_calls": [{"interface": "IMyCubeBlock", "method": "ChangeOwner(playerId, shareMode)"}], "group_compatible": true, "timer_compatible": false, "event_controller_compatible": false}, "preconditions": ["Block must exist", "Block must be terminal block", "User must be admin or current owner"], "effects": ["Block ownership transfers", "Access permissions change", "Faction sharing updates"], "constraints": {"power_required_mw": 0, "network_sync": true, "multiplayer_authority": "admin_or_owner", "execution_time_ms": 5, "instruction_cost": 10}, "validation_hooks": ["check_block_exists(target)", "check_block_is_terminal(target)", "check_ownership_authority(target)", "validate_player_exists(owner)"], "error_cases": [{"condition": "no_authority", "message": "No permission to change ownership of '{target}'", "recovery": "Must be admin or owner"}, {"condition": "player_not_found", "message": "Player '{owner}' not found", "recovery": "Check player name spelling"}, {"condition": "cannot_transfer", "message": "Cannot transfer ownership of '{target}'", "recovery": "Some blocks cannot be transferred"}], "safety_class": "restricted", "idempotent": true, "reversible": true, "examples": [{"input": "set owner of reactor to PlayerName", "parsed": {"verb": "set_ownership", "target": {"name": "reactor"}, "parameters": {"owner": "PlayerName"}}}], "synonyms": ["transfer ownership", "claim", "own"], "tags": ["universal", "ownership", "permissions", "admin"], "sources": [{"type": "ModAPI", "path": "docs_chunked(ModAPI)/Misc/IMyCubeBlock.md", "sections": ["Methods"]}], "version": {"schema": "1.0", "command_version": "1.0.0", "last_validated": "2024-01-XX"}}