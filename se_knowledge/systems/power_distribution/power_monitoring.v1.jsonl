{"id": "power_distribution.power_monitoring.automated_systems.v1", "category": "power_distribution", "priority": "system", "token_count": 1196, "blocks": ["Event Controller", "Sensor", "Timer Block"], "interfaces": ["IMyEventController", "IMySensorBlock"], "terminal_actions": ["Monitor Power Output", "Monitor Stored Power", "Set up Actions"], "properties": [{"name": "PowerOutputPercentage", "type": "float", "range": "0-100", "units": "percent", "terminal_name": "Power Output %"}, {"name": "StoredPowerPercentage", "type": "float", "range": "0-100", "units": "percent", "terminal_name": "Stored Power %"}], "commands": [{"syntax": "Monitor Power Output", "parameters": ["power_sources"], "example": "Event Controller monitors reactor/solar/wind output"}, {"syntax": "Monitor Stored Power", "parameters": ["batteries"], "example": "Event Controller monitors battery charge levels"}, {"syntax": "Power Emergency Response", "parameters": ["threshold", "actions"], "example": "Trigger actions when power critical"}], "automation_patterns": [{"pattern": "Power Level Monitoring", "blocks_required": ["Event Controller", "Battery", "Timer Block"], "setup": ["Event Controller monitors Stored Power Percentage", "Trigger warnings when power drops below threshold", "Activate backup power systems automatically", "Alert crew to power emergencies"], "toolbar_actions": ["Power monitoring triggers"]}, {"pattern": "Reactor Automation", "blocks_required": ["Event Controller", "Reactor", "Battery"], "setup": ["Monitor battery levels with Event Controller", "Start reactors when batteries below 25%", "Stop reactors when batteries above 75%", "Conserve uranium fuel automatically"], "toolbar_actions": ["Reactor automation"]}, {"pattern": "Power Output Monitoring", "blocks_required": ["Event Controller", "Power Sources"], "setup": ["Monitor Power Output Percentage of generators", "Detect when solar/wind production drops", "Switch to backup power automatically", "Optimize power source usage"], "toolbar_actions": ["Output monitoring"]}, {"pattern": "Emergency Power Systems", "blocks_required": ["Event Controller", "Emergency Power", "Critical Systems"], "setup": ["Detect power emergencies", "Shut down non-critical systems", "Activate emergency power sources", "Preserve life support and propulsion"], "toolbar_actions": ["Emergency systems"]}], "constraints": {"grid_types": ["small", "large", "station"], "environment": ["space", "atmosphere", "planet"], "power_consumption_mw": 0.001, "pcu_cost": 35, "dependencies": ["automation_blocks"], "limits": {"max_range_m": 0, "max_speed_ms": 0, "instruction_cost": 0}}, "validation_rules": ["Event Controllers monitor same/connected grids only", "Power Output events: monitor generator output percentage", "Stored Power events: monitor battery charge percentage", "Threshold-based triggering (equal/greater/less than)", "AND/OR gate logic for multiple power sources", "Timer delays for power system response"], "common_failures": [{"error": "Power monitoring not working", "cause": "Event Controller not monitoring correct blocks", "solution": "Add power sources/batteries to Event Controller monitoring list"}, {"error": "False power alerts", "cause": "Wrong threshold or AND/OR gate setting", "solution": "Adjust threshold values and gate logic settings"}, {"error": "Emergency systems not activating", "cause": "Event Controller conditions not met", "solution": "Verify power threshold settings and action configuration"}], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Event_Controller__part-001.md", "sections": ["Power Events"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Event_Controller__part-002.md", "sections": ["Power Monitoring"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Timer_Block__part-001.md", "sections": ["Power Actions"]}], "tags": ["monitoring", "automation", "power_output", "stored_power", "emergency", "threshold"], "version": {"schema": "1.0", "created": "2024-01-19", "completeness": "complete"}}
{"id": "power_distribution.priority_systems.load_management.v1", "category": "power_distribution", "priority": "system", "token_count": 1198, "blocks": ["All Power Sources", "All Power Consumers"], "interfaces": ["IMyPowerProducer"], "terminal_actions": ["OnOff", "Power Priority Management"], "properties": [{"name": "CurrentOutput", "type": "float", "range": "0+", "units": "MW", "terminal_name": "Current Output"}, {"name": "MaxOutput", "type": "float", "range": "source_specific", "units": "MW", "terminal_name": "Max Output"}], "commands": [{"syntax": "Power Priority Control", "parameters": ["source_priority"], "example": "Manage Solar/Wind → Battery → Reactor priority"}, {"syntax": "Load Shedding", "parameters": ["non_critical_systems"], "example": "Disable non-essential systems during power shortage"}, {"syntax": "Power Source Coordination", "parameters": ["multiple_sources"], "example": "Coordinate multiple power sources efficiently"}], "automation_patterns": [{"pattern": "Automatic Power Priority", "blocks_required": ["Solar Panel", "Wind Turbine", "Battery", "Reactor"], "setup": ["Built-in priority: Solar/Wind highest priority", "Batteries: medium priority", "Reactors: lowest priority (fuel conservation)", "Hydrogen engines have no priority over solar/wind"], "toolbar_actions": ["Source management"]}, {"pattern": "Load Management", "blocks_required": ["Event Controller", "Power Consumers", "Groups"], "setup": ["Group non-critical systems", "Monitor total power consumption", "Disable groups when power insufficient", "Prioritize essential systems"], "toolbar_actions": ["Load shedding"]}, {"pattern": "Fuel Conservation", "blocks_required": ["Event Controller", "Reactor", "Battery"], "setup": ["Monitor battery charge levels", "Disable reactors when batteries sufficient", "Enable reactors only when critically low", "Maximize renewable power usage"], "toolbar_actions": ["Fuel conservation"]}, {"pattern": "Power Surge Protection", "blocks_required": ["Event Controller", "Power Sources", "Critical Systems"], "setup": ["Monitor power output and consumption", "Detect power surges or shortages", "Protect critical systems from power loss", "Implement graceful degradation"], "toolbar_actions": ["Surge protection"]}], "constraints": {"grid_types": ["small", "large", "station"], "environment": ["space", "atmosphere", "planet"], "power_consumption_mw": 0.0, "pcu_cost": 0, "dependencies": ["power_grid"], "limits": {"max_range_m": 0, "max_speed_ms": 0, "instruction_cost": 0}}, "validation_rules": ["Built-in power priority system", "Solar/Wind power has highest priority", "Batteries have medium priority", "Reactors/Hydrogen have lowest priority", "Power automatically scales to demand", "No cables needed - touching blocks share power", "Creative Mode: infinite charge, limited throughput"], "common_failures": [{"error": "Reactors consuming fuel unnecessarily", "cause": "Grid demand exceeds renewable+battery capacity", "solution": "Add more solar/wind/batteries or use automation to manage reactors"}, {"error": "Power shortage despite sources", "cause": "Sources disabled or insufficient total capacity", "solution": "Check all power sources enabled and add capacity if needed"}, {"error": "Grid power instability", "cause": "Competing power management automation", "solution": "Coordinate automation systems to avoid conflicts"}], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Power__part-001.md", "sections": ["Power Comparison", "Power Usage"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Power/Battery__part-002.md", "sections": ["Power Priority"]}, {"type": "SEWiki", "path": "docs_chunked(SEWiki)/Flight/Cockpit_Controls__part-001.md", "sections": ["Power Toggle"]}], "tags": ["priority", "load", "management", "sources", "consumers", "automation", "conservation"], "version": {"schema": "1.0", "created": "2024-01-19", "completeness": "complete"}}