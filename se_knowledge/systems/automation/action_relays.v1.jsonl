{"id": "automation.action_relays.remote_triggers.v1", "category": "automation", "priority": "system", "token_count": 1089, "blocks": ["Action Relay"], "interfaces": [], "terminal_actions": ["Set Up Actions", "Send Signal"], "properties": [{"name": "Channel", "type": "int", "range": "1-100", "units": "none", "terminal_name": "Channel"}, {"name": "AcceptSignalFrom", "type": "enum", "range": "Owner|Faction|All", "units": "none", "terminal_name": "Accept Signal From"}], "commands": [{"syntax": "Send Signal", "parameters": [], "example": "Manually send signal on configured channel"}, {"syntax": "Set Up Actions", "parameters": ["local_actions"], "example": "Configure actions to execute when signal received"}, {"syntax": "Set Channel", "parameters": ["channel_number"], "example": "Set channel number 1-100 for signal transmission"}], "automation_patterns": [{"pattern": "Remote Grid Control", "blocks_required": ["Action Relay", "Antenna", "Target Grid with Action Relay"], "setup": ["Build Action Relay on sending grid", "Build Action Relay on receiving grid", "Set same channel number on both", "Configure actions on receiving relay", "Ensure antenna range covers target"], "toolbar_actions": ["Send Signal", "Set Up Actions"]}, {"pattern": "Drone Recall System", "blocks_required": ["Action Relay", "Antenna", "Drone with Action Relay"], "setup": ["Install Action Relay on mothership and drones", "Configure drone recall actions (return to dock)", "Set faction-only access for security", "Use Send Signal to recall all drones"], "toolbar_actions": ["Send Signal"]}, {"pattern": "Base Coordination", "blocks_required": ["Multiple Action Relays", "Antenna Network"], "setup": ["Install relays on different base sections", "Use channels to target specific systems", "Configure security access (Owner/Faction/All)", "Coordinate complex base operations remotely"], "toolbar_actions": ["Send Signal", "Set Up Actions"]}], "constraints": {"grid_types": ["small", "large", "station"], "environment": ["space", "atmosphere", "planet"], "power_consumption_mw": 0.0005, "pcu_cost": 25, "dependencies": ["antenna", "power_supply"], "limits": {"max_range_m": "antenna_dependent", "max_speed_ms": 0, "instruction_cost": 0}}, "validation_rules": ["Requires antenna on both sending and receiving grids", "Channel range: 1-100", "Signal range limited by antenna coverage", "Can trigger any toolbar action on receiving grid", "Security filtering by ownership/faction", "One action set per Action Relay block", "Actions stored in Timer Blocks for complexity"], "common_failures": [{"error": "Signal not received", "cause": "No antenna or insufficient range", "solution": "Ensure both grids have antennas with adequate range"}, {"error": "Unauthorized signals", "cause": "Wrong Accept Signal From setting", "solution": "Set appropriate security level (Owner/Faction/All)"}, {"error": "Actions not triggering", "cause": "No actions configured on receiving relay", "solution": "Configure actions in receiving Action Relay's Set Up Actions"}], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Action_Relay.md", "sections": ["Usage", "Examples", "Configuration"]}], "tags": ["action_relay", "remote", "signal", "antenna", "channel", "cross_grid", "communication"], "version": {"schema": "1.0", "created": "2024-01-19", "completeness": "complete"}}
{"id": "automation.advanced_patterns.complex_sequences.v1", "category": "automation", "priority": "system", "token_count": 1193, "blocks": ["Timer Block", "Event Controller", "Sensor", "Action Relay", "Programmable Block"], "interfaces": [], "terminal_actions": ["Start", "Stop", "Loop", "Set up Actions"], "properties": [], "commands": [{"syntax": "Timer Chain", "parameters": ["timer1", "timer2", "timer3"], "example": "Timer1 starts Timer2, Timer2 starts Timer3"}, {"syntax": "Loop Control", "parameters": ["timer", "loop_action"], "example": "Last action of timer starts itself for continuous loop"}, {"syntax": "Reset Sequence", "parameters": ["reset_timer", "target_systems"], "example": "Single timer that resets all systems to known state"}], "automation_patterns": [{"pattern": "Sequential Automation", "blocks_required": ["Multiple Timer Blocks"], "setup": ["Split time-sensitive actions into separate timers", "Configure delays between timer executions", "Chain timers with Start actions", "Account for action completion times"], "toolbar_actions": ["Start", "Stop"]}, {"pattern": "Loop Systems", "blocks_required": ["Timer Block", "Stop Condition"], "setup": ["Configure timer to restart itself as last action", "Implement stop conditions with other blocks", "Use for continuous operations (patrol, monitoring)", "Include failsafe stops to prevent runaway loops"], "toolbar_actions": ["Start", "Stop", "Loop"]}, {"pattern": "State Machine", "blocks_required": ["Multiple Timers", "Event Controllers", "Sensors"], "setup": ["Define system states with separate timers", "Use Event Controllers for state transitions", "Implement state validation and error recovery", "Include reset mechanisms for unknown states"], "toolbar_actions": ["State transitions"]}, {"pattern": "Randomizer System", "blocks_required": ["Timer Block", "Sensor"], "setup": ["Create toggle timer that switches target on/off", "Use sensor to stop toggle at random moment", "Achieve 50/50 probability for events", "Useful for traps, mini-games, surprise events"], "toolbar_actions": ["Start randomizer", "Stop randomizer"]}], "constraints": {"grid_types": ["small", "large", "station"], "environment": ["space", "atmosphere", "planet"], "power_consumption_mw": 0.001, "pcu_cost": 75, "dependencies": ["multiple_automation_blocks"], "limits": {"max_range_m": 0, "max_speed_ms": 0, "instruction_cost": 0}}, "validation_rules": ["Timer delays: 1 second to 1 hour", "Timer accuracy not precise to milliseconds", "All actions in same timer execute simultaneously", "Sequential actions need separate timers with delays", "Loops require manual stop conditions", "Reset sequences essential for autonomous systems"], "common_failures": [{"error": "Actions executing simultaneously", "cause": "All actions in same timer block", "solution": "Use separate timers with appropriate delays"}, {"error": "Sequence gets out of sync", "cause": "Timers don't verify action completion", "solution": "Add buffer time to delays or use Event Controllers"}, {"error": "Runaway loop", "cause": "No stop condition implemented", "solution": "Always include stop mechanisms for looping systems"}], "sources": [{"type": "SEWiki", "path": "docs_chunked(SEWiki)/General/Timer_Block__part-003.md", "sections": ["Sequential Actions", "Loops", "Reset Systems"]}], "tags": ["sequences", "loops", "chains", "timers", "state_machine", "randomizer", "complex"], "version": {"schema": "1.0", "created": "2024-01-19", "completeness": "complete"}}